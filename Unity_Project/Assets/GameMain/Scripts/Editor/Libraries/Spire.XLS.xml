<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spire.XLS</name>
    </assembly>
    <members>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.calcID">
            used to force refreshing calculations
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.cell">
            Holds the cell being calculated.. set in CellModel.GetFormattedText.
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.formulaChar">
            internal char formulaChar;
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.gammaAs">
            http://lib.stat.cmu.edu/griffiths-hill/acm291
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.grid">
            the grid
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.lockDependencies">
            Used to avoid recursively setting dependencies when cells are being
            refreshed because a dependent cell changes.
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.refreshedCells">
            Used to prevent infinite refreshes on circular references.
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.STRING_E">
            "AND";
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.supportLogicalOperators">
            "OR";
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.TOKEN_add">
            "'"; //used to mark strings
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.TOKEN_multiply">
            Operator Parsing:
            CHAR_xxxx used in formulas; swapped for TOKEN_xxxx in parsed formula.
            TOKEN_xxxx is lowercase alpha char.
            STRING_xxxx identifiess the operators that require 2 characters; get mapped to CHAR_xxxx to fit into single char algorithm.
            lowercase letters used: abdefghjklmnopsu
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.TOKEN_ORop">
            'k'; //power
        </member>
        <member name="F:Spire.Xls.Calculation.CalcuateEngine.TRUEVALUESTR">
            private int TRUEVALUE = 1;
            private int FALSEVALUE = 0;
        </member>
        <member name="M:Spire.Xls.Calculation.CalcuateEngine.#cctor">
            needed to avoid problem with ASP.NET
        </member>
        <member name="P:Spire.Xls.Calculation.CalcuateEngine.IsSheeted">
            Used to determine if this CalcEngine instance is a member of
            several sheets. If so, then dependent cells are tracked through a static member
            so that they are known across instances.
        </member>
        <member name="M:Spire.Xls.Calculation.CalcuateEngine.AddToFormulaDependentCells(System.String)">
            Maintains a list of cells that a formula cell is dependent upon.
        </member>
        <member name="M:Spire.Xls.Calculation.CalcuateEngine.chidist(System.Double,System.Double)">
            uses guass quad to estimate the integral
        </member>
        <member name="M:Spire.Xls.Calculation.CalcuateEngine.ClearFormulaDependentCells(System.String)">
            When a formula cell changes, call this method to clear it from its dependent cells.
        </member>
        <member name="M:Spire.Xls.Calculation.CalcuateEngine.comb(System.Int32,System.Int32)">
            n things taken k at the time.
        </member>
        <!-- 对于成员“M:Spire.Xls.Calculation.CalcuateEngine.ComputeConcatenate(System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Spire.Xls.Calculation.CalcuateEngine.ComputeIndirect(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Xls.Calculation.CalcuateEngine.GetSheetTokenFromReference(System.String)">
            returns the sheet reference if any from the passed in cell or range.
        </member>
        <member name="M:Spire.Xls.Calculation.CalcuateEngine.PopString(System.Collections.Stack)">
            used for logical binary operators
        </member>
        <member name="F:Spire.Xls.Calculation.CalcWorksheet.inSerialization">
            Internal flag to note when object is being serialized.
        </member>
        <member name="M:Spire.Xls.Calculation.CalcWorkbook.#ctor(Spire.Xls.Calculation.CalcWorksheet[],System.Collections.Generic.Dictionary{System.String,System.String})">
            NameRanges keys must be upper case...
        </member>
        <member name="M:Spire.Xls.Compound.MemoryStorage.ContainsStorage(System.String)">
            <returns></returns>
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.ArabicLigaturizer.DIGITS_EN2AN">
            Digit shaping option: Replace European digits (U+0030...U+0039) by Arabic-Indic digits.
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.ArabicLigaturizer.DIGITS_AN2EN">
            Digit shaping option: Replace Arabic-Indic digits by European digits (U+0030...U+0039).
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.ArabicLigaturizer.DIGITS_EN2AN_INIT_LR">
            Digit shaping option:
            Replace European digits (U+0030...U+0039) by Arabic-Indic digits
            if the most recent strongly directional character
            is an Arabic letter (its Bidi direction value is RIGHT_TO_LEFT_ARABIC).
            The initial state at the start of the text is assumed to be not an Arabic,
            letter, so European digits at the start of the text will not change.
            Compare to DIGITS_ALEN2AN_INIT_AL.
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.ArabicLigaturizer.DIGITS_EN2AN_INIT_AL">
            Digit shaping option:
            Replace European digits (U+0030...U+0039) by Arabic-Indic digits
            if the most recent strongly directional character
            is an Arabic letter (its Bidi direction value is RIGHT_TO_LEFT_ARABIC).
            The initial state at the start of the text is assumed to be an Arabic,
            letter, so European digits at the start of the text will change.
            Compare to DIGITS_ALEN2AN_INT_LR.
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.ArabicLigaturizer.DIGITS_RESERVED">
            Not a valid option value. 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.ArabicLigaturizer.DIGITS_MASK">
            Bit mask for digit shaping options.
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.ArabicLigaturizer.DIGIT_TYPE_AN">
            Digit type option: Use Arabic-Indic digits (U+0660...U+0669).
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.ArabicLigaturizer.DIGIT_TYPE_AN_EXTENDED">
            Digit type option: Use Eastern (Extended) Arabic-Indic digits (U+06f0...U+06f9).
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.ArabicLigaturizer.DIGIT_TYPE_MASK">
            Bit mask for digit type options.
        </member>
        <member name="T:Spire.Xls.Core.Converter.Exporting.EMF.BidiLine">
            Does all the line bidirectional processing with PdfChunk assembly.
            
             @author Paulo Soares
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.L">
            Left-to-right
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.LRE">
            Left-to-Right Embedding 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.LRO">
            Left-to-Right Override 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.R">
            Right-to-Left 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.AL">
            Right-to-Left Arabic 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.RLE">
            Right-to-Left Embedding 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.RLO">
            Right-to-Left Override 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.PDF">
            Pop Directional Format 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.EN">
            European Number 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ES">
            European Number Separator 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ET">
            European Number Terminator 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.AN">
            Arabic Number 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.CS">
            Common Number Separator 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.NSM">
            Non-Spacing Mark 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.BN">
            Boundary Neutral 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.B">
            Paragraph Separator 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.S">
            Segment Separator 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.WS">
            Whitespace 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ON">
            Other Neutrals 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.TYPE_MIN">
            Minimum bidi type value. 
        </member>
        <member name="F:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.TYPE_MAX">
            Maximum bidi type value. 
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.#ctor(System.SByte[])">
             Initialize using an array of direction types.  Types range from TYPE_MIN to TYPE_MAX inclusive
             and represent the direction codes of the characters in the text.
            
             @param types the types array
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.#ctor(System.SByte[],System.SByte)">
             Initialize using an array of direction types and an externally supplied paragraph embedding level.
             The embedding level may be -1, 0, or 1.  -1 means to apply the default algorithm (rules P2 and P3),
             0 is for LTR paragraphs, and 1 is for RTL paragraphs.
            
             @param types the types array
             @param paragraphEmbeddingLevel the externally supplied paragraph embedding level.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.RunAlgorithm">
            The algorithm.
            Does not include line-based processing (Rules L1, L2).
            These are applied later in the line-based phase of the algorithm.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.DetermineParagraphEmbeddingLevel">
            1) determining the paragraph level.
            Rules P2, P3.
            At the end of this function, the member variable paragraphEmbeddingLevel is set to either 0 or 1.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.DetermineExplicitEmbeddingLevels">
            Process embedding format codes.
            Calls processEmbeddings to generate an embedding array from the explicit format codes.  The
            embedding overrides in the array are then applied to the result types, and the result levels are
            initialized.
            @see #processEmbeddings
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.RemoveExplicitCodes">
            Rules X9.
            Remove explicit codes so that they may be ignored during the remainder
            of the main portion of the algorithm.  The length of the resulting text
            is returned.
            @return the length of the data excluding explicit codes and BN.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ReinsertExplicitCodes(System.Int32)">
            Reinsert levels information for explicit codes.
            This is for ease of relating the level information
            to the original input data.  Note that the levels
            assigned to these codes are arbitrary, they're
            chosen so as to avoid breaking level runs.
            @param textLength the length of the data after compression
            @return the length of the data (original length of
            types array supplied to constructor)
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ProcessEmbeddings(System.SByte[],System.SByte)">
             2) determining explicit levels
             Rules X1 - X8
            
             The interaction of these rules makes handling them a bit complex.
             This examines resultTypes but does not modify it.  It returns embedding and
             override information in the result array.  The low 7 bits are the level, the high
             bit is set if the level is an override, and clear if it is an embedding.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ResolveWeakTypes(System.Int32,System.Int32,System.SByte,System.SByte,System.SByte)">
             3) resolving weak types
             Rules W1-W7.
            
             Note that some weak types (EN, AN) remain after this processing is complete.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ResolveNeutralTypes(System.Int32,System.Int32,System.SByte,System.SByte,System.SByte)">
            6) resolving neutral types
            Rules N1-N2.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ResolveImplicitLevels(System.Int32,System.Int32,System.SByte,System.SByte,System.SByte)">
            7) resolving implicit embedding levels
            Rules I1, I2.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ComputeMultilineReordering(System.SByte[],System.Int32[])">
            Return multiline reordering array for a given level array.
            Reordering does not occur across a line break.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ComputeReordering(System.SByte[])">
            Return reordering array for a given level array.  This reorders a single line.
            The reordering is a visual to logical map.  For example,
            the leftmost char is string.CharAt(order[0]).
            Rule L2.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.GetBaseLevel">
            Return the base level of the paragraph.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.IsWhitespace(System.SByte)">
            Return true if the type is considered a whitespace type for the line break rules.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.TypeForLevel(System.Int32)">
            Return the strong type (L or R) corresponding to the level.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.FindRunLimit(System.Int32,System.Int32,System.SByte[])">
            Return the limit of the run starting at index that includes only resultTypes in validSet.
            This checks the value at index, and will return index if that value is not in validSet.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.FindRunStart(System.Int32,System.SByte[])">
            Return the start of the run including index that includes only resultTypes in validSet.
            This assumes the value at index is valid, and does not check it.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.SetTypes(System.Int32,System.Int32,System.SByte)">
            Set resultTypes from start up to (but not including) limit to newType.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.SetLevels(System.Int32,System.Int32,System.SByte)">
            Set resultLevels from start up to (but not including) limit to newLevel.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ValidateTypes(System.SByte[])">
            Throw exception if type array is invalid.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ValidateParagraphEmbeddingLevel(System.SByte)">
            Throw exception if paragraph embedding level is invalid. Special allowance for -1 so that
            default processing can still be performed when using this API.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.BidiOrder.ValidateLineBreaks(System.Int32[],System.Int32)">
            Throw exception if line breaks array is invalid.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.EMF.VisualRender.AddDocumentProperties(Spire.Xls.Core.Converter.Spreadsheet.DocumentProperties.BuiltInDocumentPropertyCollection)">
            <summary>
            Adds the document properties.
            </summary>
            <param name="docProperties">The doc properties.</param>
        </member>
        <member name="M:Spire.Xls.Core.Converter.Exporting.Xls.XlsCellsDataWriter.WriteRKValues(Spire.Xls.Core.Converter.Exporting.Xls.DataOutStream,System.Collections.ArrayList,Spire.Xls.Core.Converter.Collections.IntArrayList,System.Collections.ArrayList,System.Int32,System.Int32)">
            
            @param listCellValue
            @param rowIdx
                      current row index
            @param colIdx
                      the last column index + 1
            @param RKTypes
            @return
        </member>
        <member name="M:Spire.Xls.Core.Converter.Rendering.Chart.Shapes.XLSXShaps.General.FillFormat_XLSXShape.SetGradient(System.Drawing.Color,System.Drawing.Color,Spire.Xls.Core.Converter.Rendering.Chart.Shapes.XLSXShaps.General.GradientStyleType_XLSXShape,Spire.Xls.Core.Converter.Rendering.Chart.Shapes.XLSXShaps.General.GradientOrder_XLSXShape,System.Drawing.Drawing2D.ColorBlend)">
            <summary>
            py add 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Converter.Spreadsheet.ExcelStyle.Font.ColorIndex">
            <summary>
            Represents the color palette of this worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Converter.Spreadsheet.ExcelStyle.Font.Script">
            <summary>
            Represents the font script format.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.BuiltIn.NormalDistribution.Normsinv(System.Double)">
            	      * Returns the inverse of the standard normal cumulative distribution. 
            		  * The distribution has a mean of zero and a standard deviation of one.
            	      * 
            	      * @param probability a probability corresponding to the normal distribution.
            	      * @return the inverse of the standard normal cumulative distribution.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.BuiltIn.NormalDistribution.Norminv(System.Double,System.Double,System.Double)">
            Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation.
            
            @param probability a probability corresponding to the normal distribution.
            @param mean the arithmetic mean of the distribution.
            @param standard_dev the standard deviation of the distribution.
            @return the inverse of the normal cumulative distribution for the specified mean and standard deviation.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.BuiltIn.Stat.GetGammaSeries(System.Double,System.Double)">
            You must ensure fA>0.0 and fX>0.0
                valid results only if fX less than or equal to fA+1.0
                uses power series 
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.BuiltIn.Stat.GetLowRegIGamma(System.Double,System.Double)">
            You must ensure fA>0.0 and fX>0.0) 
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.BuiltIn.Stat.GetUpRegIGamma(System.Double,System.Double)">
            You must ensure fA>0.0 and fX>0.0) 
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.Func(System.Double)">
            抽象函数：计算积分函数值，必须在派生类中覆盖该函数
            
            @param x - 函数变量
            @return double型，对应的函数值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.#ctor">
            基本构造函数
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.GetValueTrapezia(System.Double,System.Double,System.Double)">
            变步长梯形求积法
            
            调用时，须覆盖计算函数f(x)值的虚函数double Func(double x)
            
            @param a - 积分下限
            @param b - 积分上限，要求b>a
            @param eps - 积分精度要求
            @return double 型，积分值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.GetValueSimpson(System.Double,System.Double,System.Double)">
            变步长辛卜生求积法
            
            调用时，须覆盖计算函数f(x)值的虚函数double Func(double x)
            
            @param a - 积分下限
            @param b - 积分上限，要求b>a
            @param eps - 积分精度要求
            @return double 型，积分值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.GetValueATrapezia(System.Double,System.Double,System.Double,System.Double)">
            自适应梯形求积法
            
            调用时，须覆盖计算函数f(x)值的虚函数double Func(double x)
            
            @param a - 积分下限
            @param b - 积分上限，要求b>a
            @param d - 对积分区间进行分割的最小步长，当子区间的宽度
                       小于d时，即使没有满足精度要求，也不再往下进行分割
            @param eps - 积分精度要求
            @return double 型，积分值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.ppp(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double[])">
            内部函数
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.GetValueRomberg(System.Double,System.Double,System.Double)">
            龙贝格求积法
            
            调用时，须覆盖计算函数f(x)值的虚函数double Func(double x)
            
            @param a - 积分下限
            @param b - 积分上限，要求b>a
            @param eps - 积分精度要求
            @return double 型，积分值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.GetValuePq(System.Double,System.Double,System.Double)">
            计算一维积分的连分式法
            
            调用时，须覆盖计算函数f(x)值的虚函数double Func(double x)
            
            @param a - 积分下限
            @param b - 积分上限，要求b>a
            @param eps - 积分精度要求
            @return double 型，积分值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.GetValuePart(System.Double,System.Double,System.Int32,System.Int32,System.Double[],System.Double[],System.Double[])">
            高振荡函数求积法
            
            调用时，须覆盖计算函数f(x)值的虚函数double Func(double x)
            
            @param a - 积分下限
            @param b - 积分上限，要求b>a
            @param m - 被积函数中振荡函数的角频率
            @param n - 给定积分区间两端点上的导数最高阶数＋1
            @param fa - 一维数组，长度为n，存放f(x)在积分区间端点x=a处的各阶导数值
            @param fb - 一维数组，长度为n，存放f(x)在积分区间端点x=b处的各阶导数值
            @param s - 一维数组，长度为2，其中s(1)返回f(x)cos(mx)在积分区间的积分值，
                       s(2) 返回f(x)sin(mx)在积分区间的积分值
            @return double 型，积分值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.GetValueLegdGauss(System.Double,System.Double,System.Double)">
            勒让德－高斯求积法
            
            调用时，须覆盖计算函数f(x)值的虚函数double Func(double x)
            
            @param a - 积分下限
            @param b - 积分上限，要求b>a
            @param eps - 积分精度要求
            @return double 型，积分值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.GetValueLgreGauss">
            拉盖尔－高斯求积法
            
            调用时，须覆盖计算函数f(x)值的虚函数double Func(double x)
            
            @return double 型，积分值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.Integral.GetValueHermiteGauss">
            埃尔米特－高斯求积法
            
            调用时，须覆盖计算函数f(x)值的虚函数double Func(double x)
            
            @return double 型，积分值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.Func(System.Double)">
            虚函数：计算方程左端函数值，必须在引申类中覆盖该类函数
            
            @param x - 变量
            @return 函数值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.Func(System.Double[])">
            虚函数：计算方程左端函数值，必须在引申类中覆盖该类函数
            
            @param x - 变量值数组
            @return 函数值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.Func(System.Double,System.Double[])">
            虚函数：计算方程左端函数值，必须在引申类中覆盖该类函数
            
            @param x - 变量
            @param y - 函数值数组
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.Func(System.Double,System.Double)">
            虚函数：计算方程左端函数值，必须在引申类中覆盖该类函数
            
            @param x - 二元函数的变量
            @param y - 二元函数的变量
            @return 函数值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.Func(System.Double[],System.Double[])">
            虚函数：计算方程左端函数值，必须在引申类中覆盖该类函数
            
            @param x - 二元函数的变量值数组
            @param y - 二元函数的变量值数组
            @return 函数值
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.FuncMJ(System.Double[],System.Double[])">
            虚函数：计算方程左端函数值，必须在引申类中覆盖该类函数
            
            @param x - 已知变量值数组
            @param p - 已知函数值数组
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.#ctor">
            基本构造函数
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.GetRootBisect(System.Int32,System.Double[],System.Double,System.Double,System.Double,System.Double)">
            求非线性方程实根的对分法
            
            调用时，须覆盖计算方程左端函数f(x)值的虚函数
                   double Func(double x)
            
            @param nNumRoots - 在[xStart, xEnd]内实根个数的预估值
            @param x - 一维数组，长度为m。返回在区间[xStart, xEnd]内搜索到的实根，
                       实根个数由函数值返回
            @param xStart - 求根区间的左端点
            @param xEnd - 求根区间的右端点
            @param dblStep - 搜索求根时采用的步长
            @param eps - 精度控制参数
            @return int 型，求得的实根的数目
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.GetRootNewton(System.Double@,System.Int32,System.Double)">
            求非线性方程一个实根的牛顿法
            
            调用时，须覆盖计算方程左端函数f(x)及其一阶导数f'(x)值的虚函数:
            	void Func(double x, double[] y)
            	y(0) 返回f(x)的值
            	y(1) 返回f'(x)的值
            
            @param x - 传入迭代初值（猜测解），返回在区间求得的一个实根
            @param nMaxIt - 递归次数
            @param eps - 精度控制参数
            @return bool 型，求解是否成功
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.GetRootFisherWang(System.Double@,System.Double,System.Double,System.Double)">
            求单调函数方程一个实根的Fisher Wang迭代法
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.GetRootAitken(System.Double@,System.Int32,System.Double)">
            求非线性方程一个实根的埃特金迭代法
            
            调用时，须覆盖计算方程左端函数f(x)值的虚函数
                  double Func(double x)
            
            @param x - 传入迭代初值（猜测解），返回在区间求得的一个实根
            @param nMaxIt - 递归次数
            @param eps - 精度控制参数
            @return bool 型，求解是否成功
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.GetRootPq(System.Double@,System.Double)">
            求非线性方程一个实根的连分式解法
            
            调用时，须覆盖计算方程左端函数f(x)值的虚函数
                  double Func(double x)
            
            @param x - 传入迭代初值（猜测解），返回在区间求得的一个实根
            @param eps - 精度控制参数
            @return bool 型，求解是否成功
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.FormulaOP.Common.NLEquations.GetRoot_WangQI(System.Int32,System.Double[],System.Double,System.Double,System.Double,System.Double)">
            		     * 求非线性方程实根, 先使用二分法获得 根的大概范围 误差在1之内，
            		        而后使用割线法获得最后的根。
            		     * 
            		     * 调用时，须覆盖计算方程左端函数f(x)值的虚函数
            		     *        double Func(double x)
            		     * 
            		     * @param nNumRoots - 在[xStart, xEnd]内实根个数的预估值
            		     * @param x - 一维数组，长度为m。返回在区间[xStart, xEnd]内搜索到的实根，
            		     *            实根个数由函数值返回
            		     * @param xStart - 求根区间的左端点
            		     * @param xEnd - 求根区间的右端点
            		     * @param dblStep - 搜索求根时采用的步长
            		     * @param eps - 精度控制参数
            		     * @return int 型，求得的实根的数目
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.FormulaBinToTree.ConvertBinaryToString(System.Byte[],System.Int32,System.Int32)">
            Converts binary formula to string.
            Parameters are same with {@link FormulaTokenVisitor#resetFormula(byte[], int, int)}.
            @param buffer binary formula data
            @param startPos
            @param endPos
            @return String formula string starts with '='.
            @throws UnsupportedEncodingException
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.FormulaNodeStringUtil.NeedQuoteForOdsSheet(System.String)">
            Checks whether given string needs to be quoted for ODS file.
            
            @param str string to be checked.
            @return true if there are special characters in given string and the string needs to be quoted.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.FormulaNodeValueUtil.ParseCriteria(Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.Node.IFormulaNode,Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.FormulaRelInfo)">
            Parse criteria from given node.
            
            @param criteria node which represents the criteria.
            @param relInfo FormulaRelInfo
            @return null if the criteria will be always false.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.FormulaNodeValueUtil.GetParamValues(Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.Node.IFormulaNode[],Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.FormulaRelInfo,System.Int32,System.Double[],Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.FormulaValueAcceptedType)">
            Get the double values of given param list.
            
            @param arrParam
            @param relInfo
            @param int offset the offset in param list from which to convert values.
            @return If there is error param in given param list, returns this error param; If the param's value is invalid, returns #VALUE; Otherwise returns null.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.FormulaNodeValueUtil.GetParamValues(Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.Node.IFormulaNode[],Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.FormulaRelInfo,System.Int32,System.Boolean[])">
            Get the double values of given param list.
            
            @param params
            @param relInfo
            @param int offset the offset in param list from which to convert values.
            @return If there is error param in given param list, returns this error param; If the param's value is invalid, returns #VALUE; Otherwise returns null.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.FormulaNodeValueUtil.GetParamValues(Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.Node.IFormulaNode[],Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.FormulaRelInfo,System.Int32,System.String[])">
            Get the double values of given param list.
            
            @param arrParam
            @param relInfo
            @param int offset the offset in param list from which to convert values.
            @return If there is error param in given param list, returns this error param; If the param's value is invalid, returns #VALUE; Otherwise returns null.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.FormulaNodeValueUtil.GetParamValues(Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.Node.IFormulaNode[],Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.FormulaRelInfo,System.Int32,System.DateTime[],Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.FormulaValueAcceptedType)">
            Get the datetime values of given param list.
            
            @param arrParam
            @param relInfo
            @param int offset the offset in param list from which to convert values.
            @return If there is error param in given param list, returns this error param; If the param's value is invalid, returns #VALUE; Otherwise returns null.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.Node.FormulaNodeAbstract.ToString(System.Text.StringBuilder,Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.FormulaRelInfo)">
            Converts this node itself to String.
            Does not convert its children.
            @param sb buffer to append content.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.Node.FormulaNodeFunction.SetParams(Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.Node.IFormulaNode[])">
            Sets parameter nodes for this function.
            
            @param arrParams parameters. Every element is a parameter of this function.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.ResetFormula(System.Byte[],System.Int32,System.Int32)">
            Resets formula data for this iterator.
            
            @param formula the buffer that holds formula data.
            @param startPos start offset of formula data(inclusive), data at startPos should be tokenID(endPos is non-negative) or formula size(endPos is -1).
            @param endPos end offset of formula data(exclusive). -1 means data at startPos is formula's size.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.ReadReference(Spire.Xls.Core.Converter.Spreadsheet.Formula.Model.FormulaRelInfo)">
            Reads the CellRange from current token.
            If a valid CellRange has been read, the pointer will be moved to the next token.
            @param relInfo the relevant information of this formula. Such as Workbook/Worksheet, base position, owner such as Cell, Validation, ..., etc.
            @return CellRange if current token is a valid CellRange. Returns null if current token is not for CellRange or is AreaErr.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.ReadArray">
            Reads the data from current additional part.
            After read the pointer for additional data will be moved to the part of next token.
            @return the additional data.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.ReadString">
            Reads the String value from current token.
            If String value is in token's data, after read the pointer will be moved to the next token.
            If String value is in token's additional data, after read the additional data pointer will be moved to the next sub-token.
            @return String if current token is for String. Returns null if current token is not for String.
        </member>
        <member name="P:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.TokenPosition">
            Gets the position of current token in the formula.
            
            @return the position of current token in the formula.
        </member>
        <member name="P:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.AdditionalDataPosition">
            Gets the position of current additional data in the formula.
            
            @return the position of current additional data in the formula.
        </member>
        <member name="P:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.HasToken">
            Checks whether there is a token can be processed.
            
            @return false if this iterator has reached the end of formula.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.ToNextToken">
            Moves cursor from current token to the next token in formula.
            @return whether current token can be recognized.
        </member>
        <member name="M:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.ReadName(Spire.Xls.Core.Converter.Spreadsheet.WorkbookConverter)">
            Reads Name object from current token.
            If current token is for Name, after read the pointer will be moved to the next token.
            @param wb Workbook the formula is in.
            @return Name if current token is for Name. Returns null if current token is not for Name or Name is of external workbook.
        </member>
        <member name="P:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.IsCellAddress">
            Checks whether current token is CellAddress, inclues RefErr.
            
            @return true if current token is CellAddress.
        </member>
        <member name="P:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.IsCellRange">
            Checks whether current token is CellRange, includes AreaErr.
            
            @return true if current token is CellRange.
        </member>
        <member name="P:Spire.Xls.Core.Converter.Spreadsheet.Formula.Visitor.FormulaTokenVisitor.IsName">
            Checks whether current token is Name, inclues NameX.
            
            @return true if current token is Name.
        </member>
        <member name="P:Spire.Xls.Core.Converter.Spreadsheet.PivotTable.PivotTable.NumberOfColumnData">
            Gets number of the column data.
            @return
        </member>
        <member name="M:Spire.Xls.Core.Converter.Internal.Rendering.PngChunkVisitor.ProcessChunk">
            Processes one chunk in png file.
            Default behavior is move to next chunk directly.
            When calling this method, the pointer in png stream is just at the begin of data block of current chunk.
            After this call, the pointer in png stream must be at the end of this chunk(after the crc block).
            @return whether continue to process following chunks. If false be returned, visitor will stop to read and process following chunks.
        </member>
        <member name="P:Spire.Xls.Core.Converter.Internal.Rendering.PngChunkVisitor.ChunkPosition">
            Gets the start position of current chunk in the png data.
            
            @return the start position of current chunk in the png data(data size, chunk code, chunk data, crc).
        </member>
        <member name="P:Spire.Xls.Core.Converter.Internal.Rendering.PngChunkVisitor.ChunkCode">
            Gets current chunk code.
            
            @return current chunk code.
        </member>
        <member name="P:Spire.Xls.Core.Converter.Internal.Rendering.PngChunkVisitor.ChunkDataSize">
            Gets current chunk's data size.
            
            @return current chunk's data size(crc is not included).
        </member>
        <member name="M:Spire.Xls.Core.Converter.Internal.Format.FormatRelInfo.BuildDefaultYMD(System.String,System.String,System.String,System.String,System.String,System.String,System.Text.StringBuilder)">
            Builds year/month/day pattern in corresponding locale's default order.
            
            @param patternY pattern of year field, such as "yyyy" or "yy"
            @param suffixY suffix following year field
            @param patternM pattern of month field, such as "MM"
            @param suffixM suffix following month field
            @param patternD pattern of day field, such as "dd"
            @param suffixD suffix following day field.
            @param buffer buffer for appending resultant built pattern, can be null.
            @return if buffer is not null, then append the resultant pattern into and return it. Otherwise create new one and append resultant pattern into and return the new one.
        </member>
        <member name="M:Spire.Xls.Core.FormatParser.FormatSectionCollection.Clone(System.Object)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="parent">Represents parent object.</param>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="F:Spire.Xls.Core.FormatParser.FormatTokens.InsignificantDigitToken.m_bHideIfZero">
            <summary>
            Indicates that we shouldn't show string value if digit is zero.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IChartSerie.ErrorBarsY">
            <summary>
            Represents Y error bars. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IChartSerie.HasErrorBarsY">
            <summary>
            Indicates if serie contains Y error bars.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IChartSerie.ErrorBarsX">
            <summary>
            Represents X error bars. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IChartSerie.HasErrorBarsX">
            <summary>
            Indicates if serie contains X error bars.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IChartSerie.TrendLines">
            <summary>
            Represents serie trend lines collection. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IChartTrendLine.Formula">
            <summary>
            Return trendline formula. Read only.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.ILines">
            <summary>
            This interface represents Lines collection inside single worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILines.Count">
            <summary>
            Returns number of items in the collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILines.Item(System.Int32)">
            <summary>
            Returns single item from the collection.
            </summary>
            <param name="index">Item's index to get.</param>
            <returns>Single item from the collection.</returns>
        </member>
        <member name="M:Spire.Xls.Core.IShapes.AddLine(System.Drawing.Point,System.Drawing.Point,Spire.Xls.LineShapeType)">
            <summary>
            Adds new text line to the collection.
            </summary>
            <param name="startPoint">startPoint</param>
            <param name="endPoint">endPoint</param>
            <param name="lineShapeType">lineShapeType</param>
            <returns>Newly created line.</returns>
        </member>
        <member name="M:Spire.Xls.Core.IShapes.AddOval(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Add new oval shape in the collection.
            </summary>
            <param name="leftcolumn">0-1000</param>
            <param name="toprow">0-1000</param>
            <param name="rightcolumn">0-1000</param>
            <param name="bottowrow">0-1000</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Xls.Core.ITextBoxes">
            <summary>
            This interface represents TextBoxes collection inside single worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ITextBoxes.Count">
            <summary>
            Returns number of items in the collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ITextBoxes.Item(System.Int32)">
            <summary>
            Returns single item from the collection.
            </summary>
            <param name="index">Item's index to get.</param>
            <returns>Single item from the collection.</returns>
        </member>
        <member name="M:Spire.Xls.Core.ITextBoxes.AddTextBox(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds new item to the collection.
            </summary>
            <param name="row">One-based row index of the top-left corner of the new item.</param>
            <param name="column">One-based column index of the top-left corner of the new item.</param>
            <param name="height">Height in pixels of the new item.</param>
            <param name="width">Width in pixels of the new item.</param>
            <returns>Newly added item.</returns>
        </member>
        <member name="T:Spire.Xls.Core.ICloneParent">
            <summary>
            Supports cloning, which creates a new instance of a class
            with the same value as an existing instance.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.ICloneParent.Clone(System.Object)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="parent">Parent object for a copy of this instance.</param>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="E:Spire.Xls.Core.IInnerApp.OnPasswordRequired">
            <summary>
            This event is fired when user tries to open password protected workbook
            without specifying password. It is used to obtain password.
            </summary>
        </member>
        <member name="E:Spire.Xls.Core.IInnerApp.OnWrongPassword">
            <summary>
            This event is fired when user specified wrong password when trying to open
            password protected workbook. It is used to obtain correct password.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IXLSRange.EnvalutedValue">
            <summary>
            Returns the calculated value of a formula using the most current inputs.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Xls.Core.IWorkbook.CreateTemplateMarkersProcessor”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Xls.Core.IWorkbook.SaveAs(System.IO.Stream)">
            <summary>
            Saves changes to the specified stream.
            </summary>
            <param name="stream">Stream that will receive workbook data.</param>
        </member>
        <member name="P:Spire.Xls.Core.IOleObject.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Spire.Xls.Core.IOleObject.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Xls.Core.IOleObject.Picture">
            <summary>
            Gets or sets the picture.
            </summary>
            <value>The picture.</value>
        </member>
        <member name="P:Spire.Xls.Core.IOleObject.Shape">
            <summary>
            Gets or sets picture shape object that defines look and position of the OleObject inside parent worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IOleObject.DisplayAsIcon">
            <summary>
            Gets or sets a value indicating whether [display as icon].
            </summary>
            <value><c>true</c> if [display as icon]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Xls.Core.IOleObject.ObjectType">
            <summary>
            Gets or sets the type of the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IOleObject.OleData">
            <summary>
            Gets or sets the  native data.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.IOleObjects.Add(System.String,System.Drawing.Image,Spire.Xls.OleLinkType)">
            <summary>
            Adds new ole object to the collection.
            </summary>
            <param name="fileName">File name.</param>
            <param name="image">File image.</param>
            <param name="linkType">Link type.</param>
        </member>
        <member name="P:Spire.Xls.Core.IPivotTableOptions.IsAutoFormat">
            <summary>
            Indicates whether the PivotTable has an autoformat applied.
             Checkbox "autofit column width on update"which in pivot table Options :Layout Format for Excel 2007
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.ICheckBox">
            <summary>
            This interface represents TextBox form control shape.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.IComboBoxShape">
            <summary>
            This interface provides access to the combo box shape properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IComboBoxShape.ListFillRange">
            <summary>
            Gets or sets the worksheet range used to XlsFill the specified list box.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IComboBoxShape.LinkedCell">
            <summary>
            Gets or sets the worksheet range linked to the control's value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IComboBoxShape.SelectedIndex">
            <summary>
            Gets or sets selected item index of the combo box.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IComboBoxShape.DropDownLines">
            <summary>
            Gets or sets the number of list lines displayed in the drop-down portion of a combo box.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IComboBoxShape.Display3DShading">
            <summary>
            Gets or sets value indicating whether 3D shadow is present.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IComboBoxShape.SelectedValue">
            <summary>
            Gets value selected in combobox.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.Color">
            <summary>
            line color
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.BeginArrowHeadStyle">
            <summary>
            Begin Arrow Head Style
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.BeginArrowheadLength">
            <summary>
            Begin Arrow head Length
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.BeginArrowheadWidth">
            <summary>
            Begin Arrow head Width
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.EndArrowHeadStyle">
            <summary>
            End Arrow Head Style
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.EndArrowheadLength">
            <summary>
            End Arrow head Length
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.EndArrowheadWidth">
            <summary>
            End Arrow head Width
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.DashStyle">
            <summary>
            DashStyle
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.Style">
            <summary>
            Style
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.Transparency">
            <summary>
            Transparency 
            value 0---1
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.Weight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ILineShape.MiddleOffsetPercent">
            <summary>
            MiddleOffsetPercent 
            Set middle point value , 
            when middle point localed at back of start point  value is less than 0
            when middle point  localed at start point  value is 0
            when middle point  localed at end point  value is 1
            when middle point localed at back of end point  value is greater than 0
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.IPrstGeomShape">
            <summary>
            This interface represents preset shape form control shape.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.IPrstGeomShapes">
            <summary>
            This interface represents preset shape collection inside single worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IPrstGeomShapes.Count">
            <summary>
            Returns number of items in the collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IPrstGeomShapes.Item(System.Int32)">
            <summary>
            Returns single item from the collection.
            </summary>
            <param name="index">Item's index to get.</param>
            <returns>Single item from the collection.</returns>
        </member>
        <member name="M:Spire.Xls.Core.IPrstGeomShapes.AddPrstGeomShape(System.Int32,System.Int32,System.Int32,System.Int32,Spire.Xls.PrstGeomShapeType)">
            <summary>
            Adds new item to the collection.
            </summary>
            <param name="row">One-based row index of the top-left corner of the new item.</param>
            <param name="column">One-based column index of the top-left corner of the new item.</param>
            <param name="height">Height in pixels of the new item.</param>
            <param name="width">Width in pixels of the new item.</param>
            <returns>Newly added item.</returns>
        </member>
        <!-- 对于成员“P:Spire.Xls.Core.IShape.OnAction”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Xls.Core.IShape.ResizeBehave">
            <summary>
            Specifies all possible settings for how drawing object shall be resized when the rows and columns between its start and ending anchor are resized or inserted(ComboBoxShape and CheckBoxShape and RadioButtonShape set MoveAndResize type value is invalid)
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.ITextBox">
            <summary>
            This interface represents TextBox form control.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.ITextBoxLinkShape">
            <summary>
            This interface represents TextBox form control shape.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.ITextBoxLinkShape.FormulaLink">
            <summary>
            Text of the comment.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.IListObjectColumn">
            <summary>
            Represents single column in the list object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IListObjectColumn.Name">
            <summary>
            Gets or sets name of the column.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IListObjectColumn.Index">
            <summary>
            Gets column index.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IListObjectColumn.TotalsCalculation">
            <summary>
            Gets or sets function used for totals calculation.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IListObjectColumn.TotalsRowLabel">
            <summary>
            Gets or sets label of the totals row.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.IListObjectColumn.CalculatedFormula">
            <summary>
            Gets or sets calculated formula value.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.IListObjects">
            <summary>
            This interface represents collection of ListObjects in the worksheet.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.IListObjects.Create(System.String,Spire.Xls.Core.IXLSRange)">
            <summary>
            Creates new list object and adds it to the collection.
            </summary>
            <param name="name">Name of the new list object.</param>
            <param name="range">Destination range.</param>
            <returns>Newly created object.</returns>
        </member>
        <member name="P:Spire.Xls.Core.IFillColor.ForeGroundKnownColor">
            <summary>
            Represents foreground excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Parser.Biff_Records.BookBoolRecord.SaveLinkValue">
            If zero, then save external linked values.
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.BoundSheetRecord">
            <exclude/>
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.ChartRecord">
            
        </member>
        <member name="P:Spire.Xls.Core.Parser.Biff_Records.Charts.ChartBoppopRecord.IsShowLeaderLines">
            <summary>
            Indicates whether shows leader lines to data labels.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.CloneUtils">
            <exclude/>
        </member>
        <member name="P:Spire.Xls.Core.Parser.Biff_Records.ColumnInfoRecord.IsPhenotic">
            <summary>
            Gets or sets a value indicating if the phonetic information should be displayed by default for the affected column(s) of the worksheet.
            </summary>
            <value>
            	<c>true</c> if this instance is phenotic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Spire.Xls.Core.Parser.Biff_Records.ExtendedFormatRecord.m_b123Prefix">
            
        </member>
        <member name="P:Spire.Xls.Core.Parser.Biff_Records.ExtendedFormatRecord._123Prefix">
            
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.ExtSSTRecord">
            <exclude/>
        </member>
        <member name="P:Spire.Xls.Core.Parser.Biff_Records.Formula.AttrPtg.HasBaxcel">
            
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.Formula.BinaryOperationPtg">
            <exclude/>
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.Formula.ErrorPtg">
            <exclude/>
        </member>
        <member name="P:Spire.Xls.Core.Parser.Biff_Records.Formula.ErrorCodeAttribute.StringValue">
            
        </member>
        <member name="P:Spire.Xls.Core.Parser.Biff_Records.Formula.ErrorCodeAttribute.ErrorCode">
            
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.IndexRecord">
            <exclude/>
        </member>
        <member name="F:Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsoOptions.PictureTransParent">
            <summary>
            Represents the Transparent color
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsoOptions.BlipBooleanProperties">
            <summary>
            specify a 32-bit field of Boolean properties for the BLIP style.
            [MS-ODRAWXML].pdf "2.3.23.35 Blip Boolean Properties"
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsoOptions.ShapeBooleanProperties">
            <summary>
            specify a 32-bit field of Boolean properties for a shape
            [MS-ODRAWXML].pdf  "2.3.2.12 Shape Boolean Properties"
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Parser.Biff_Records.PivotTable.PivotViewFieldsExRecord.m_bSubTotalTop">
            <summary>
            indicates whether show all subtotals at top of group
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Parser.Biff_Records.PivotTable.PivotViewFieldsExRecord.SubTotalTop">
            <summary>
            indicates whether show all subtotals at top of group
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Parser.Biff_Records.SSTRecord.m_bAutoAttach">
            
        </member>
        <member name="M:Spire.Xls.Core.Parser.Biff_Records.TextObjectRecord.InfillInternalData(Spire.Xls.ExcelVersion)">
            an internal data array, m_data. This method is called by
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.UnknownBeginRecord">
            
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.UnknownMarkerRecord">
            
        </member>
        <member name="F:Spire.Xls.Core.Parser.Biff_Records.BiffContinueRecordRaw.m_extractor">
            
        </member>
        <member name="F:Spire.Xls.Core.Parser.Biff_Records.BiffContinueRecordRaw.m_iIntLen">
            
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.BiffRecordRaw">
            
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.ContinueRecordBuilder">
            <exclude/>
        </member>
        <member name="T:Spire.Xls.Core.Parser.Biff_Records.RecordArrayList">
            
        </member>
        <member name="T:Spire.Xls.Core.Parser.BiffWriter">
            
        </member>
        <member name="F:Spire.Xls.Core.Parser.BiffWriter.m_writer">
            
        </member>
        <member name="P:Spire.Xls.Core.Parser.BiffWriter.BaseStream">
            
        </member>
        <member name="M:Spire.Xls.Core.Parser.BiffWriter.#ctor">
            
        </member>
        <member name="M:Spire.Xls.Core.Parser.BiffWriter.#ctor(System.IO.Stream)">
            
        </member>
        <member name="M:Spire.Xls.Core.Parser.BiffWriter.#ctor(System.IO.Stream,System.Boolean)">
            
        </member>
        <member name="M:Spire.Xls.Core.Parser.BiffWriter.Dispose">
            
        </member>
        <member name="M:Spire.Xls.Core.Parser.BiffWriter.WriteRecord(Spire.Xls.Core.Parser.Biff_Records.BiffRecordRaw,Spire.Xls.Core.Spreadsheet.Security.IEncryptor)">
            
        </member>
        <member name="M:Spire.Xls.Core.Parser.BiffWriter.WriteRecord(Spire.Xls.Core.Parser.Biff_Records.RecordArrayList,Spire.Xls.Core.Spreadsheet.Security.IEncryptor)">
            
        </member>
        <member name="M:Spire.Xls.Core.Parser.BiffWriter.WriteRecord(System.Collections.ICollection,Spire.Xls.Core.Spreadsheet.Security.IEncryptor)">
            
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.CustomFilter.FilterOperatorType">
            <summary>
            Gets and sets the filter operator type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.CustomFilter.Criteria">
            <summary>
            Gets and sets the criteria.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.CustomFilterCollection.And">
            <summary>
            Indicates whether the two criterias have an "and" relationship. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.CustomFilterCollection.Item(System.Int32)">
            <summary>
            Gets the custom filter in the specific index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.AutoFilter.DynamicFilter.#ctor(Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.DynamicFilter.DynamicFilterType">
            <summary>
            Gets and sets the dynamic filter type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.DynamicFilter.Value">
            <summary>
            Gets and sets the dynamic filter value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.DynamicFilter.MaxValue">
            <summary>
            Gets and sets the dynamic filter max value.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.m_isand">
            <summary>
            Logical AND of FirstCondtion and SecondCondition.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.m_isSimple2">
            <summary>
            True if the second condition is a simple equality.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.m_isSimple1">
            <summary>
            True if the first condition is a simple equality.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.ShowTopItem">
            <summary>
            The top items to display in Top10Items mode.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.IsTop10Items">
            <summary>
            Highest-valued 10 items displayed 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.IsTop10Percent">
            <summary>
            Highest-valued 10 items displayed (percentage specified in condition)
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.Top10Items">
            <summary>
            number of items display in Top10Items mode.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.m_secondCondition">
            <summary>
            Second condition of autofilter.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.Visibledropdown">
            <summary>
             Indicates whether the AutoFilter button for this column is visible.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.HasFirstCondition">
            <summary>
            First condition used.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn.HasSecondCondition">
            <summary>
            Second condition used
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.AutoFilter.MultipleFilterCollection.RemoveDateFilter(Spire.Xls.Core.Spreadsheet.AutoFilter.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Remove a date in the filter.
            </summary>
            <param name="type"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.CellBaseStyle.LeftBorderColor">
            <summary>
            Get/set LeftBorder color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.CellBaseStyle.RightBorderColor">
            <summary>
            Get/set RightBorder color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.CellBaseStyle.LeftBorderLineStyle">
            <summary>
            Gets / sets line style of the left border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.CellBaseStyle.RightBorderLineStyle">
            <summary>
            Gets / sets line style of the right border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.CellBaseStyle.TopBorderLineStyle">
            <summary>
            Gets / sets line style of the top border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.CellBaseStyle.BottomBorderLineStyle">
            <summary>
            Gets / sets line style of the top border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.ChartDataTableXls.HasHorzBorder">
            <summary>
            Indicates whether data table has horizontal border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.ChartDataTableXls.HasVertBorder">
            <summary>
            Indicates whether data table has vertical border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.ChartDataTableXls.HasBorders">
            <summary>
            Indicate whether data table has borders.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.ChartDataTableXls.ShowSeriesKeys">
            <summary>
            Indicates whehter series keys in the data table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.ChartDataTableXls.TextArea">
            <summary>
            Gets text area of data table.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTrendLine.trendLineLabel">
            <summary>
            Represents trendline trendLineLabel.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTrendLine.Forward">
            Represents number of periods that the trendline extends forward.
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTrendLine.TrendLineLabel">
            <summary>
            Represents trendline trendLineLabel.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTrendLine.Formula">
            <summary>
            Return trendline formula. Read only.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTrendLine.CheckOrder(System.Int32)">
            <param name="value">Represents order value.</param>
        </member>
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.Charts.ChartLegendEntriesColl.m_hashEntries”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Xls.Core.Spreadsheet.Charts.XlsChart">
            <summary>
            Represents the Excel Chart object.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.m_pivotSource">
            <summary>
            Pivot source string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.Rotation">
            <summary>
            Gets or sets the rotation of the 3-D chart view
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.Elevation">
            <summary>
            Returns or sets the elevation of the 3-D chart view(0 to +90 degrees).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.Perspective">
            <summary>
            Returns or sets the perspective for the 3-D chart view.(0- 100)
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.PivotTable">
            <summary>
            Gets or sets the pivot table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.HasPivotTable">
            <summary>
            Indicates whether contains pivot table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DisplayEntireFieldButtons">
            <summary>
            Indicates whether show all field buttons.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DisplayValueFieldButtons">
            <summary>
            Gets or sets a value indicating whether [show value field buttons].
            </summary>
        </member>
        <!-- 对于成员“P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DisplayAxisFieldButtons”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DisplayLegendFieldButtons">
            <summary>
            Gets or sets a value indicating whether [show legend field buttons].
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.HeightPercent">
            <summary>
            Returns or sets the height of a 3-D chart as a percentage of the chart width.(5-500).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DepthPercent">
            <summary>
            Returns or sets the depth of a 3-D chart as a percentage of the chart width(20-2000).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.GapDepth">
            <summary>
            Returns or sets the distance between the data series in a 3-D chart.(0-500 )
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.RightAngleAxes">
            <summary>
            True if the chart axes are at right angles, independent of chart rotation or elevation.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.AutoScaling">
            <summary>
            Indicates whether Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.WallsAndGridlines2D">
            <summary>
            Inidcates whether gridlines are drawn two-dimensionally on a 3-D chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.ChartType">
            <summary>
            Type of the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.SeriesDataFromRange">
            <summary>
            Indicates series are in rows in DataRange;
            otherwise False.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.ChartTitle">
            <summary>
            Title of the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.CategoryAxisTitle">
            <summary>
            Title of the category axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.ValueAxisTitle">
            <summary>
            Title of the value axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.SecondaryCategoryAxisTitle">
            <summary>
            Title of the secondary category axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.SecondaryValueAxisTitle">
            <summary>
            Title of the secondary value axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.SeriesAxisTitle">
            <summary>
            Title of the series axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.XPos">
            <summary>
            X coordinate of the upper-left corner
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.YPos">
            <summary>
            Y coordinate of the upper-left corner
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.Width">
            <summary>
            Width of the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.Height">
            <summary>
            Height of the chart in points.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.HasChartArea">
            <summary>
            Indicates whether chart has chart area.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.HasPlotArea">
            <summary>
            Indicates whether chart has plot area.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.HasDataTable">
            <summary>
            True if the chart has a data table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.HasLegend">
            <summary>
            Indicates whether the chart has a legend object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DisplayBlanksAs">
            <summary>
            Represents the way that blank cells are plotted on a chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.PlotVisibleOnly">
            <summary>
            True if only visible cells are plotted. False if both visible and hidden cells are plotted.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.SizeWithWindow">
            <summary>
            True if Microsoft Excel resizes the chart to match the size of the chart sheet window.
            False if the chart size isn't attached to the window size. Applies only to chart sheets.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.SupportWallsAndFloor">
            <summary>
            Indicates whether this chart supports walls and floor. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.ProtectDrawingObjects">
            <summary>
            True if objects are protected. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.ProtectScenarios">
            <summary>
            True if the scenarios of the current sheet are protected. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.Protection">
            <summary>
            Gets protected options. Read-only. For sets protection options use "Protect" method.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.TabKnownColor">
            <summary>
            Tab excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsCategoryAxisAvail">
            <summary>
            Indicates whether chart has a category axis. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsValueAxisAvail">
            <summary>
            Indicates whehter chart has a value axis. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsSeriesAxisAvail">
            <summary>
            Indicates if chart has a series axis. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsStacked">
            <summary>
            Returns True if chart is stacked. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChart_100">
            <summary>
            Returns True if chart is 100%. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChart3D">
            <summary>
            Returns True if chart is 3D. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsPivot3DChart">
            <summary>
            Gets a value indicating whether this instance is pivot 3D chart .
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartLine">
            <summary>
            Returns True if chart is line. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.NeedDataFormat">
            <summary>
            Returns True if chart needs data format to be saved. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.NeedMarkerFormat">
            <summary>
            Returns True if chart needs marker format to be saved. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartBar">
            <summary>
            Returns True if chart is a bar chart. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartPyramid">
            <summary>
            Returns True if chart is a pyramid shape. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartCone">
            <summary>
            Returns True if chart is a conical shape. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartCylinder">
            <summary>
            Returns True if chart is a cylinder shape. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartBubble">
            <summary>
            Returns True if chart is a bubble chart. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartDoughnut">
            <summary>
            Returns True if chart is a doughnut chart. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartVeryColor">
            <summary>
            Returns True if chart should have a different color for each series value. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartExploded">
            <summary>
            Returns True if chart is exploded. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsSeriesLines">
            <summary>
            Returns True if chart has series lines. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.CanChartHaveSeriesLines">
            <summary>
            Returns True if chart can have series lines. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartScatter">
            <summary>
            Returns True if chart is a scatter chart. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DefaultLinePattern">
            <summary>
            Returns default line pattern for the chart. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartSmoothedLine">
            <summary>
            Returns True if chart has smoothed lines. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartStock">
            <summary>
            Returns True if this is a stock chart. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.NeedDropBar">
            <summary>
            Returns True if chart needs drop bars to be saved. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartVolume">
            <summary>
            Returns True if chart is a stock chart with volume. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsPerspective">
            <summary>
            Returns True if chart has perspective. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsClustered">
            <summary>
            Returns True if chart is a clustered chart. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.NoPlotArea">
            <summary>
            Returns True if chart has no plot area. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartRadar">
            <summary>
            Returns True if chart is a radar chart. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartPie">
            <summary>
            Returns True if chart is a pie chart. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartWalls">
            <summary>
            Returns True if chart has walls. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsChartFloor">
            <summary>
            Returns True if chart has floor. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsSecondaryCategoryAxisAvail">
            <summary>
            Returns True if secondary category axis present. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsSecondaryValueAxisAvail">
            <summary>
            Returns True if secondary value axis present. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsSecondaryAxes">
            <summary>
            Returns True if at least one of the secondary axes is present. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsSpecialDataLabels">
            <summary>
            Returns True if chart needs special data labels serialization.
            Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.CanChartPercentageLabel">
            <summary>
            Returns True if chart can have percentage data labels. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.CanChartBubbleLabel">
            <summary>
            Returns True if chart can have bubble data labels. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsManuallyFormatted">
            <summary>
            Indicates whether chart was manually formatted.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.ChartStartType">
            <summary>
            Returns start type of chart type. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DestinationType">
            <summary>
            Gets chart type after type change.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.Style">
            <summary>
            Style index for Excel 2007 chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.HasFloor">
            <summary>
            Gets value indicating whether floor object was created.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.HasWalls">
            <summary>
            Gets value indicating whether floor object was created.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.PivotFormatsStream">
            <summary>
            Gets or sets pivot formats stream.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.ZoomToFit">
            <summary>
            Gets or sets zoomToFit value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DefaultProtectionOptions">
            <summary>
            Gets default protection options for the worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.IsEmbeded">
            <summary>
            Gets value indicating whether chart is embeded into worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.DefaultTextIndex">
            <summary>
            Gets font index from the default font records.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.HasChartTitle">
            <summary>
            Indicates wheather the chart has title
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.Font">
            <summary>
            Gets font which used for displaying axis text .
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.GetIsChartPie(Spire.Xls.ExcelChartType)">
            <summary>
            Indicates whether specified charttype is pie chart.
            </summary>
            <param name="chartType">Represents chart type to check.</param>
            <returns>Value indicating whether specified chart type is pie chart.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.Clone(System.Object)">
            <summary>
            Clones current instance.
            </summary>
            <param name="parent">Parent object.</param>
            <returns>Returns clone of current object.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChart.MarkUsedReferences(System.Boolean[])">
            <summary>
            Sets items with used reference indexes to true.
            </summary>
            <param name="usedItems">Array to mark used references in.</param>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.Charts.PivotOptions16">
             <summary>
            some excel verision 2016 spicel attribute;
            may be there are many attributes,but we have no related documents,so we add only attribute.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.AxisType">
            <summary>
            Type of the axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.IsPrimary">
            <summary>
            True if this is primary axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.Title">
            <summary>
            Title of the axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.Vert">
            <summary>
            Text rotation angle.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.TitleArea">
            <summary>
            Returns text area for the axis title. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.HasMinorGridLines">
            <summary>
            True if the axis has minor gridlines. Only axes in the primary axis group can have gridlines.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.HasMajorGridLines">
            <summary>
            True if the axis has major gridlines. Only axes in the primary axis group can have gridlines.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.NumberFormatIndex">
            <summary>
            Gets or sets format index.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.NumberFormat">
            <summary>
            Gets or sets number format string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.TickLabelPosition">
            <summary>
            Represents tick label position.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.MultiLevelLable">
            <summary>
            Axis is show Multi-level category lables.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.Visible">
            <summary>
            Indicates is axis is visible.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.Alignment">
            <summary>
            Represents alignment for the tick label.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.IsReversed">
            <summary>
            True if plots data points from last to first.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.IsReverseOrder">
            <summary>
            True if plots data points from last to first.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.AxisId">
            <summary>
            Gets axis id.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.Shadow">
            <summary>
            Represents the Shadow.Read-only
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.FrameFormat">
            <summary>
            Return frame format of Axis. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.HasAxisTitle">
            <summary>
            Indicates wheather the axis has title
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis.ParagraphType">
            <summary>
            Represents the TextArea Paragraph 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartBorder.Color">
            <summary>
            Color of line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartBorder.Pattern">
            <summary>
            Line pattern.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartBorder.Weight">
            <summary>
            Weight of line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartBorder.DrawTickLabels">
            <summary>
            Indicates whether show tick labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartBorder.UseDefaultLineColor">
            <summary>
            Indicates if custom line color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartBorder.KnownColor">
            <summary>
            Line  excel color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.useParent">
            <summary>
            Value axis crosses at the far right category.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.CrossingPoint">
            <summary>
            Represents the point on the axis another axis crosses it.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.LabelFrequency">
            <summary>
            Frequency of labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.TickLabelSpacing">
            <summary>
            Represents the number of categories or series between tick-mark labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.TickMarksFrequency">
            <summary>
            Frequency of tick marks.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.TickMarkSpacing">
            <summary>
            Represents the number of categories or series between tick marks.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.AxisBetweenCategories">
            <summary>
            True if the value axis crosses the category axis between categories
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.IsReverseOrder">
            <summary>
            Categories in reverse order.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.EnteredDirectlyCategoryLabels">
            <summary>
            Entered directly category labels for the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.CategoryType">
            <summary>
            Represents axis category type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.Offset">
            <summary>
            Represents distance between the labels and axis line.
            The value can be from 0 through 1000.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.BaseUnit">
            <summary>
            Represents base unit for the specified category axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.BaseUnitIsAuto">
            <summary>
            True if use automatic base units for the specified category axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.IsAutoMajor">
            <summary>
            Automatic major selected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.IsAutoMinor">
            <summary>
            Automatic minor selected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.IsAutoCross">
            <summary>
            Automatic category crossing point selected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.IsAutoMax">
            <summary>
            Automatic maximum selected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.IsAutoMin">
            <summary>
            Automatic minimum selected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.MajorUnit">
            <summary>
            Value of major increment.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.MinorUnit">
            <summary>
            Value of minor increment.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.MajorUnitScale">
            <summary>
            Represens the major unit scale value for the category axis
             when the CategoryType property is set to TimeScale.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.MinorUnitScale">
            <summary>
            Represens the minor unit scale value for the category axis
             when the CategoryType property is set to TimeScale.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartCategoryAxis.ParseData(Spire.Xls.Core.Parser.Biff_Records.BiffRecordRaw,System.Collections.Generic.IList{Spire.Xls.Core.Parser.Biff_Records.BiffRecordRaw},System.Int32@)">
            <param name="record">Represents data to parse.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.ValueFromCell">
            <summary>
            Set Range for value. above Excel 2013
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.HasSeriesName">
            <summary>
            Indicates whether series name is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.HasCategoryName">
            <summary>
            Indicates whether category name is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.HasValue">
            <summary>
            Indicates whether value is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.HasPercentage">
            <summary>
            Indicates whether percentage is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.HasBubbleSize">
            <summary>
            Indicates whether buble size is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.Delimiter">
            <summary>
            Delimeter.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.HasLegendKey">
            <summary>
            Indicates whether legend key is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.Position">
            <summary>
            Represents data labels position.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.BackgroundMode">
            <summary>
            Gets or sets display mode of the background.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsAutoMode">
            <summary>
            True if background is set to automatic.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.Text">
            <summary>
            Text of area.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.TextRotationAngle">
            <summary>
            Text rotation angle.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsBold">
            <summary>
            True if the font is bold. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.Color">
            <summary>
            Gets or sets font color. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsItalic">
            <summary>
            True if the font style is italic. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.Size">
            <summary>
            Returns or sets the size of the font. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsStrikethrough">
            <summary>
            True if the font is struck through with a horizontal line.
            Read / write Boolean
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsSubscript">
            <summary>
            True if the font is formatted as subscript.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsSuperscript">
            <summary>
            True if the font is formatted as superscript. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.Underline">
            <summary>
            Returns or sets the type of font underline.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.FontName">
            <summary>
            Gets or sets the font name. Read / write string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.VerticalAlignment">
            <summary>
            Gets or sets font vertical alignment.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.LayoutStream">
            <summary>
            Gets or sets layout stream for Excel 2007.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.HasManualLayout">
            <summary>
            Indicates whether border formatting object was created. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.X">
            <summary>
            X-position of upper-left corner. 1/4000 of chart plot.
            IsXMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.Y">
            <summary>
            Y-position of upper-left corner. 1/4000 of chart plot. 
            IsYMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.Width">
            <summary>
            X-size. 1/4000 of chart plot. IsWMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.Height">
            <summary>
            Y-size. 1/4000 of chart plot. IsHMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsWMode">
            <summary>
            false value Specifies that the Width shall be interpreted
            as the Right of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsHMode">
            <summary>
            false value Specifies that the Height shall be interpreted
            as the Bottom of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsXMode">
            <summary>
            true value Specifies that the X shall be interpreted
            as the Left of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.IsYMode">
            <summary>
            true value Specifies that the Y shall be interpreted
            as the Top of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.HasTextRotation">
            <summary>
            Gets value indicating whether TextRotation was changed. Read-only.
            </summary>
        </member>
        <!-- 对于成员“P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.NumberFormat”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.HasFormula">
            <summary>
            Gets or sets a value indicating whether this instance has formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataLabels.isRead">
            <summary>
            Gets or sets a value indicating whether this instance has formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataPoint.Index">
            <summary>
            Gets or sets index of the point in the points collection.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDataPointsCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.HasInterior">
            <summary>
            Indicates whether interior object was created. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.Shadow">
            <summary>
            Represents the Shadow.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.Format3D">
            <summary>
            Gets the 3D chart options.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.HasLineProperties">
            <summary>
            Indicates whether border formatting object was created. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.GapWidth">
            <summary>
            Gets or sets drop bar gap width.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.Interior">
            <summary>
            Returns interior object. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.LineProperties">
            <summary>
            Returns object, that represents line properties. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.Fill">
            <summary>
            RepresentsFill options.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.ForeGroundColorObject">
            <summary>
            Gets or sets foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.BackGroundColor">
            <summary>
            Gets or sets background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.BackGroundKnownColor">
            <summary>
            Gets or sets background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.Pattern">
            <summary>
            Gets pattern.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.IsAutomaticFormat">
            <summary>
            Gets if use automatic format.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartDropBar.Visible">
            <summary>
            Gets or sets visiblity.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsVeryColor">
            <summary>
            Vary color for each data point.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsVaryColor">
            <summary>
            Vary color for each data point.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.SerieDataFormat">
            <summary>
            Returns data format. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.Overlap">
            <summary>
            Space between bars ( -100 : 100 ).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsHorizontalBar">
            <summary>
            True for horizontal bars (bar chart).
            False for vertical bars (column chart).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.StackValuesBar">
            <summary>
            Stack the displayed values.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.ShowAsPercentsBar">
            <summary>
            Each category is displayed as a percentage.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.StackValuesLine">
            <summary>
            Stack the displayed values.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.ShowAsPercentsLine">
            <summary>
            Each category is broken down as a percentage.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.HasShadowLine">
            <summary>
            True if this line has a shadow.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.HasShadowPie">
            <summary>
            True if this pie has a shadow.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsShowLeaderLines">
            <summary>
            True to show leader lines to data labels.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.haswedgecallout">
            <summary>
            True to has wedge rect callout to data lables
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.SizeRepresents">
            <summary>
            Returns or sets what the bubble size represents on a bubble chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsBubbles">
            <summary>
            True if this a bubble series.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.ShowNegativeBubbles">
            <summary>
            True to show negative bubbles.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.HasShadowScatter">
            <summary>
            True if bubble series has a shadow.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsStacked">
            <summary>
            Series in this group are stacked.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsCategoryBrokenDown">
            <summary>
            Each category is broken down as a percentage.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsAreaShadowed">
            <summary>
            This area has a shadow.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsFillSurface">
            <summary>
            True if chart contains color XlsFill for surface.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.Is3DPhongShade">
            <summary>
            True if this surface chart has shading.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.HasShadowRadar">
            <summary>
            True if this radar series has a shadow.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.HasRadarAxisLabels">
            <summary>
            Indicates whether radar chart has axis labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.PieChartType">
            <summary>
            Chart pie type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.UseDefaultSplitValue">
            <summary>
            True to use default split value; otherwise False.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.SplitType">
            <summary>
            Returns or sets the way the two sections of either a pie
            of pie chart or a bar of pie chart are split.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.SplitValue">
            <summary>
            Returns or sets the threshold value separating the two sections of either a pie of pie chart or a bar of pie chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.SplitPercent">
            <summary>
            For split = 2, what percentage should go to the other pie / bar.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.PieSecondSize">
            <summary>
            Returns or sets the size of the secondary section of either a pie of pie chart or 
            a bar of pie chart, as a percentage of the size of the primary pie.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.Gap">
            <summary>
            Space between the first pie and the second.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.NumSplitValue">
            <summary>
            For split = 1, what values should go to the other pie / bar.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsSeriesName">
            <summary>
            If true serie has name.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsCategoryName">
            <summary>
            If true category has name.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.HasValue">
            <summary>
            If true has value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsPercentage">
            <summary>
            If true has percentage.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsBubbleSize">
            <summary>
            If true buble has size.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.DelimiterLength">
            <summary>
            Gets delimiter length.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.Delimiter">
            <summary>
            Gets or sets delimiter.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.LineStyle">
            <summary>
            Drop lines / hi-lo lines:
            0 = drop lines
            1 = hi-lo lines
            2 = series lines (the lines that connect the columns in a stacked column chart)
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsDefaultRotation">
            <summary>
            Indicates whether rotation has default value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsDefaultElevation">
            <summary>
            Indicates whether elevation has default value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.Rotation">
            <summary>
            Returns or sets the rotation of the 3-D chart view
            (the rotation of the plot area around the z-axis, in degrees).(0 to 360 degrees).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.Elevation">
            <summary>
            Gets or sets the elevation of the 3-D chart view, in degrees (0 to +90 degrees).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.Perspective">
            <summary>
            Returns or sets the perspective for the 3-D chart view.( 0 - 100 )
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.HeightPercent">
            <summary>
            Returns or sets the height of a 3-D chart as a percentage of the chart width
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.DepthPercent">
            <summary>
            Returns or sets the depth of a 3-D chart as a percentage of the chart width
            (between 20 and 2000 percent).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.GapDepth">
            <summary>
            Returns or sets the distance between the data series in a 3-D chart, as a percentage of the marker width.( 0 - 500 )
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.RightAngleAxes">
            <summary>
            True if the chart axes are at right angles, independent of chart rotation or elevation.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsClustered">
            <summary>
            3D columns are clustered or stacked.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.AutoScaling">
            <summary>
            True if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.WallsAndGridlines2D">
            <summary>
            True if gridlines are drawn two-dimensionally on a 3-D chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsChartChartLine">
            <summary>
            If true - format contains chart chart line record. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsChartLineFormat">
            <summary>
            If true - format contains series line. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsDropBar">
            <summary>
            If true - format contains drop bar record. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.DrawingZOrder">
            <summary>
            Drawing order (0 = bottom of the z-order).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.FormatRecordType">
            <summary>
            Represents type code of major format record type. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.Is3D">
            <summary>
            If true - serie 3D; otherwise serie 2D. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.DataFormatOrNull">
            <summary>
            Returns dataformat or null; Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsMarker">
            <summary>
            If true - format has marker; otherwise false. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsLine">
            <summary>
            If true - format has line; otherwise false. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormat.IsSmoothed">
            <summary>
            If true - format has smothed line; otherwise false. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFormatCollection.NeedSecondaryAxis">
            <summary>
            Returns true if this collection is primary and contain series that need
            secondary axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.HasInterior">
            <summary>
            Indicates whether interior object was created. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.HasLineProperties">
            <summary>
            Indicates whether border formatting object was created. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.Border">
            <summary>
            Gets chart border. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.Fill">
            <summary>
            Represents XlsFill gradient format. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.RectangleStyle">
            <summary>
            Rectangle style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.IsAutoSize">
            <summary>
            Calculates size automatically.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.IsAutoPosition">
            <summary>
            Calculates position automatically.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.IsBorderCornersRound">
            <summary>
            Gets or sets if border corners is round.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.LineProperties">
            <summary>
            Gets chart border. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.HasManualLayout">
            <summary>
            Indicates whether border formatting object was created. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.X">
            <summary>
            X-position of upper-left corner. 1/4000 of chart plot.
            IsXMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.Y">
            <summary>
            Y-position of upper-left corner. 1/4000 of chart plot. 
            IsYMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.Width">
            <summary>
            X-size. 1/4000 of chart plot. IsWMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.Height">
            <summary>
            Y-size. 1/4000 of chart plot. IsHMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.IsWMode">
            <summary>
            false value Specifies that the Width shall be interpreted
            as the Right of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.IsHMode">
            <summary>
            false value Specifies that the Height shall be interpreted
            as the Bottom of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.IsXMode">
            <summary>
            true value Specifies that the X shall be interpreted
            as the Left of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartFrameFormat.IsYMode">
            <summary>
            true value Specifies that the Y shall be interpreted
            as the Top of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartGridLine.Border">
            <summary>
            Gets line border. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartGridLine.LineProperties">
            <summary>
            Gets line border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartGridLine.HasLineProperties">
            <summary>
            Indicates whether line formatting object was created.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartGridLine.AxisLineType">
            <summary>
            Gets or sets axis line type.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.m_hashPat">
            <summary>
            Represents hash table to convert ExcelPatternType to excelgradient pattern.
            key - ExcelPatternType, value - ExcelGradientPattern.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.#cctor">
            <summary>
            Initialize all static members.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.ForegroundColorObject">
            <summary>
            Foreground color (RGB).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.BackgroundColorObject">
            <summary>
            Background color (RGB).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.ForegroundColor">
            <summary>
            Foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.BackgroundColor">
            <summary>
            Background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.Pattern">
            <summary>
            Area pattern.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.ForegroundKnownColor">
            <summary>
            Foreground excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.BackgroundKnownColor">
            <summary>
            Background excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.UseDefaultFormat">
            <summary>
            Indicates whether use default format.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.SwapColorsOnNegative">
            <summary>
            Foreground and background are swapped when the data value is negative.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartInterior.InitForFrameFormat(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initialize interior for frame format.
            </summary>
            <param name="bIs3DChart">Represents is 3d chart.</param>
            <param name="bIsAutoSize">Indicate is autosize interior.</param>
            <param name="bIsInteriorGray">Indicates is interior is gray.</param>
            <param name="bIsGray50">Indicates is default color is gray_50.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.IncludeInLayout">
            <summary>
            Show legend without overlapping. Default is True.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.X">
            <summary>
            X-position of upper-left corner. 1/4000 of chart plot.
            IsXMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.Y">
            <summary>
            Y-position of upper-left corner. 1/4000 of chart plot. 
            IsYMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.IsWMode">
            <summary>
            false value Specifies that the Width shall be interpreted
            as the Right of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.IsHMode">
            <summary>
            false value Specifies that the Height shall be interpreted
            as the Bottom of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.IsXMode">
            <summary>
            true value Specifies that the X shall be interpreted
            as the Left of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.IsYMode">
            <summary>
            true value Specifies that the Y shall be interpreted
            as the Top of the chart element..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.Position">
            <summary>
            Legend position type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.IsVerticalLegend">
            <summary>
            Indicates whether if vertical legend.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.Width">
            <summary>
            X-size. 1/4000 of chart plot. IsWMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.Height">
            <summary>
            Y-size. 1/4000 of chart plot. IsHMode Shall set to True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.HasDataTable">
            <summary>
            True if chart contains data table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.Spacing">
            <summary>
            Spacing:
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.AutoPosition">
            <summary>
            Automatic positioning .
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.AutoSeries">
            <summary>
            Automatic series distribution .
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.AutoPositionX">
            <summary>
            X positioning is automatic.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegend.AutoPositionY">
            <summary>
            Y positioning is automatic.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegendEntry.IsDeleted">
            <summary>
            Indicates whether the entry has been deleted. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegendEntry.IsFormatted">
            <summary>
            Indicates whether the legend entry has been formatted.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegendEntry.LegendEntityIndex">
            <summary>
            Legend-entry index.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartLegendEntry.Index">
            <summary>
            Represents index in collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.Name">
            <summary>
            Name of the series.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.UsePrimaryAxis">
            <summary>
            Indicates whether to use primary axis for series drawing.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.EnteredDircetlyNames">
            <summary>
            Represents name as entered directly.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.EnteredDirectlyValues">
            <summary>
            Represents value as entered directly.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.EnteredDirectlyCategoryLabels">
            <summary>
            Represents category values as entered directly.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.EnteredDirectlyBubbles">
            <summary>
            Represents bubble values as entered directly.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ErrorBarsY">
            <summary>
            Represents Y error bars. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.HasErrorBarsY">
            <summary>
            Indicates if serie contains Y error bars.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ErrorBarsX">
            <summary>
            Represents X error bars. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.HasErrorBarsX">
            <summary>
            Indicates if serie contains X error bars.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.TrendLines">
            <summary>
            Represents serie trend lines collection. Read only.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ErrorBar(System.Boolean)">
            <summary>
            Creates error bar object.
            </summary>
            <param name="bIsY">If true - on Y axis; otherwise on X axis.</param>
            <returns>Return error bar objcet.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ErrorBar(System.Boolean,Spire.Xls.ErrorBarIncludeType)">
            <summary>
            Creates error bar object.
            </summary>
            <param name="bIsY">If true - on Y axis; otherwise on X axis.</param>
            <param name="include">Represents include type.</param>
            <returns>Return error bar objcet.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ErrorBar(System.Boolean,Spire.Xls.ErrorBarIncludeType,Spire.Xls.ErrorBarType)">
            <summary>
            Creates error bar object.
            </summary>
            <param name="bIsY">If true - on Y axis; otherwise on X axis.</param>
            <param name="include">Represents include type.</param>
            <param name="type">Represents error bar type.</param>
            <returns>Return error bar objcet.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ErrorBar(System.Boolean,Spire.Xls.ErrorBarIncludeType,Spire.Xls.ErrorBarType,System.Double)">
            <summary>
            Creates error bar object.
            </summary>
            <param name="bIsY">If true - on Y axis; otherwise on X axis.</param>
            <param name="include">Represents include type.</param>
            <param name="type">Represents error bar type.</param>
            <param name="numberValue">Represents number value.</param>
            <returns>Returns error bar objcet.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ErrorBar(System.Boolean,Spire.Xls.Core.IXLSRange,Spire.Xls.Core.IXLSRange)">
            <summary>
            Sets custom error bar type.
            </summary>
            <param name="bIsY">If true - on Y axis; otherwise on X axis.</param>
            <param name="plusRange">Represents plus range.</param>
            <param name="minusRange">Represents minus range.</param>
            <returns>Returns error bar object.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ParseErrorBars(System.Collections.IList)">
            <summary>
            Parses error bars.
            </summary>
            <param name="data">Represents data holder.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.UpdateErrorBar(Spire.Xls.Core.Spreadsheet.Charts.XlsChartErrorBars,Spire.Xls.Core.Spreadsheet.Charts.XlsChartErrorBars@)">
            <summary>
            Updates error bars.
            </summary>
            <param name="bar">Reprsents current error bar.</param>
            <param name="barToUpdate">Represents error bar to update.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.GetCommonSerieFormat">
            <summary>
            Gets common serie format.
            </summary>
            <returns>Returns common serie format.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.Index">
            <summary>
            Represents index of the series.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.Number">
            <summary>
            Number of the series.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.IsDefaultName">
            <summary>
            Indicates whether series has default title.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.PointNumber">
            <summary>
            Returns number of points in the series. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.StartType">
            <summary>
            Returns serie start type. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ParseSerieNotDefaultText">
            <summary>
            Represents not default serie text for first serie. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ParentSeries">
            <summary>
            Gets parent serie collection. Read - only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ParentChart">
            <summary>
            Represents parent chart. Read - only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.ParentBook">
            <summary>
            Gets parent workbook. Read - only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie.InvertNegaColor">
            <summary>
            Indicates wheter to invert its colors if the value is negative.
            </summary>
        </member>
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.m_3D”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.m_fill”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.HasLineProperties">
            <summary>
            Indicating whether line properites are created.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.HasInterior">
            <summary>
            Indicating whether interior object was created.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.BarType">
            <summary>
            Represents the base data format.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.BarTopType">
            <summary>
            Represents the top data format type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsAutoMarker">
            <summary>
            Automatic color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsShowBackground">
            <summary>
            True = "background = none".
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsShowForeground">
            <summary>
            True = "foreground = none".
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.Percent">
            <summary>
            Distance of pie slice from center of pie.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.Is3DBubbles">
            <summary>
            True to draw bubbles with 3D effects.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsShadow">
            <summary>
            True if this series has a shadow.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.ShowActiveValue">
            <summary>
            Indicates whether chart show active value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.ShowPieInPercents">
            <summary>
            Show value as a percent of the total.(pie charts only).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.ShowPieCategoryLabel">
            <summary>
            Show category label and value as a percentage (pie charts only).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.SmoothLine">
            <summary>
            Show smoothed line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.ShowCategoryLabel">
            <summary>
            Show category label.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.ShowBubble">
            <summary>
            Show bubble sizes.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.Fill">
            <summary>
            Represents XlsFill options. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsSupportFill">
            <summary>
            Indicats whether chart supports transparency.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.Options">
            <summary>
            Gets common serie options. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsMarkerSupported">
            <summary>
            Indicates whether marker is supported by this chart/series.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.Interior">
            <summary>
            Returns object, that represents area properties. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsInteriorSupported">
            <summary>
            Indicates whether interior object is supported. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsBorderSupported">
            <summary>
            Indicates whether border object is supported. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.Has_dPtPieExplosion">
            <summary>
            Indicates whether dataformat has PieExplosion.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.HasBorder">
            <summary>
            Indicates whether chart has border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.SeriesNumber">
            <summary>
            Gets or sets serie number.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsMarker">
            <summary>
            If true - format has marker; otherwise false. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.HasBorderLine">
            <summary>
            Indicates whethers chart has border line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsSmoothed">
            <summary>
            If true - format has smothed line; otherwise false. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.SerieType">
            <summary>
            Gets serie type. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsFormatted">
            <summary>
            Indicate if data format is formatted.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.ForeGroundColor">
            <summary>
            Represents foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.ForeGroundKnownColor">
            <summary>
            Represents foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.MarkerBackColorObject">
            <summary>
            Gets object that holds marker background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.MarkerForeColorObject">
            <summary>
            Gets object that holds marker foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.MarkerTransparencyValue">
            <summary>
            Gets or sets the transparency of the line marker.
            </summary>
            <value>The transparency.</value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.ForeGroundColorObject">
            <summary>
            Represents foreground color object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.BackGroundKnownColor">
            <summary>
            Represents background excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.BackGroundColor">
            <summary>
            Represents background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.BackGroundColorObject">
            <summary>
            Represents background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.Pattern">
            <summary>
            Represents pattern.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.IsAutomaticFormat">
            <summary>
            Indicates, if automatic format is used.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerieDataFormat.Visible">
            <summary>
            Represents visiblity.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSeriesAxis.LabelsFrequency">
            <summary>
            Represents the number of categories or series between tick-mark labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSeriesAxis.TickLabelSpacing">
            <summary>
            Represents the number of categories or series between tick-mark labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSeriesAxis.TickMarkSpacing">
            <summary>
            Represents the number of categories or series between tick marks.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSeriesAxis.IsReverseOrder">
            <summary>
            Display categories in reverse order.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartSeriesAxis.TextLinkType">
            <summary>
            Returns title area. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.IsBold">
            <summary>
            True if the font is bold. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.KnownColor">
            <summary>
            Returns or sets the primary color of the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.Color">
            <summary>
            Gets or sets color. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.IsItalic">
            <summary>
            True if the font style is italic. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.Size">
            <summary>
            Returns or sets the size of the font. Read / write Variant.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.IsStrikethrough">
            <summary>
            True if the font is struck through with a horizontal line.
            Read / write Boolean
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.IsSubscript">
            <summary>
            True if the font is formatted as subscript.
            False by default. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.IsSuperscript">
            <summary>
            True if the font is formatted as superscript. False by default.
            Read/write Boolean
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.Underline">
            <summary>
            Returns or sets the type of underline applied to the font.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.FontName">
            <summary>
            Returns or sets the font name. Read / write string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.VerticalAlignment">
            <summary>
            Returns or sets font vertical alignment.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.Text">
            <summary>
            Gets or sets text.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.TextRotationAngle">
            <summary>
            Text rotation angle. between -90 and 90.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.NumberFormat">
            <summary>
            Gets or sets number format for the text area.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.NumberFormatIndex">
            <summary>
            Gets index to the number format. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.HasDataLabels">
            <summary>
            Indicates whether contain dataLabels .
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.BackgroundMode">
            <summary>
            Display mode of the background.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.IsAutoMode">
            <summary>
            True if background is set to automatic.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.IsTrend">
            <summary>
            Indicates if current text assign to trend object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.IsAutoColor">
            <summary>
            Indicates whether color has automatic color. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.HasSeriesName">
            <summary>
            Indicates whether series name is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.HasCategoryName">
            <summary>
            Indicates whether category name is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.HasValue">
            <summary>
            Indicates whether value is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.HasPercentage">
            <summary>
            Indicates whether percentage is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.HasBubbleSize">
            <summary>
            Indicates whether buble size is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.Delimiter">
            <summary>
            Delimeter.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.HasLegendKey">
            <summary>
            Indicates whether legend key is in data labels.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.Position">
            <summary>
            Represents data labels position.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.IsShowLabelPercent">
            <summary>
            Indicates whether to show category label and value as percentage.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.OColor">
            <summary>
            Returns textarea's color object. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartTextArea.Font">
            <summary>
            Returns FontImpl for current font. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.LogBase">
            <summary>
            Represents the logarithmic base. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.MinValue">
            <summary>
            Maximum value on axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.MinorUnit">
            <summary>
            Value of minor increment.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.CrossValue">
            <summary>
            Value of category axis crosses.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.CrossesAt">
            <summary>
            Represents the point on the axis another axis crosses it.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.IsAutoMajor">
            <summary>
            Automatic major selected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.IsAutoMinor">
            <summary>
            Automatic minor selected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.IsAutoCross">
            <summary>
            Automatic category crossing point selected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.IsLogScale">
            <summary>
            Logarithmic scale.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.IsReverseOrder">
            <summary>
            Values in reverse order.
            </summary>
            
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.DisplayUnitCustom">
            <summary>
            Represents custom unit to display.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.DisplayUnit">
            <summary>
            Returns or sets the unit label for the specified axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.HasDisplayUnitLabel">
            <summary>
            True if the label is displayed on the specified axis.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.SerializeDisplayUnits(Spire.Xls.Core.Parser.Biff_Records.RecordArrayList)">
            <summary>
            Serialize display units.
            </summary>
            <param name="records">Represents records storage.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Charts.XlsChartValueAxis.CreateDispalayUnitLabel">
            <summary>
            Creates display unit label.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.Fill">
            <summary>
            Represents XlsFill properties. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.HasInterior">
            <summary>
            Indicates whether interior object was created. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.ForeGroundColor">
            <summary>
            Represents foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.ForeGroundKnownColor">
            <summary>
            Represents foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.ForeGroundColorObject">
            <summary>
            Represents foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.BackGroundColor">
            <summary>
            Represents background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.BackGroundKnownColor">
            <summary>
            Represents background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.BackGroundColorObject">
            <summary>
            Represents background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.Pattern">
            <summary>
            Represents pattern.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.IsAutomaticFormat">
            <summary>
            Represents if use automatic format.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Charts.XlsChartWallOrFloor.Visible">
            <summary>
            Represents visible.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.Grouping.FontGroup.VerticalAlignment">
            <summary>
            Gets or sets font vertical alignment.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.Grouping.PageSetupGroup.AutoFirstPageNumber">
            <summary>
            Indicates whether summary rows will appear below detail in outlines.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.Grouping.RangeGroup.HasDataValidation">
            <summary>
            Indicates whether specified range object has data validation.
            If Range is not single cell, then returns true only if all cells have data validation. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.Grouping.RangeGroup.Item(System.String,System.Boolean)">
            <summary>
            Get cell range. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.Grouping.RangeGroup.BuiltInStyle">
            <summary>
            Gets/sets built in style.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.RangeGroup.Activate(System.Boolean)">
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.RichTextStringGroup.BeginUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.RichTextStringGroup.EndUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.CreateMigrantRange">
            <summary>
            Creates migrant range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.View">
            <summary>
            Gets or sets the view setting of the sheet.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.Item(System.String,System.Boolean)">
            <summary>
            Get cell range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.TopVisibleRow">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.SetColumnWidthInPixels(System.Int32,System.Int32)">
            <summary>
            Sets column width.
            </summary>
            <param name="iColumnIndex">One-based column index.</param>
            <param name="value">Width in pixels to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.SetColumnWidthInPixels(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set Column width from start Column index to End Column index
            </summary>
            <param name="iStartColumnIndex">start Column index</param>
            <param name="iCount">No of Column to be set width</param>
            <param name="value">Value to set in pixels</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.DeleteColumn(System.Int32,System.Int32)">
            <summary>
            Removes specified column (without updating formulas).
            </summary>
            <param name="index">One-based column index to remove.</param>
            <param name="count">Number of columns to delete.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.SaveToFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            Save tabsheet using separator.
            </summary>
            <param name="fileName">File to save.</param>
            <param name="separator">Current seperator.</param>
            <param name="encoding">Encoding to use.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.SaveToStream(System.IO.Stream,System.String)">
            <summary>
            Save tabsheet using separator.
            </summary>
            <param name="stream">Stream to save. </param>
            <param name="separator">Current seperator.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.Grouping.WorksheetGroup.SaveToStream(System.IO.Stream,System.String,System.Text.Encoding)">
            <summary>
            Save tabsheet using separator.
            </summary>
            <param name="stream">Stream to save. </param>
            <param name="separator">Current seperator.</param>
            <param name="encoding">Encoding to use.</param>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.Collections.RadioButtonCollection">
            <summary>
            Represents worksheet's RadioButton collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.RadioButtonCollection.Item(System.Int32)">
            <summary>
            Returns single item from the collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.RadioButtonCollection.Item(System.String)">
            <summary>
            Gets single item from the collection.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.RadioButtonCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds new RadioButton to the collection.
            </summary>
            <param name="row">Top row for the new shape.</param>
            <param name="column">Left column for the new shape.</param>
            <param name="height">Height in pixels of the new shape.</param>
            <param name="width">Width in pixels of the new shape.</param>
            <returns>Newly created TextBox object.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.RadioButtonCollection.Add">
            <summary>
            Adds Option button default Dimension
            </summary>
            <returns>returns option button shape</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.RadioButtonCollection.Add(System.Int32,System.Int32)">
            <summary>
            Adds the Shape with default size
            </summary>
            <param name="row">Top row for the new shape.</param>
            <param name="column">Left column for the new shape</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.Collections.PrstGeomShapeCollection">
            <summary>
            Represents worksheet's preset shape collection.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.PrstGeomShapeCollection.AddPrstGeomShape(System.Int32,System.Int32,System.Int32,System.Int32,Spire.Xls.PrstGeomShapeType)">
            <summary>
            Add a preset shape to prstgeomshape collection;
            </summary>
            <param name="row">shape's first row number in worksheet</param>
            <param name="column">shape's first column number in worksheet</param>
            <param name="width">shape's width</param>
            <param name="height">shape's height</param>
            <param name="shapeType">shape's type</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.PrstGeomShapeCollection.RemoveAt(System.Int32)">
            <summary>
            Remove item by index based 0;
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.PrstGeomShapeCollection.Remove(Spire.Xls.Core.IShape)">
            <summary>
            Remove a shape in collection;
            </summary>
            <param name="shape">the shape to remove</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.RecordTable.Workbook">
            <summary>
            Returns parent workbook. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.RowStorage.UpdateLabelSSTIndexes(System.Collections.Generic.Dictionary{System.Int32,System.Int32},Spire.Xls.Core.Spreadsheet.IncreaseIndex)">
            <param name="dictUpdatedIndexes">Dictionary with indexes to update, key - old index, value - new index.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.RowStorage.CreateMultiRecord(Spire.Xls.Core.Parser.Biff_Records.TBIFFRecord)">
            <param name="subCode">Type of sub record.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.SFTable.#ctor(Spire.Xls.Core.Spreadsheet.Collections.SFTable,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Spire.Xls.Core.Spreadsheet.Collections.SFTable" />
            class and optional copies of data from an existing table.
            </summary>
            <param name="data">Table to copy.</param>
            <param name="clone">Indicates whether to copy data.</param>
            <param name="parent">Parent object for the new items.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.ShapeCollectionBase.Clone(System.Object)">
            <summary>
            Creates copy of the collection.
            </summary>
            <param name="parent">Parent object for the new collection.</param>
            <returns>Copy of the collection.</returns>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.Collections.XFExternsionPropertyCollection">
            <summary>
            对应B模型同类名的类，用于扩展的CellXF解析，03格式下的ExtProp Record
            部分参照B模型，并没有完全实现
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsAddInFunctionsCollection.Add(System.String,System.String)">
            <summary>
            Adds new add-in function.
            </summary>
            <param name="fileName">File name.</param>
            <param name="functionName">Function name.</param>
            <returns>Index of the new function.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsAddInFunctionsCollection.Add(System.String)">
            <summary>
            Adds new add-in function.
            </summary>
            <param name="functionName">Function to add.</param>
            <returns>Index of the added function.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsAddInFunctionsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes add-in function with specified index.
            </summary>
            <param name="index">Item index to remove.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsAddInFunctionsCollection.CopyFrom(Spire.Xls.Core.Spreadsheet.Collections.XlsAddInFunctionsCollection)">
            <summary>
            
            </summary>
            <param name="addinFunctions"></param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsAutoFiltersCollection.AddressR1C1">
            <summary>
            Gets addres of filtered range in R1C1 style. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsAutoFiltersCollection.DefaultNamedRangeName">
            <summary>
            Gets default autofilter named range name.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBordersCollection.KnownColor">
            <summary>
            Returns or sets the primary excel color of the object. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBordersCollection.Color">
            <summary>
            Returns or sets the primary color of the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBordersCollection.LineStyle">
            <summary>
            Returns or sets the line style for the border.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Contains(Spire.Xls.BuiltInPropertyType)">
            <summary>
            Indicates whether collection contains specified property.
            </summary>
            <param name="index">Property id.</param>
            <returns>True if collection contains specified property.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Title">
            <summary>
            Gets/Sets title document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Subject">
            <summary>
            Gets/Sets subject document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Author">
            <summary>
            Gets/Sets author document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Keywords">
            <summary>
            Gets/Sets keywords document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Comments">
            <summary>
            Gets/Sets comments document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Template">
            <summary>
            Gets/Sets template document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.LastAuthor">
            <summary>
            Gets/Sets LastAuthor document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.RevisionNumber">
            <summary>
            Gets/Sets revision number document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.EditTime">
            <summary>
            Gets/Sets EditTime document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.LastPrinted">
            <summary>
            Gets/Sets LastPrinted document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.CreatedTime">
            <summary>
            Gets/Sets CreationDate document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.LastSaveTime">
            <summary>
            Gets/Sets LastSaveDate document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.PageCount">
            <summary>
            Gets/Sets PageCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.WordCount">
            <summary>
            Gets/Sets WordCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Characters">
            <summary>
            Gets/Sets CharCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.ApplicationName">
            <summary>
            Gets/Sets ApplicationName document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Security">
            <summary>
            Gets/Sets Security document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Category">
            <summary>
            Gets/Sets Category document proerty.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.PresentationTarget">
            <summary>
            Gets/Sets Target format document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Bytes">
            <summary>
            Gets/Sets ByteCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.LineCount">
            <summary>
            Gets/Sets LineCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.ParagraphCount">
            <summary>
            Gets/Sets ParagrahpCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.SlideCount">
            <summary>
            Gets/Sets SlideCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.NoteCount">
            <summary>
            Gets/Sets NoteCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.HiddenCount">
            <summary>
            Gets/Sets HiddenCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.MultimediaClipCount">
            <summary>
            Gets/Sets MmclipCount document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.ScaleCrop">
            <summary>
            Gets/Sets SacleCrop document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Manager">
                /// <summary>
                /// HeadingPair.
                /// </summary>
            HeadingPair
            {
            get
            {
            }
            }
                /// <summary>
                /// DocParts.
                /// </summary>
            DocParts
            {
            get
            {
            }
            }
             <summary>
             Gets/Sets Manager document property.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.Company">
            <summary>
            Gets/Sets Company document property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.LinksDirty">
            <summary>
            Indicate whether the custom links are hampered.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsBuiltInDocumentProperties.OnInsertComplete(System.Int32,Spire.Xls.DocumentProperty)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsChartsCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves worksheet of collection source to destination.
            </summary>
            <param name="oldIndex">Old index.</param>
            <param name="newIndex">New index.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsChartsCollection.UpdateSheetIndex(Spire.Xls.Core.Spreadsheet.Charts.XlsChart,System.Int32)">
            <summary>
            Updates chart index after move/insert operation.
            </summary>
            <param name="chart">Chart that was changed.</param>
            <param name="iOldRealIndex">Old sheet index in the TabSheets collection.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsChartsCollection.MoveInternal(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="iOldSheetIndex"></param>
            <param name="iNewSheetIndex"></param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsCommentsCollection.AddComment(System.Int32,System.Int32)">
            <summary>
            Adds comment to the specified range.
            </summary>
            <param name="iRow">Row of the cell to add comment to.</param>
            <param name="iColumn">Column of the cell to add comment to.</param>
            <returns>Newly created comment shape.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsCommentsCollection.InnerRemove(Spire.Xls.Core.ICommentShape)">
            <summary>
            Removes specified comment only from internal storages (withour removing it from shapes collection).
            </summary>
            <param name="comment">Comment to remove.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsCommentsCollection.ReRegisterComments">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.FindParent">
            <summary>
            Finds parent worksheet.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddCellValueCondition(Spire.Xls.ComparisonOperatorType,System.String,System.String)">
            <summary>
            Add new cell value condition to the collection.
            </summary>
            <param name="operatorType">The Comparison operator for conditional formatting in Excel.</param>
            <param name="value1">The first value</param>
            <param name="value2">The second value .If the operatorTypy is Equal or NotEqual or Greater or Less or GreaterOrEqual or LessOrEqual,
            then this parameter must use string.Empty or null</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddCellValueCondition(Spire.Xls.ComparisonOperatorType,System.Double,System.Double)">
            <summary>
            Add new cell value condition to the collection.
            </summary>
            <param name="operatorType">The Comparison operator for conditional formatting in Excel.</param>
            <param name="value1">The first value</param>
            <param name="value2">The second value.If the operatorTypy is Equal or NotEqual or Greater or Less or GreaterOrEqual or LessOrEqual,
            then this parameter must use ***double.NaN***.Don't use null</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddBeginsWithCondition(System.String)">
            <summary>
            Add new begin with condition to the collection.
            </summary>
            <param name="text">begin with text</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddContainsTextCondition(System.String)">
            <summary>
            Add new contain condition to the collection.
            </summary>
            <param name="text">contain text</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddEndsWithCondition(System.String)">
            <summary>
            Add new end with condition to the collection.
            </summary>
            <param name="text">end with text</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddNotContainsTextCondition(System.String)">
            <summary>
            Add new not contain condition to the collection.
            </summary>
            <param name="text">not contain text</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddContainsBlanksCondition">
            <summary>
            Add new contain blanks condition to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddContainsErrorsCondition">
            <summary>
            Add new contain errors condition to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddDuplicateValuesCondition">
            <summary>
            Add new duplicate values condition to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddNotContainsBlanksCondition">
            <summary>
            Add new not contain blanks condition to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddNotContainsErrorsCondition">
            <summary>
            Add new not contain errors condition to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddUniqueValuesCondition">
            <summary>
            Add new unique values condition to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddTimePeriodCondition(Spire.Xls.Core.Spreadsheet.ConditionalFormatting.TimePeriodType)">
            <summary>
            Add new time period condition to the collection.
            </summary>
            <param name="timePeriodType">type of the time period</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddAverageCondition(Spire.Xls.AverageType)">
            <summary>
            Add new above or below the average condition to the collection.
            </summary>
            <param name="averageType">type of the average</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats.AddTopBottomCondition(Spire.Xls.TopBottomType,System.Int32)">
            <summary>
            Add new TopN or BottomN condition to the collection.
            </summary>
            <param name="TopBottomType">type of the Top or Bottom</param>
            <param name="rank">rank of the Top or Bottom</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsCustomDocumentProperties.Parse(Spire.CompoundFile.XLS.Net.DocumentPropertyCollection)">
            <param name="setProp">Collection to extract properties from.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsDataValidationCollection.UpdateNamedRangeIndexes(System.Int32[])">
            <summary>
            Updates indexes to named ranges.
            </summary>
            <param name="arrNewIndex">New indexes.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsDataValidationCollection.UpdateNamedRangeIndexes(System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
            <summary>
            Updates indexes to named ranges.
            </summary>
            <param name="dicNewIndex">New indexes.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsDataValidationCollection.MarkUsedReferences(System.Boolean[])">
            <param name="usedItems">Array to mark used references in.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsDataValidationCollection.UpdateReferenceIndexes(System.Int32[])">
            <param name="arrUpdatedIndexes">Array with updated indexes.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsDataValidationCollection.PromptBoxHPosition">
            <summary>
            Vertical position of the prompt box.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsDataValidationCollection.PromptBoxVPosition">
            <summary>
            Vertical position of the prompt box.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsDataValidationCollection.IsPromptBoxVisible">
            <summary>
            Indicates whehter prompt box is visible..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsDataValidationCollection.IsPromptBoxPositionFixed">
            <summary>
            Indicates whehter prompt box has fixed position..
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Xls.Core.Spreadsheet.Collections.XlsDataValidationTable.Remove(System.Drawing.Rectangle[])”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsExternBookCollection.ContainsExternName(System.String,System.Int32@,System.Int32@)">
            <summary>
            Checks whether any of books in this collection contains extern name.
            </summary>
            <param name="strName">Name to search.</param>
            <param name="iBookIndex">Output extern workbook index.</param>
            <param name="iNameIndex">Output name index.</param>
            <returns>True if name was found; false otherwise.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsExternBookCollection.AddCopy(Spire.Xls.Core.Spreadsheet.Collections.XlsExternBookCollection)">
            <summary>
            Copies subbook collection.
            </summary>
            <param name="subBooks">Represents parent subbook collection.</param>
            <returns>Returns sub book indexes hash. Key - old indexes; Value - new indexes.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsExternNamesCollection.Clone(System.Object)">
            <summary>
            Creates copy of the collection.
            </summary>
            <param name="parent">Parent object for the new collection.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsExternNamesCollection.Add(Spire.Xls.Core.Spreadsheet.XlsExternName)">
            <summary>
            Adds new item to the collection.
            </summary>
            <param name="name">Name to add.</param>
            <returns>Index of the added item.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsFontsCollection.InsertDefaultFonts">
            <summary>
            Inserts default fonts into collection.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Collections.XlsFormatsCollection.m_formatIndexesMap1">
            <summary>
            Represent the indexes of the Raw Formats Maps.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsFormatsCollection.Item(System.Int32)">
            <summary>
            G
            </summary>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsFormatsCollection.Clone(System.Object)">
            <summary>
            Creates copy of the current instance.
            </summary>
            <param name="parent">Parent object for the new collection.</param>
            <returns>Copy of the current instance.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsHPageBreaksCollection.ManualBreakCount">
            <summary>
            Gets manual breaks count. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsHPageBreaksCollection.Clone(System.Object)">
            <summary>
            Creates copy of the collection.
            </summary>
            <param name="parent">Parent for new collection.</param>
            <returns>A clone of the current collection.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsHyperLinksCollection.CreateHyperlinkStyles">
            <summary>
            Creates hyperlink styles.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsHyperLinksCollection.Clone(System.Object)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="parent">Parent object for a copy of this instance.</param>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsPivotCachesCollection.Clear">
            <summary>
            Clears collection
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsPivotCachesCollection.Add(Spire.Xls.CellRange)">
            <summary>
            Creates new chache object inside this collection.
            </summary>
            <param name="range">Range that contains data to cache.</param>
            <returns>Newly created object.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsRangesCollection.Hyperlinks">
            <summary>
            Returns hyperlinks for this ranges collection.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsRangesCollection.Activate(System.Boolean)">
            <summary>
            Activages a single cell, scroll to it and activates the respective sheet
            To select a range of cells, use the Select method.
            </summary>
            <param name="scroll">True to scroll to the cell</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsRangesCollection.AutoFitRows">
            <summary>
            Autofits all rows.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsRangesCollection.AutoFitColumns">
            <summary>
            Autofits all columns. 
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsRangesCollection.BorderAround(Spire.Xls.LineStyleType,Spire.Xls.ExcelColors)">
            <summary>
            Sets around border for current range.
            </summary>
            <param name="borderLine">Represents border line.</param>
            <param name="borderColor">Represents border color as ExcelColors.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsRangesCollection.BorderInside">
            <summary>
            Sets inside border for current range.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsRangesCollection.BorderInside(Spire.Xls.LineStyleType,Spire.Xls.ExcelColors)">
            <summary>
            Sets inside border for current range.
            </summary>
            <param name="borderLine">Represents border line.</param>
            <param name="borderColor">Represents border color as ExcelColors.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsRangesCollection.ClearConditionalFormats">
            <summary>
            Clears conditional formats.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsRangesCollection.GetAddressSeparator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsShapesCollection.AddOval(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Add Oval Shape
            </summary>
            <param name="leftcolumn">0-1000</param>
            <param name="toprow">0-1000</param>
            <param name="rightcolumn">0-1000</param>
            <param name="bottomrow">0-1000</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsShapesCollection.AddLine(System.Drawing.Point,System.Drawing.Point,Spire.Xls.LineShapeType)">
            <summary>
            AddLine
            </summary>
            <param name="startPoint">startPoint</param>
            <param name="endPoint">endPoint</param>
            <param name="lineShapeType">lineShapeType</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsShapesCollection.AddPicture(Spire.Xls.Core.Spreadsheet.Shapes.XlsBitmapShape)">
            <summary>
            Adds picture to collections.
            </summary>
            <param name="shape">Represents picture to add.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsShapesCollection.UpdateNamedRangeIndexes(System.Int32[])">
            <summary>
            Updates indexes to named ranges.
            </summary>
            <param name="arrNewIndex">New indexes.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsShapesCollection.UpdateNamedRangeIndexes(System.Collections.Generic.IDictionary{System.Int32,System.Int32})">
            <summary>
            Updates indexes to named ranges.
            </summary>
            <param name="dicNewIndex">New indexes.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsShapesCollection.GetShapeById(System.Int32)">
            <summary>
            Gets shape by its id.
            </summary>
            <param name="id">Shape's id to locate.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsStylesCollection.Remove(System.String)">
            <summary>
            Removes style from the colleciton.
            </summary>
            <param name="styleName">Style to remove.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsStylesCollection.Contains(System.String)">
            <summary>
            Check collection contains style with specified name.
            </summary>
            <param name="name">Style name</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsVPageBreaksCollection.ManualBreakCount">
            <summary>
            Gets manual breaks count. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsVPageBreaksCollection.TypeCode">
            <summary>
            Returns type code of the biff storage. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsVPageBreaksCollection.RecordCode">
            <summary>
            Returns code of the biff storage. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsVPageBreaksCollection.NeedDataArray">
            <summary>
            Indicates whether data array is required by this record.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsVPageBreaksCollection.StreamPos">
            <summary>
            Indicates record position in stream. This is a utility member of class and
            is used only in the serialization process. Does not influence the data.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorkbookObjectsCollection.MoveBefore(Spire.Xls.Core.ITabSheet,Spire.Xls.Core.ITabSheet)">
            <summary>
            Moves specified tab sheet before another tab sheet.
            </summary>
            <param name="sheetToMove">The tab sheet to move.</param>
            <param name="sheetForPlacement">The tab sheet to locate new position.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorkbookObjectsCollection.MoveAfter(Spire.Xls.Core.ITabSheet,Spire.Xls.Core.ITabSheet)">
            <summary>
            Moves specified tab sheet after another tab sheet.
            </summary>
            <param name="sheetToMove">The tab sheet to move.</param>
            <param name="sheetForPlacement">The tab sheet to locate new position.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsWorkbookObjectsCollection.Spire#Xls#Core#ITabSheets#Item(System.Int32)">
            <summary>
            Returns single entry from the collection.
            </summary>
        </member>
        <member name="E:Spire.Xls.Core.Spreadsheet.Collections.XlsWorkbookObjectsCollection.TabSheetMoved">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetNamesCollection.Add(Spire.Xls.Core.INamedRange,System.Boolean)">
            <summary>
            Defines a new name.
            </summary>
            <param name="name">Name object to add.</param>
            <param name="bAddInGlobalNamesHash">Indicates is adds in global names hash.</param>
            <returns>Added Name object.</returns>
            <exception cref="T:System.ArgumentNullException">
            If name argument is NULL.
            </exception>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.#ctor(Spire.Xls.Core.IInnerApp,System.Object)">
            <summary>
            Creates a collection and sets its Application and Parent properties.
            </summary>
            <param name="application">Application object for the collection.</param>
            <param name="parent">Parent object for the collection.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.UseRangesCache">
            <summary>
            Indicates whether all created range objects should be cached.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.UseHashForWorksheetLookup">
            <summary>
            Toggles worksheet search algorithm when searching worksheet by name.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.UpdateSheetIndex(Spire.Xls.Core.Spreadsheet.XlsWorksheet,System.Int32)">
            <summary>
            Updates sheet index after move/insert operation.
            </summary>
            <param name="sheet">Sheet that was changed.</param>
            <param name="iOldRealIndex">Old sheet index in the TabSheets collection.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.MoveInternal(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="iOldSheetIndex"></param>
            <param name="iNewSheetIndex"></param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.AddCopy(System.Int32,Spire.Xls.WorksheetCopyType)">
            <summary>
            Add a copy of the specified worksheet to the worksheet collection.
            </summary>
            <param name="sheetIndex">Index of the workbook that should be copied</param>
            <param name="flags">Represents copy options flags.</param>
            <returns>Returns copied sheet.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.AddCopy(Spire.Xls.Core.IWorksheet)">
            <summary>
            Adds copy of worksheet.
            </summary>
            <param name="sheet">Worksheet to copy.</param>
            <returns>Copy of worksheet that was added.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.Remove(System.String)">
            <summary>
            Removes specified worksheet from the collection.
            </summary>
            <param name="sheetName">Name of the sheet to remove.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.Remove(System.Int32)">
            <summary>
            Removes specified worksheet from the collection.
            </summary>
            <param name="index">Index of the sheet to remove.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes specified worksheet from the collection.
            </summary>
            <param name="index">Index of the sheet to remove.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.InnerAdd(Spire.Xls.Core.IWorksheet)">
            <summary>
            Adds worksheet into internal collection.
            </summary>
            <param name="sheet">Worksheet to add.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Collections.XlsWorksheetsCollection.IsRightToLeft">
            <summary>
            Indicates whether worksheet is displayed right to left.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.CollectionExtended`1.Clone(System.Object)">
            <summary>
            Creates copy of the collection.
            </summary>
            <param name="parent">Parent object for the new collection.</param>
            <returns>A copy of the collection.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Collections.CollectionExtended`1.EnsureCapacity(System.Int32)">
            <summary>
            Enlarges internal storage if necessary.
            </summary>
            <param name="size">Required size.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsValidationWrapper.InputTitle">
            <summary>
            Title of the input box.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsValidationWrapper.InputMessage">
            <summary>
            Message of the input box.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsValidationWrapper.ErrorTitle">
            <summary>
            Title of the error box. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsValidationWrapper.ErrorMessage">
            <summary>
            Message of the error box.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.ExcelToHtmlConverter.m_imageMIMEMonitor">
            <summary>
            Image mimes cache for embedding image.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.HTMLOptions.ImageLocationType">
            <summary>
            Gets or sets the Image Location type.
            GlobalAbsolute or Relative to Table
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.HTMLOptions.ImageEmbedded">
            <summary>
            If false,indicates exporting the image as a single file; 
            If true, embedding the image into the html code using Data URI scheme.
            The default value is false.
            Note: Internet Explorer 8 limits data URIs to a maximum length of 32KB.
            </summary>
            <value>The value of the HTML export image style sheet.</value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.HTMLOptions.StyleDefine">
            <summary>
            where is the style defined; default : head
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Exceptions.ParseException.DEF_MESSAGE_FORMAT">
            <summary>
            Default message format.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.Black">
            <summary>
            Contains black color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.White">
            <summary>
            Contains white color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.Empty">
            <summary>
            Contains empty color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.Red">
            <summary>
            Contains red color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.Blue">
            <summary>
            Contains blue color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.DarkGray">
            <summary>
            Contains dark gray color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.Yellow">
            <summary>
            Contains yellow color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.Cyan">
            <summary>
            Contains cyan color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.Magenta">
            <summary>
            Contains magenta color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.Gray">
            <summary>
            Contains gray color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.ChartForeground">
            <summary>
            Chart foreground color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.ChartBackground">
            <summary>
            Chart background color.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.ChartNeutral">
            <summary>
            Chart neutral color.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Drawing.ColorExtension.FromArgb(System.Int32)">
            <summary>
            Converts Int32 value into Color.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.ExternalRange.EnvalutedValue">
            <summary>
            Returns the calculated value of a formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.ExternalRange.RangeGlobalAddress2007">
            <summary>
            Gets address global in the format required by Excel 2007.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.ExternalRange.#ctor(Spire.Xls.Core.Spreadsheet.XlsExternWorksheet,System.Int32,System.Int32)">
            <summary>
            Initializes new instance of the class.
            </summary>
            <param name="sheet">Parent external worksheet.</param>
            <param name="row">First row.</param>
            <param name="column">First column.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.ExternalRange.#ctor(Spire.Xls.Core.Spreadsheet.XlsExternWorksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes new instance of the class.
            </summary>
            <param name="sheet">Parent external worksheet.</param>
            <param name="row">First row.</param>
            <param name="column">First column.</param>
            <param name="lastRow">Last row.</param>
            <param name="lastColumn">Last column.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.ExternalRange.WorksheetName">
            <summary>
            Gets name of the parent worksheet.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.PivotTables.PivotStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotStyle.Font">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotStyle.Borders">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotStyle.Fill">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotStyle.DxfId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotCalculatedFields.Item(System.Int32)">
            <summary>
            Returns single entry from the collection.
            </summary>
            <param name="index">Item index to return.</param>
            <returns>Single entry from the collection.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotCalculatedFields.Spire#Xls#Core#IPivotCalculatedFields#Item(System.String)">
            <summary>
            Returns the single entry 
            </summary>
            <param name="name">name of the calculated field</param>
            <returns>calculated pivot field for the specified name</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotDataField.BaseField">
            <summary>
            Gets or sets the base field.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotDataField.BaseItem">
            <summary>
            Gets or sets the base item.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter">
            <summary>
            Represent the report filter of PivotTable
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.m_bIsMultipleSelect">
            <summary>
            Indicated whether multiple select the filter field
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.m_listFilterItemsStrings">
            <summary>
            Represent the filter items string collection,the possible value must be from field values
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.m_listRemovedStrings">
            <summary>
            Represent the filter field index collection
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.m_iFilterFieldIndex">
            <summary>
            Represent the fld attribute of pagefield.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.m_iItemIndex">
            <summary>
            Represent the index of the pagefield's item attribute.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.m_strFieldString">
            <summary>
            Represent the page field string
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.m_bIsNew">
            <summary>
            It be true if it's new reportfilter
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.m_strFieldName">
            <summary>
            Represents the name of filter field
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.#ctor(System.String,System.Boolean)">
            <summary>
            Creat an instance of reportfilter
            </summary>
            <param name="fieldName">The field name of this reportfilter</param>
            <param name="isNew">it is true if this reportfilter does not exist in the pivottable</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.#ctor(System.String)">
            <summary>
            Creat an instance of reportfilter
            </summary>
            <param name="fieldName">The field name of this reportfilter</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.IsMultipleSelect">
            <summary>
            Indicated whether multiple select the filter field
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.FilterItemStrings">
            <summary>
            Represent the filter field string collection.When IsMultipleSelect is false,Only the first value of string array will be used.
            The possible value must be from field values
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.FieldString">
            <summary>
            Represent the page field string of pivottable
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.FieldName">
            <summary>
            Represents the name of filter field
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.RemovedStrings">
            <summary>
            Represent the removed strings collection,it's read only
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.FieldIndex">
            <summary>
            Represent the fld attribute of pagefield or the index of pivotfield.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.ItemIndex">
            <summary>
            Represent the index of the pagefield's item attribute.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.PivotReportFilter.IsNew">
            <summary>
            It be true if it's new reportfilter
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.m_arrRecords">
            <summary>
            Array of all unparsed cache records.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.m_bsupportAdvancedDrill">
            <summary>
            Specifies whether the cache's data source supports attribute drilldown.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.m_iCreatedVersion">
            <summary>
            Specifies the version of the application that created the cache. This attribute is
            application-dependent.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.m_iMinRefreshableVersion">
            <summary>
            Specifies the earliest version of the application that is required to refresh the cache. 
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.m_iRefreshedVersion">
            <summary>
            Specifies the version of the application that last refreshed the cache. 
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.m_bSupportSubQuery">
            <summary>
            Specifies whether the cache's data source supports subqueries
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.SourceType">
            <summary>
            Data source is one of:
            1 - Excel worksheet,
            2 - external data,
            4 - consolidation,
            8 - scenario PivotTable.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.IsUpgradeOnRefresh">
            <summary>
            Specifies a boolean value that indicates whether the cache is scheduled for version
            upgrade.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.IsSupportSubQuery">
            <summary>
            Specifies whether the cache's data source supports subqueries
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.IsSaveData">
            <summary>
            Specifies a boolean value that indicates whether the pivot records are saved with the
            cache.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.IsOptimizedCache">
            <summary>
            Specifies a boolean value that indicates whether the application will apply optimizations
            to the cache to reduce memory usage
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.EnableRefresh">
            <summary>
            Specifies a boolean value that indicates whether the user can refresh the cache. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.IsBackgroundQuery">
            <summary>
            Specifies a boolean value that indicates whether the application should query and
               retrieve records asynchronously from the cache.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.CreatedVersion">
            <summary>
            Specifies the version of the application that created the cache. This attribute is
            application-dependent.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.MinRefreshableVersion">
            <summary>
            Specifies the earliest version of the application that is required to refresh the cache. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.RefreshedVersion">
             <summary>
             Specifies the version of the application that last refreshed the cache. This attribute
            depends on whether the application exposes mechanisms via the user interface whereby
            the end-user can refresh the cache.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.IsInvalidData">
            <summary>
            Specifies a boolean value that indicates whether the cache needs to be refreshed.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.SupportAdvancedDrill">
            <summary>
            Specifies whether the cache's data source supports attribute drilldown.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.IsRefreshOnLoad">
            <summary>
            Specifies a boolean value that indicates whether the application will refresh the cache
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.PreservedElements">
            <summary>
            Preserved XlsIO unsupported elements
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.RangeName">
            <summary>
            Contains the name of the pivot cache NamedRange
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCache.HasNamedRange">
            <summary>
            Indicates whether the pivot cache has named range
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCacheField.IsFormulaField">
            <summary>
            Indicates the field is formula field
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCacheField.FieldGroup">
            <summary>
            Represents the Field group in the Cache Field
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCacheField.Caption">
            <summary>
            Specifies the caption of the cache field
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCacheField.NumFormatIndex">
            <summary>
            Specifies the number format that is applied to all items in the field
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotCacheField.IsFieldGroup">
            <summary>
            Represents the cache field is Field group
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.m_iFieldIndex">
            <summary>
            Specifies the index of the field that appears on the page or filter report area of the PivotTable
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.m_dictItemIndexs">
            <summary>
            Represents the index of item and itemoptions key pairs
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.m_hierarchy">
            <summary>
            Specifies the index of the OLAP hierarchy to which this item belongs.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.m_cap">
            <summary>
            Specifies the display name of the hierarchy
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.SubtotalCaption">
            <summary>
            Specifies the custom text that is displayed for the subtotals caption.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.SubtotalTop">
            <summary>
            Get or set whether show 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.IsAutoShow">
            <summary>
            Autoshow is enabled.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.CanDragToRow">
            <summary>
            User can drag field to row area.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.CanDragToColumn">
            <summary>
            User can drag field to column area.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.CanDragToPage">
            <summary>
            User can drag field to page area.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.IsDragToHide">
            <summary>
            User can remove field from fiew.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.CanDragOff">
            <summary>
            True if the field can be hidden by being dragged off the PivotTable report. The default value is True
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ShowNewItemsInFilter">
            <summary>
            Specifies a boolean value that indicates whether manual filter is in inclusive mode.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ShowNewItemsOnRefresh">
             <summary>
             Specifies a boolean value that indicates whether new items that appear after a refresh
            should be hidden by default.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ShowBlankRow">
            <summary>
            True if a blank row is inserted after the specified row field in a PivotTable report.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ShowPageBreak">
            <summary>
            True if a page break is inserted after each field. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ItemsPerPage">
            <summary>
            Specifies the number of items showed per page in the PivotTable.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.IsMeasureField">
            <summary>
            Specifies a boolean value that indicates whether field has a measure based filter.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.IsMultiSelected">
             <summary>
             Specifies a boolean value that indicates whether the field can have multiple items
            selected in the page field.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.IsShowAllItems">
            <summary>
            Show all items for this field.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ShowOutline">
             <summary>
             Specifies a boolean value that indicates whether the items in this field should be shown
            in Outline form.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ShowDropDown">
            <summary>
            True if the flag for the specified PivotTable field or PivotTable item is set to "drilled" (expanded, or visible).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ShowPropAsCaption">
             <summary>
             Specifies a boolean value that indicates whether to show the property as a member
            caption.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ShowItemPropAsCaption">
             <summary>
             Specifies a boolean value that indicates whether to show the member property value in a
            PivotTable cell.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ShowToolTip">
            <summary>
            Specifies a boolean value that indicates whether to show the member property value in a
            tooltip on the appropriate PivotTable cells.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.SortType">
            <summary>
            Specifies the type of sort that is applied to this field.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.IsAutoFiltersByRank">
             <summary>
             Specifies a boolean value that indicates whether an AutoShow filter applied to this field is
            set to show the top ranked values
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.Caption">
             <summary>
             Specifies the unique name of the member property to be used as a caption for the field
            and field items.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ItemOptions">
            <summary>
            Represents the item attributes
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.Compact">
             <summary>
             Specifies a boolean value that indicates whether the application will display fields
            compactly in the sheet on which this PivotTable resides
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.CanDragToData">
            <summary>
            True if the specified field can be dragged to the data position. The default value is True.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.Formula">
            <summary>
            Specifies the formula for the calculated field
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.IsFormulaField">
            <summary>
            Indicates whether this field is formula field
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.PreservedAutoSort">
            <summary>
            Preserves the sorting elements of the field
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.FieldIndex">
            <summary>
            Specifies the index of the field that appears on the page or filter report area of the PivotTable
            Added by James.Chen at 2013/6/8
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.ItemIndexs">
            <summary>
            Represents the index of item and itemoptions key pairs
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.IsHiddenItemDetail(System.Int32)">
            <summary>
            Indicates whether the specific PivotItem is hidden detail.
             Must call after pivottable CalculateData function.
            </summary>
            <param name="index">the index of the pivotItem in the pivotField.</param>
            <returns>whether the specific PivotItem is hidden detail</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.HideItemDetail(System.Int32,System.Boolean)">
            <summary>
             Sets whether the specific PivotItem in a pivot field is hidden detail.
             Must call after pivottable CalculateData function.
            </summary>
            <param name="index">the index of the pivotItem in the pivotField.</param>
            <param name="isHiddenDetail">whether the specific PivotItem is hidden</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.HideItemDetail(System.String,System.Boolean)">
            <summary>
             Sets whether the PivotItems in a pivot field is hidden detail.That is collapse/expand this field.
             Must call after pivottable CalculateData function.
            </summary>
            <param name="itemValue">the value of the pivotItem in the pivotField.</param>
            <param name="isHiddenDetail">whether the specific PivotItem is hidden</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.HideDetail(System.Boolean)">
            <summary>
             Sets whether the PivotItems in a pivot field is hidden detail.That is collapse/expand this field.
             Must call after pivottable CalculateData function.
            </summary>
            <param name="isHiddenDetail">whether DetailItems is hidden</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.IsHiddenItem(System.Int32)">
            <summary>
            Indicates whether the specific PivotItem is hidden.
             Must call after pivottable CalculateData function.
            </summary>
            <param name="index">the index of the pivotItem in the pivotField.</param>
            <returns>whether the specific PivotItem is hidden</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.HideItem(System.Int32,System.Boolean)">
            <summary>
             Sets whether the specific PivotItem in a data field is hidden.
             Must call after pivottable CalculateData function.
            </summary>
            <param name="index">the index of the pivotItem in the pivotField.</param>
            <param name="isHidden">whether the specific PivotItem is hidden</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotField.HideItem(System.String,System.Boolean)">
            <summary>
             Sets whether the specific PivotItem in a data field is hidden.
             Must call after pivottable CalculateData function.
            </summary>
            <param name="itemValue">the value of the pivotItem in the pivotField.</param>
            <param name="isHidden">whether the specific PivotItem is hidden</param>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.m_colReportFilter">
            <summary>
            Represents the report filter.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.m_bAllSubTotalTop">
            <summary>
            Indicated whether diplay all subtotal at top of group
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.Options">
            <summary>
            Represents the pivot table options.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.FirstDataCol">
             <summary>
             Specifies the first column of the PivotTable data, relative to the top left cell in the ref
            value
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.FirstDataRow">
             <summary>
             Specifies the first column of the PivotTable data, relative to the top left cell in the ref
            value
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.FirstHeaderRow">
             <summary>
             Specifies the first row of the PivotTable header, relative to the top left cell in the ref
            value.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ColumnsPerPage">
             <summary>
             Specifies the number of columns per page for this PivotTable that the filter area will
            occupy.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.RowsPerPage">
            <summary>
            Specifies the number of rows per page for this PivotTable that the filter area will occupy.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ShowColHeaderStyle">
            <summary>
            Specifies a boolean value that indicates whether to show column headers for the table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ShowColStripes">
             <summary>
             Specifies a boolean value that indicates whether to show column stripe formatting for
            the table.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ShowLastCol">
            <summary>
            Specifies a boolean value that indicates whether to show the last column.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ShowRowHeaderStyle">
            <summary>
            Specifies a boolean value that indicates whether to show row headers for the table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ShowRowStripes">
             <summary>
             Specifies a boolean value that indicates whether to show row stripe formatting for the
            table.
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ColumnItemsStream">
            <summary>
            Represents the Pivot table column items in Stream
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.RowItemsStream">
            <summary>
            Represents the Pivot Table row items in stream
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ShowDataFieldInRow">
            <summary>
            Represents the pivot table to add the Calculated 
            Data field in rows
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.PreservedElements">
            <summary>
            Preserves the XlsIO unsupported elements
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.CalculatedFields">
            <summary>
            Returns the calculated field collection represents all
            the calculated fields int the specified pivot table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.PageFields">
            <summary>
            Returns the collection of page field for the specified pivot table,
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.RowFields">
            <summary>
            Returns the collection of Row field for the specified pivot table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ColumnFields">
            <summary>
            Returns the collection of Column field for the specified pivot table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.IsChanged">
            <summary>
            Represents the pivot table modified.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.ReportFilters">
            <summary>
            Gets or sets report filter collection
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.AllSubTotalTop">
            <summary>
            Indicated whether diplay all subtotal at top of group,
            Change will cover every field's setting
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.PivotTables.XlsPivotTable.CustomTableSytle">
            <summary>
            Represent the custom Style for this PivotTable
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Security.SecurityHelper.EncryptionInfoStream">
            <summary>
            Name of encryption info stream.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions">
            <summary>
            Shadow properties 
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.m_ShadowOuterPresets">
            <summary>
            NoShadow=0
            OffsetRight=1
            OffsetDiagonalBottomRight=2
            OffsetBottom=3
            OffsetDiagonalTopLeft=4
            OffsetCenter=5
            OffsetTop=6
            OffsetLeft=7
            OffsetDiagonalTopRight=8
            OffsetDiagonalBottomLeft=9  
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.m_ShadowInnerPresets">
             <summary>
             NoShadow=0
            InsideDiagonalBottomLeft=1
            InsideTop=2
            InsideRight=3
            InsideLeft=4
            InsideDiagonalTopRight=5
            InsideDiagonalBottomRight=6
            InsideCenter=7
            InsideBottom=8       
            InsideDiagonalTopLeft=9
             </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.m_ShadowPrespectivePresets">
             <summary>
            NoShadow=0,
            PrespectiveDiagonalUpperRight=1,
            PrespectiveDiagonalLowerRight=2,
            PrespectiveDiagonalUpperLeft=3,
            PrespectiveDiagonalLowerLeft=4,
            Below=5
             </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.m_BevelTop">
             <summary>
              NoAngle=0,
            Angle=1,
            ArtDeco=2,
            Circle=3,
            Convex=4,
            CoolSlant=5,
            Cross=6,
            Divot=7,
            HardEdge=8,
            RelaxedInset=9,
            Riblet=10,
            Slope=11,
            SoftRound=12
             </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.m_Material">
             <summary>
             NoEffect=0,
            Matte=1,
            WarmMatte=2,
            Plastic=3,
            Metal=4,
            DarkEdge=5,
            SoftEdge=6,
            Flat=7,
            WireFrame=8,
            Powder=9,
            TranslucentPowder=10,
            Clear=11
             </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.m_Lighting">
             <summary>
            ThreePoint=0,
            Balance=1,
            BrightRoom=2,
            Chilly=3,
            Contrasting=4,
            Flat=5,
            Flood=6,
            Freezing=7,
            Glow=8,
            Harsh=9,
            Morning=10,
            Soft=11,
            Sunrise=12,
            SunSet=13,
            TwoPoint=14
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.ShadowOuterType">
            <summary>
            Gets or sets the shadow outer presets.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.ShadowInnerType">
            <summary>
            Gets or sets the shadow inner type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.ShadowPrespectiveType">
            <summary>
            Gets or sets the shadow prespective type.
            </summary>
            <value>The shadow prespective presets.</value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.MaterialType">
            <summary>
            Gets or sets the material.
            </summary>
            <value>The material.</value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.LightingType">
            <summary>
            Gets or sets the lighting.
            </summary>
            <value>The lighting.</value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.BevelTopType">
            <summary>
            Gets or sets the bevel top.
            </summary>
            <value>The bevel top.</value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Parser.Biff_Records.Charts.ShadowOptions.BevelBottomType">
            <summary>
            Gets or sets the bevel bottom.
            </summary>
            <value>The bevel bottom.</value>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Shapes.XlsLineShape.m_2007Coordinates">
            private int m_iImageIndex = -1;
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsLineShape.StyleProperties">
            <summary>
            Preserves the Shape style properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsLineShape.HasStyleProperties">
            <summary>
            Indicates whether styleproperties was created. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsLineShape.TextFieldType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Shapes.XlsLineShape.startPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Shapes.XlsLineShape.endPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsLineShape.Color">
            <summary>
            line color
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsLineShape.BeginArrowHeadStyle">
            <summary>
             BeginArrowHeadStyle
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.Shapes.XlsPrstGeomShape">
            <summary>
            Worksheet preset shape
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Shapes.XlsTextBoxShape.m_2007Coordinates">
            private int m_iImageIndex = -1;
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Shapes.XlsTextBoxShape.m_textLink">
            <summary>
            Represents a formula linking to spreadsheet cell data
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsTextBoxShape.StyleProperties">
            <summary>
            Preserves the Shape style properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsTextBoxShape.HasStyleProperties">
            <summary>
            Indicates whether styleproperties was created. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsTextBoxShape.TextFieldType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsTextBoxShape.FormulaLink">
            <summary>
            Indicates a formula linking to spreadhseet cell data.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShapeLineFormat.IsRound">
            <summary>
            Indicates whether join is round.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsBitmapShape.#ctor(Spire.Xls.Core.IInnerApp,System.Object,System.Boolean)">
            <summary>
            Creates new instance.
            </summary>
            <param name="application">Current application.</param>
            <param name="parent">Parent object.</param>
            <param name="IncludeShapeOptions">Indicates is shape include options. False supports only for header / footer image.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.#ctor(Spire.Xls.Core.IInnerApp,System.Object,Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            Initializes new instance of the shape.
            </summary>
            <param name="application">Application object for the new shape.</param>
            <param name="parent">Parent object for the new shape.</param>
            <param name="instance">Cloned object.</param>
            <param name="hashNewNames">Hashtables with new names.</param>
            <param name="dicFontIndexes">Dictionary with new font indexes.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.Rotation">
            <summary>
            Returns or sets the rotation of the 3-D chart view (the rotation of the plot area around the z-axis in degrees). The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44. The default value is 20. Applies only to 3-D charts.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.Elevation">
            <summary>
            Returns or sets the elevation of the 3-D chart view in degrees.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.HeightPercent">
            <summary>
            Returns or sets the height of a 3-D chart as a percentage of the chart width
            (between 5 and 500 percent).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.DepthPercent">
            <summary>
            Returns or sets the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent).
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.GapDepth">
            <summary>
            Returns or sets the distance between the data series in a 3-D chart, as a percentage of the marker width.( 0 - 500 )
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.AutoScaling">
            <summary>
            True if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.WallsAndGridlines2D">
            <summary>
            True if gridlines are drawn two-dimensionally on a 3-D chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.ChartType">
            <summary>
            Returns or sets the chart type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.SeriesDataFromRange">
            <summary>
            True if series are in rows in DataRange;
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.ChartTitle">
            <summary>
            Represents the title of the specified chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.CategoryAxisTitle">
            <summary>
            Title of the category axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.ValueAxisTitle">
            <summary>
            Title of the value axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.SecondaryValueAxisTitle">
            <summary>
            Title of the secondary value axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.SeriesAxisTitle">
            <summary>
            Title of the series axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.XPos">
            <summary>
            X coordinate of the upper-left corner.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.YPos">
            <summary>
            Y coordinate of the upper-left corner.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.PrimaryFormats">
            <summary>
            Returns chart format collection in primary axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.SecondaryFormats">
            <summary>
            Returns chart format collection in secondary axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.IsRightToLeft">
            <summary>
            Indicates whether chart is displayed right to left.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.Floor">
            <summary>
            Represents chart floor. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.HasDataTable">
            <summary>
            True if the chart has a data table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsChartShape.HasLegend">
            <summary>
            True if the chart has a legend object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.CommentsRange.ResizeBehave">
            <summary>
            Specifies all possible settings for how drawing object shall be resized when the rows and columns between its start and ending anchor are resized or inserted
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.CommentsRange.Line">
            <summary>
            Represents line format properties. Read only.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.m_object">
            <summary>
            OBJ record.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.m_fill">
            <summary>
            Represents fill properties.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.m_lineFormat">
            <summary>
            Represents shape line format.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.m_bUpdateLineFill">
            <summary>
            Indicates is parse or serialize Line fill properties.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.SerializeForte(Spire.Xls.Core.Parser.Biff_Records.Charts.IFopteOptionWrapper,Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsoOptions,System.Byte[])">
            <summary>
            Serialize FOPTE structure.
            </summary>
            <param name="options">Parrent collection.</param>
            <param name="id">Sturcture id to serialize.</param>
            <param name="arr">Array of byte - main byte of structure.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.SerializeForte(Spire.Xls.Core.Parser.Biff_Records.Charts.IFopteOptionWrapper,Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsoOptions,System.Byte[],System.Byte[],System.Boolean)">
            <summary>
            Serialize FOPTE structure.
            </summary>
            <param name="options">Parrent collection.</param>
            <param name="id">Sturcture id to serialize.</param>
            <param name="arr">Array of byte - main byte of structure.</param>
            <param name="addData">Represents additional data.</param>
            <param name="isValid">Represents if valid</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.SerializeForte(Spire.Xls.Core.Parser.Biff_Records.Charts.IFopteOptionWrapper,Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsoOptions,System.Int32)">
            <summary>
            Serialize FOPTE structure.
            </summary>
            <param name="options">Parrent collection.</param>
            <param name="id">Sturcture id to serialize.</param>
            <param name="value">Represents UInt value of structure.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.SerializeForte(Spire.Xls.Core.Parser.Biff_Records.Charts.IFopteOptionWrapper,Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsoOptions,System.Int32,System.Byte[],System.Boolean)">
            <summary>
            Serialize FOPTE structure.
            </summary>
            <param name="options">Parrent collection.</param>
            <param name="id">Sturcture id to serialize.</param>
            <param name="value">Represents int value of structure.</param>
            <param name="addData">Represents additional data.</param>
            <param name="isValid">Represents if valid</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.ExtractNecessaryOptions(Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsofbtOPT)">
            <summary>
            Extracts all necessary option.
            </summary>
            <param name="options">Represents option holder.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.ExtractNecessaryOption(Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsofbtOPT.FOPTE)">
            <summary>
            Extract necessary option.
            </summary>
            <param name="option">Option to extract.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.ResizeBehave">
            <summary>
            Specifies all possible settings for how drawing object shall be resized when the rows and columns between its start and ending anchor are resized or inserted(ComboBoxShape and CheckBoxShape and RadioButtonShape set MoveAndResize type value is invalid)
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.Height">
            <summary>
            Height of object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.Width">
            <summary>
            Width of object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.AlternativeText">
            <summary>
            Returns or sets the descriptive (alternative) text string for a Shape object when the object is saved to a Web page. Read/write String
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.AlternativeTextTitle">
            <summary>
            Returns or sets the descriptive (alternative) text title string for a Shape object when the object is saved to a Web page. Read/write String
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.Fill">
            <summary>
            Represents fill properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.Rotation">
            <summary>
            Returns or sets the rotation of the shape, in degrees.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.IsFlipH">
            <summary>
            Returns or sets if the shape flips Horizontal.false is default;
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.IsFlipV">
            <summary>
            Returns or sets if the shape flips Vertical.false is default;
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.Remove">
            <summary>
            Removes object.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.Scale(System.Int32,System.Int32)">
            <summary>
            Scales the shape.
            </summary>
            <param name="scaleWidth">Width scale in percent.</param>
            <param name="scaleHeight">Height scale in percent.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.CreateDefaultOptions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.UpdateFillFopte(Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsofbtOPT)">
            <summary>
            Sets all fill fopte structure to default value.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.SerializeCommentShadow(Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsofbtOPT)">
            <summary>
            Serialize comment shadow.
            </summary>
            <param name="option">Represents option holder.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.TopRow">
            <summary>
            Top row.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.LeftColumn">
            <summary>
            Left column.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.BottomRow">
            <summary>
            Bottom row.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.RightColumn">
            <summary>
            Right column.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.IsGroup">
            <summary>
            This shape is group shape.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.TopRowOffset">
            <summary>
            Top row offset.256 means whole row offset
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.LeftColumnOffset">
            <summary>
            Left column offset. 1024 means whole column offset
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.BottomRowOffset">
            <summary>
            Bottom row offset.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.RightColumnOffset">
            <summary>
            Right column offset.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.Clone(System.Object)">
            <summary>
            Creates a clone of the current shape.
            </summary>
            <param name="parent">New parent for the shape object.</param>
            <returns>A copy of the current shape.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.CanInsertRowColumn(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Checks whether it is possible insert row or column into index.
            </summary>
            <param name="Index">Index of row or column to insert.</param>
            <param name="Count">Number of rows or columns to insert.</param>
            <param name="isRow">Indicates whether rows or columns are inserted.</param>
            <param name="maxIndex">Maximum possible index.</param>
            <returns>True if it is possible to insert row or column.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.Remove(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Removes row or column.
            </summary>
            <param name="index">Index of row or column to remove.</param>
            <param name="count">Number of rows or columns to remove.</param>
            <param name="row">Indicates whether rows or columns are removed.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.InsertRowColumn(System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method should be called after rows or columns were inserted.
            </summary>
            <param name="iIndex">Index of row or column to insert.</param>
            <param name="iCount">Number of rows or columns to insert.</param>
            <param name="bRow">Indicates whether rows or columns are inserted.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.RegisterInSubCollection">
            <summary>
            Registers shape in all required sub collections.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.UpdateLastRowColumnIndex(System.Boolean)">
            <summary>
            Updates last row\column indexes.
            </summary>
            <param name="bRow">Indicates is row or column.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Shapes.XlsShape.ParseLineFill(Spire.Xls.Core.Parser.Biff_Records.MsoDrawing.MsofbtOPT)">
            <summary>
            Parses line and XlsFill objects.
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Sorting.DataSorter.IsCaseSensitive">
            <summary>
            Indicates whether to perform case sensitive sort.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Sorting.DataSorter.IsIncludeTitle">
            <summary>
            Indicates whether the cell range has title.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Sorting.SortColumn.Key">
            <summary>
            Represents the column to be sorted on.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Sorting.SortColumn.ComparsionType">
            <summary>
            Represents the sort by in the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Sorting.SortColumn.Order">
            <summary>
            Represents the sort order.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Sorting.SortColumn.Color">
            <summary>
            Represents the color to sort. Throws exception when SortOn type is Values.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Sorting.SortColumn.#ctor(Spire.Xls.Core.Spreadsheet.Sorting.SortColumns)">
            <summary>
            Initialize the sort field.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.Sorting.SortColumns">
            <summary>
            Represents the sort column collection.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Sorting.SortColumns.Add(System.Int32,Spire.Xls.SortComparsionType,Spire.Xls.OrderBy)">
            <summary>
            Adds the item in the collection.
            </summary>
            <param name="key">Column Index to sort the data.</param>
            <param name="sortComparsionType">Compare value type.</param>
            <param name="orderBy">To order the sorted data.</param>
            <returns>Added sort column.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Sorting.SortColumns.Add(System.Int32,Spire.Xls.OrderBy)">
            <summary>
             Adds the item in the collection.
            </summary>
            <param name="key">Column Index to sort the data.</param>
            <param name="orderBy">To order the sorted data.</param>
            <returns>Added sort column.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.Sorting.SortColumns.Remove(System.Int32)">
            <summary>
            Remvoes the Sort item in the collection.
            </summary>
            <param name="fieldIndex">Field index to remove.</param>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.XFExtension">
            <summary>
            对应B模型同类名的类，用在03解析时扩展的XF
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.XFExtensionType">
             <summary>
             
            对应B模型同类名的类，用于扩展的CellXF
             </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Tables.ListObject.DisplayFirstColumn">
            <summary>
            Indicates whether show first column.
            </summary>    
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Tables.ListObject.DisplayLastColumn">
            <summary>
            Indicates whether show last column.
            </summary>    
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Tables.ListObject.DisplayHeaderRow">
            <summary>
            Indicates whether show header row.
            </summary>   
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.Tables.ListObject.DisplayTotalRow">
            <summary>
            Indicates whether the Total row is visible.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.XlsWorkbook.WorkbookExcel97Serializator">
            <summary>
            Summary description for WorkbookExcel97Serializator.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsWorkbook.WorkbookExcel97Serializator.MaximumPassordLength">
            <summary>
            Maximum password length.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsWorkbook.WorkbookExcel97Serializator.m_shapeIds">
            <summary>
            Reserved shape ids.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.WorkbookExcel97Serializator.#ctor(Spire.Xls.Core.Spreadsheet.IdReserver)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.WorkbookExcel97Serializator.Serialize(System.String,Spire.Xls.Core.Spreadsheet.XlsWorkbook,Spire.Xls.ExcelSaveType)">
            <summary>
            Saves workbook into specified file.
            </summary>
            <param name="fullName">Destination file name.</param>
            <param name="book">Workbook to save.</param>
            <param name="saveType">Save type.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.WorkbookExcel97Serializator.Serialize(System.IO.Stream,Spire.Xls.Core.Spreadsheet.XlsWorkbook,Spire.Xls.ExcelSaveType)">
            <summary>
            Saves workbook into stream.
            </summary>
            <param name="stream">Stream to save into.</param>
            <param name="book">Workbook to save.</param>
            <param name="saveType">Save type (template or ordinary xls).</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.WorkbookExcel97Serializator.Serialize(Spire.Xls.Core.Parser.Biff_Records.RecordArrayList,Spire.Xls.ExcelSaveType,Spire.Xls.Core.Spreadsheet.Security.IEncryptor,Spire.Xls.Core.Spreadsheet.XlsWorkbook,Spire.Xls.Core.Spreadsheet.XlsWorksheet,System.Boolean)">
            <summary>
            Saves all workbook records into specified array.
            </summary>
            <param name="records">Array that will receive all workbook records.</param>
            <param name="saveType">Format in which worksheet should be saved.</param>
            <param name="encryptor">Object that is used to encrypt data.</param>
            <param name="book">Workbook to serialize.</param>
            <param name="sheet">Worksheet that must be serialized when we are
            serializing data for clipboard.</param>
            <param name="forClipboard">Indicates whether we are serializing data
            for saving into file or into clipboard.</param>
        </member>
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.XlsWorkbook.m_version”忽略有格式错误的 XML 注释 -->
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsWorkbook.m_customTableStyles">
            <summary>
            Represents a collection of Table style definitions for PivotTable styles.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorkbook.OleSize">
            <summary>
            the visible range of cells when this workbook is displayed as an embedded object in another document;
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorkbook.HasApostrophe">
            <summary>
            Gets or sets a value indicating whether the name ranges has apostrophe.
            </summary>
            <value>
            	<c>true</c> if this instance has apostrophe; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorkbook.CustomTableStyles">
            <summary>
            Represents a collection of Table style definitions for PivotTable styles.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorkbook.DefaultTableStyleName">
            <summary>
            Name of the default table style to apply to new PivotTables.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorkbook.DefaultPivotStyleName">
            <summary>
            Name of default table style to apply to new Tables
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.GetExternalSheetNameByReference(Spire.Xls.Core.Spreadsheet.XlsExternWorkbook,Spire.Xls.Core.Parser.Biff_Records.ExternSheetRecord.TREF,System.Int32)">
            <summary>
            Get name of the external worksheet by reference.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.ReadDocumentPropertiesNative(Spire.CompoundFile.XLS.Native.Storage)">
            <summary>
            Reads document properties using native objects.
            </summary>
            <param name="storage">Storage to get document properties from.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.ReadDocumentPropertiesManaged(Spire.CompoundFile.XLS.ICompoundStorage)">
            <summary>
            Read document properties using managed classes.
            </summary>
            <param name="storage">Storage to get document properites from.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.Close(System.String)">
            <summary>
            Closes the object and saves changes into specified file.
            </summary>
            <param name="Filename">
            File name in which workbook will be saved if SaveChanges is true.
            </param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.UpdateXFIndexes(System.Int32)">
            <summary>
            Updates indexes in all records accordingly to the new maximum count property.
            </summary>
            <param name="maxCount">New value of maximum possible XF index.</param>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.XlsWorkbook.SpireFreeExp">
            <summary>
            Class SpireFreeExp.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorkbook.SpireFreeExp.#ctor(System.String)">
            <summary>
            Class using the specified error message and a new instance of the class.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorkbook.SpireFreeExp.Message">
            <summary>
            Gets the message that describes the current exception.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.WorksheetImageConverter.DrawBackground(Spire.Xls.Core.Interfaces.IInternalAddtionalFormat,System.Drawing.Rectangle,System.Drawing.Graphics)">
            <summary>
            Draws background at the specified position.
            </summary>
            <param name="xf">Object containing background settings.</param>
            <param name="rect">Rectangle specifying coordinates of the drawn background.</param>
            <param name="graphics">Graphics to draw at.</param>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsIconSet.m_arrCriteria">
            <summary>
            An IconCriteria collection which represents the set of criteria for
            an icon set conditional formatting rule.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsIconSet.m_iconSet">
            <summary>
            An IconSets collection which specifies the icon set used
            in the conditional format.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsIconSet.m_bPercentileValues">
            <summary>
            A Boolean value indicating if the thresholds for an icon
            set conditional format are determined using percentiles. 
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsIconSet.m_bReverseOrder">
            <summary>
            A Boolean value indicating if the order of icons is
            reversed for an icon set.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsIconSet.m_bShowIconOnly">
            <summary>
            A Boolean value indicating if only the icon is displayed
            for an icon set conditional format.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsIconSet.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsIconSet.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsIconSet.IconCriteria">
            <summary>
            Returns an IconCriteria collection which represents the set of criteria for
            an icon set conditional formatting rule.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsIconSet.IconSet">
            <summary>
            Returns or sets an IconSets collection which specifies the icon set used
            in the conditional format.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsIconSet.PercentileValues">
            <summary>
            Returns or sets a Boolean value indicating if the thresholds for an icon
            set conditional format are determined using percentiles. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsIconSet.IsReverseOrder">
            <summary>
            Returns or sets a Boolean value indicating if the order of icons is
            reversed for an icon set.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsIconSet.ShowIconOnly">
            <summary>
            Returns or sets a Boolean value indicating if only the icon is displayed
            for an icon set conditional format.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsIconSet.UpdateCriteria">
            <summary>
            Updates criteria collection.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.IconSetWrapper.m_format">
            <summary>
            Parent format.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.IconSetWrapper.m_arrConditions">
            <summary>
            Wrapper over condition values.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.IconSetWrapper.m_readOnly">
            <summary>
            Read-only part copy of the criteria collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.IconSetWrapper.IconCriteria">
            <summary>
            Returns an IconCriteria collection which represents the set of criteria for
            an icon set conditional formatting rule.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.IconSetWrapper.IconSet">
            <summary>
            Returns or sets an IconSets collection which specifies the icon set used
            in the conditional format.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.IconSetWrapper.PercentileValues">
            <summary>
            Returns or sets a Boolean value indicating if the thresholds for an icon
            set conditional format are determined using percentiles. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.IconSetWrapper.IsReverseOrder">
            <summary>
            Returns or sets a Boolean value indicating if the order of icons is
            reversed for an icon set.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.IconSetWrapper.ShowIconOnly">
            <summary>
            Returns or sets a Boolean value indicating if only the icon is displayed
            for an icon set conditional format.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.IconSetWrapper.BeginUpdate">
            <summary>
            This method should be called before several updates to the object will take place.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.IconSetWrapper.EndUpdate">
            <summary>
            This method should be called after several updates to the object took place.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.IconSetWrapper.#ctor(Spire.Xls.ConditionalFormatWrapper)">
            <summary>
            Initializes new instance of the wrapper.
            </summary>
            <param name="format">Parent format wrapper.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.IconSetWrapper.UpdateCollection(System.Collections.Generic.IList{Spire.Xls.IConditionValue})">
            <summary>
            Updates internal criteria collection.
            </summary>
            <param name="arrSource">Condtions to update.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.IconSetWrapper.Add(System.Int32,System.Collections.Generic.IList{Spire.Xls.IConditionValue})">
            <summary>
            Adds required number of new wrappers to the criteria collection.
            </summary>
            <param name="count">Number of items to add.</param>
            <param name="arrSource">Source collection to wrap.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.IconSetWrapper.Update(System.Int32)">
            <summary>
            Updates wrappers inside criteria collection.
            </summary>
            <param name="count">Number of wrappers to update.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.IconSetWrapper.Remove(System.Int32)">
            <summary>
            Removes wrappers from criteria collection.
            </summary>
            <param name="count">Number of wrappers to remove.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.IconSetWrapper.GetIconSet">
            <summary>
            Returns wrapped icon set.
            </summary>
            <returns>Wrapped icon set.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.FillPattern">
            <summary>
            Gets or Sets fill pattern type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.ExtendedFormatIndex">
            <summary>
            Gets extended format index.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.BackgroundKnownColor">
            <summary>
            Gets or Sets index of fill background excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.BackgroundColor">
            <summary>
            Gets or Sets fill background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.ForegroundKnownColor">
            <summary>
            Gets or Sets fill foreground excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.ForegroundColor">
            <summary>
            Gets or Sets fill foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.NumberFormatIndex">
            <summary>
            Gets or Sets format index.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.HorizontalAlignment">
            <summary>
            Returns or sets the horizontal alignment for the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.IncludeAlignment">
            <summary>
            True if the style includes the AddIndent, HorizontalAlignment,
            VerticalAlignment, WrapText, and Orientation properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.IncludeBorder">
            <summary>
            True if the style includes the Color, KnownColor, LineStyle, and Weight border properties
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.IncludeFont">
            <summary>
            True if the style includes the Background, Bold, Color, KnownColor, FontStyle, Italic, Name, OutlineFont, Shadow, Size, Strikethrough, Subscript, Superscript, and Underline font properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.IncludeNumberFormat">
            <summary>
            True if the style includes the NumberFormat property.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.IncludePatterns">
            <summary>
            True if the style includes the Color, KnownColor,
            InvertIfNegative, Pattern, PatternColor, and PatternKnownColor
            interior properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.IncludeProtection">
            <summary>
            True if the style includes the FormulaHidden and Locked protection
            properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.IndentLevel">
            <summary>
            Returns or sets the indent level for the style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.FormulaHidden">
            <summary>
            True if the formula will be hidden when the worksheet is protected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.Locked">
            <summary>
            True if the object is locked; False if the object can be modified when the sheet is protected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.JustifyLast">
            <summary>
            Represents justify text alignment
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.NumberFormat">
            <summary>
            Returns or sets the format code for the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.NumberFormatLocal">
            <summary>
            Returns or sets the format code for the object as a string in the
            language of the user.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.NumberFormatSettings">
            <summary>
            Returns object that describes number format. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.ReadingOrder">
            <summary>
            Returns or sets the reading order for the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.Rotation">
            <summary>
            The text orientation. Can be an integer value from 1 to 180 degrees
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.ShrinkToFit">
            <summary>
            True if text automatically shrinks to fit in the available column width.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.VerticalAlignment">
            <summary>
            Returns or sets the vertical alignment of the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.WrapText">
            <summary>
            True if Microsoft Excel wraps the text in the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.IsFirstSymbolApostrophe">
            <summary>
            If true then first symbol in cell is apostrophe.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.PatternKnownColor">
            <summary>
            Returns or sets the excel color of the interior.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.PatternColor">
            <summary>
            Returns or sets the color of the interior pattern.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.KnownColor">
            <summary>
            Gets or sets the cell shading excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.Color">
            <summary>
            Gets or sets the cell shading color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.FontIndex">
            <summary>
            Gets or Sets font index.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.BottomBorderColor">
            <summary>
            Gets or sets bottom border color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.TopBorderColor">
            <summary>
            Gets or sets top border color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.LeftBorderColor">
            <summary>
            Gets or sets left border color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.RightBorderColor">
            <summary>
            Gets or sets right border color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.DiagonalBorderColor">
            <summary>
            Gets or sets diagonal border color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.LeftBorderLineStyle">
            <summary>
            Gets or sets line style of the left border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.RightBorderLineStyle">
            <summary>
            Gets or sets line style of the right border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.TopBorderLineStyle">
            <summary>
            Gets or sets line style of the top border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.BottomBorderLineStyle">
            <summary>
            Gets or sets line style of the bottom border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.DiagonalUpBorderLineStyle">
            <summary>
            Gets or sets line style of the diagonal border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.DiagonalDownBorderLineStyle">
            <summary>
            Gets or sets line style of the diagonal border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.DiagonalUpVisible">
            <summary>
            Indicates whether DiagonalUp line is visible.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.DiagonalDownVisible">
            <summary>
            Indicates whether diagonal down line is visible.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.Parent">
            <summary>
            Reference to Parent object. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.BuiltIn">
            <summary>
            True if the style is a built-in style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.Name">
            <summary>
            Returns the name of the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.AddtionalFormatWrapper.IsInitialized">
            <summary>
            Indicates whether style has been initialized.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.IsBold">
            <summary>
            True if the font is bold.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.KnownColor">
            <summary>
            Returns or sets the primary excel color of the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.Color">
            <summary>
            Returns or sets the primary color of the font.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.IsItalic">
            <summary>
            True if the font style is italic. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.MacOSOutlineFont">
            <summary>
            True if the font is an outline font. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.MacOSShadow">
            <summary>
            True if the font is a shadow font or if the object has
            a shadow. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.Size">
            <summary>
            Returns or sets the size of the font. Read / write integer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.IsStrikethrough">
            <summary>
            True if the font is struck through with a horizontal line.
            Read / write Boolean
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.IsSubscript">
            <summary>
            True if the font is formatted as subscript.
            False by default. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.IsSuperscript">
            <summary>
            True if the font is formatted as superscript. False by default.
            Read/write Boolean
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.Underline">
            <summary>
            Returns or sets the type of underline applied to the font. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.FontName">
            <summary>
            Returns or sets the font name. Read / write string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.FontIndex">
            <summary>
            Returns or sets the color of the font.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.IsReadOnly">
            <summary>
            Indicates whether font is read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.Workbook">
            <summary>
            Returns workbook.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.Index">
            <summary>
            Returns index of the font. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.FontWrapper.Font">
            <summary>
            Returns internal font.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.HeaderImageGetter.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.RTFStringArray.BeginUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.RTFStringArray.EndUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.RichTextString.Append(System.String,Spire.Xls.Core.IFont)">
            <summary>
            Appends rich text string with specified text and font.
            </summary>
            <param name="text">Text to append.</param>
            <param name="font">Font to use.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.RichTextString.Parent">
            <summary>
            Returns parent object. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.RichTextString.Application">
            <summary>
            Returns parent application object. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.RichTextString.Clone(System.Object)">
            <summary>
            Creates a copy of the current object.
            </summary>
            <param name="parent">Parent object for the new object.</param>
            <returns>A copy of the current object.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.ShapesGetter.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <!-- 对于成员“M:Spire.Xls.Core.Spreadsheet.TemplateMarkers.XlsTemplateMarkers.IsDataView(System.Object)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Xls.Core.Spreadsheet.WorksheetCustomProperty.Clone">
            <summary>
            Creates a copy of the current object.
            </summary>
            <returns>A copy of the current object.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAddInFunction.BookIndex">
            <summary>
            Gets or sets book index.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAddInFunction.NameIndex">
            <summary>
            Name index.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAddInFunction.Name">
            <summary>
            Name of add-in function.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsAddInFunction.Clone(System.Object)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="parent">Parent object for a copy of this instance.</param>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsApplication.m_dataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsApplication.m_dictCultureInfo">
            <summary>
            The cache of Cultureinfo
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsApplication.CreateCommentXlsShape(System.Object,System.Boolean)">
            <summary>
            Initialize new CommentXlsShape.
            </summary>
            <param name="parent">Parent object for the new CommentXlsShape.</param>
            <param name="bIsParseOptions">Indicates is parse comment XlsFill line options.</param>
            <returns>Newly created CommentXlsShape.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsApplication.CreateCheckBoxXlsShape(System.Object)">
            <summary>
            Creates new instance of the checkbox shape.
            </summary>
            <param name="shapesCollection">Parent shapes collection.</param>
            <returns>Created checkbox shape.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.SecondCondition">
            <summary>
            Second condition of autofilter.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.IsFiltered">
            <summary>
            Indicates whether the filter used.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.IsAnd">
            <summary>
            Logical AND of FirstCondtion and SecondCondition.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.IsOR">
            <summary>
            Logical OR of FirstCondtion and SecondCondition.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.IsTop10Percent">
            <summary>
            Highest-valued 10 items displayed (percentage specified in condition)
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.IsSimple1">
            <summary>
            True if the first condition is a simple equality.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.IsSimple2">
            <summary>
            True if the second condition is a simple equality.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.ShowTopItem">
            <summary>
            The top items to display in Top10Items mode.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.IsTop10Items">
            <summary>
            Highest-valued 10 items displayed 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.Top10Items">
            <summary>
            number of items display in Top10Items mode.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.Worksheet">
            <summary>
            Returns parent worksheet. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.Index">
            <summary>
            Item index of AutoFilter drop-down arrows.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.HasFirstCondition">
            <summary>
            First condition used.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.HasSecondCondition">
            <summary>
            Second condition used
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.IsBlanks">
            <summary>
            Indicates whether filterd  is blanks.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.IsNonBlanks">
            <summary>
            Indicates whether filterd  is Non-Blanks..
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.Clear">
            <summary>
            Clears data.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsAutoFilter.Clone(System.Object)">
            <summary>
            Clone current instance.
            </summary>
            <param name="parent">Parent object.</param>
            <returns>Created object.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilterCondition.DataType">
            <summary>
            Data type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilterCondition.ConditionOperator">
            <summary>
            Comparison operator.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilterCondition.String">
            <summary>
            String value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilterCondition.Boolean">
            <summary>
            Boolean value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilterCondition.ErrorCode">
            <summary>
            Error code.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsAutoFilterCondition.Double">
            <summary>
            Floating-point value.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsAutoFilterCondition.Clone(System.Object)">
            <summary>
            Clones current instance.
            </summary>
            <param name="parent">Parent object.</param>
            <returns>Cloned object.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsBorder.KnownColor">
            <summary>
            Returns or sets a ExcelColors value that represents the color of the border
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsBorder.Color">
            <summary>
            Returns or sets the primary color of the object, as shown in the table in the remarks section. Use the RGB function to create a color value. 
            Read/write Color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsBorder.LineStyle">
            <summary>
            Returns or sets the line style for the border. Read/write LineStyleType.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsBorder.ShowDiagonalLine">
            <summary>
            Indicates whether shows diagonal line.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsCalculationOptions.Clone(System.Object)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="parent">Parent object for a copy of this instance.</param>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.LeftBorderKnownColor">
            <summary>
            Excel color of the left line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.LeftBorderStyle">
            <summary>
            Left border line style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.RightBorderKnownColor">
            <summary>
            Color of the right line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.RightBorderColor">
            <summary>
            Color of the right line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.RightBorderStyle">
            <summary>
            Right border line style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.TopBorderKnownColor">
            <summary>
            Excel color of the top line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.TopBorderStyle">
            <summary>
            Top border line style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.BottomBorderKnownColor">
            <summary>
            Excel color of the bottom line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.BottomBorderColor">
            <summary>
            Color of the bottom line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.BottomBorderStyle">
            <summary>
            Bottom border line style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.FirstFormula">
            <summary>
            First formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.SecondFormula">
            <summary>
            Second formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.Operator">
            <summary>
            Type of the comparison operator.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsBold">
            <summary>
            Indicates whether font is bold.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsItalic">
            <summary>
            Indicates whether font is italic.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.FontKnownColor">
            <summary>
            Font excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.Underline">
            <summary>
            Underline type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsStrikeThrough">
            <summary>
            Indicates whether font is striked through.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsSuperScript">
            <summary>
            Indicates whether font is superscript.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsSubScript">
            <summary>
            Indicates whether font is subscript.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.KnownColor">
            <summary>
            Pattern foreground excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.Color">
            <summary>
            Pattern foreground color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.BackKnownColor">
            <summary>
            Pattern background excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.BackColor">
            <summary>
            Pattern background color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.FillPattern">
            <summary>
            XlsFill pattern type.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsFontFormatPresent">
            <summary>
            Indicates whether contains font formatting.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsBorderFormatPresent">
            <summary>
            Indicates whether contains border formatting.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsPatternFormatPresent">
            <summary>
            Indicates whether contains pattern formatting.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsFontColorPresent">
            <summary>
            Indicates whether format color present.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsPatternColorPresent">
            <summary>
            Indicates whether presents pattern color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsBackgroundColorPresent">
            <summary>
            Indicates whether background color present.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsLeftBorderModified">
            <summary>
            Indicates whether left border style and color are modified.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsRightBorderModified">
            <summary>
            Indicates right border style and color modified.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsTopBorderModified">
            <summary>
            Indicates whether top border style and color are modified.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsBottomBorderModified">
            <summary>
            Indicates whether bottom border style and color are modified.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.Clone(System.Object)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="parent">Parent object for a copy of this instance.</param>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.OColor">
            <summary>
            Conditional format color. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.BackColorObject">
            <summary>
            Conditional format background color. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.TopBorderColorObject">
            <summary>
            Conditional format top border color. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.BottomBorderColorObject">
            <summary>
            Conditional format bottom border color. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.LeftBorderColorObject">
            <summary>
            Conditional format left border color. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.RightBorderColorObject">
            <summary>
            Conditional format right border color. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.FontColorObject">
            <summary>
            Conditional format font color. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsConditionalFormat.IsPatternStyleModified">
            <summary>
            Indicates whether pattern style was modified.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsExtendedFormat.InitializeColors">
            <summary>
            Initializes color objects.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsExternWorkbook.AddExternSheet(Spire.Xls.Core.Spreadsheet.XlsExternWorksheet)">
            <summary>
            Adds extern worksheet.
            </summary>
            <param name="sheet">Sheet to add.</param>
        </member>
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.XlsFont.characterRanges”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.IsBold">
            <summary>
            True if the font is bold. Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.KnownColor">
            <summary>
            Returns or sets the primary color of the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.Color">
            <summary>
            Gets / sets font color. Searches for the closest color in 
            the workbook palette.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.IsItalic">
            <summary>
            True if the font style is italic. Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.MacOSOutlineFont">
            <summary>
            True if the font is an outline font. Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.MacOSShadow">
            <summary>
            True if the font is a shadow font or if the object has
            a shadow. Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.Size">
            <summary>
            Returns or sets the size of the font in points. Read / write Variant.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.IsStrikethrough">
            <summary>
            True if the font is struck through with a horizontal line.
            Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.IsSubscript">
            <summary>
            True if the font is formatted as subscript.
            False by default. Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.IsSuperscript">
            <summary>
            True if the font is formatted as superscript; False by default.
            Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.Underline">
            <summary>
            Returns or sets the type of underline applied to the font. Can
            be one of the following FontUnderlineTypeStyle constants.
            Read/write FontUnderlineType.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.FontName">
            <summary>
            Returns or sets the font name. Read/write string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.FontEAName">
            <summary>
            get/set EaName
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.FontCSName">
            <summary>
            get/set CSName
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.VerticalAlignment">
            <summary>
            Gets / sets font vertical alignment.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.IsAutoColor">
            <summary>
            Indicates whether color is automatically selected. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.Scheme">
            <summary>
            Returns color object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsFont.OColor">
            <summary>
            Returns color object.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsFormat.Clone(System.Object)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="parent">Parent object for a copy of this instance.</param>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHPageBreak.Extent">
            <summary>
            Returns page break extent.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHPageBreak.Type">
            <summary>
            Type of the page break.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHPageBreak.StartColumn">
            <summary>
            Gets the start column index of this horizontal page break
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHPageBreak.EndColumn">
            <summary>
            Gets the end column index of this horizontal page break. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHPageBreak.Row">
            <summary>
            Gets the row index. 
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsHPageBreak.SetLocation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the location of the page break
            </summary>
            <param name="row">The index of the row, basing on 1</param>
            <param name="startCol">The index of the start column, basing on 1</param>
            <param name="endCol">The index of the end column, basing on 1</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHyperLink.UnicodePath">
            <summary>
            Gets/sets an optional string of Unicode characters
            that specifies the complete file path.
            When the property Type is not HyperLinkType.File,
            this property is invalid.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHyperLink.Address">
            <summary>
            Returns or sets the address of the target document.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHyperLink.Name">
            <summary>
            Returns the name of the object. Read-only String.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHyperLink.ScreenTip">
            <summary>
            Returns or sets the ScreenTip text for the specified hyperlink.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHyperLink.SubAddress">
            <summary>
            Returns or sets the location within the document associated with the hyperlink.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHyperLink.TextToDisplay">
            <summary>
            Returns or sets the text to be displayed for the specified hyperlink.
            The default value is the address of the hyperlink.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsHyperLink.Type">
            <summary>
            Returns or sets the object type.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsHyperLink.Clone(System.Object)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="parent">Parent object for a copy of this instance.</param>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsMergedCells.Parse">
            <summary>
            Adds merge regions from the MergeCellsRecord.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsName.EnvalutedValue">
            <summary>
            Returns the calculated value of a formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsName.ConditionalFormats">
            <summary>
            Collection of conditional formats.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsName.Item(System.String,System.Boolean)">
            <summary>
            Gets cell range. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsName.HasExternalFormula">
            <summary>
            Indicates is current range has external formula. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsName.IgnoreErrorOptions">
            <summary>
            Represents ignore error options. If not single cell returs concatenateed flags.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsName.IsStringsPreserved">
            <summary>
            Indicates whether all values in the range are preserved as strings.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsName.WorksheetName">
            <summary>
            Gets name of the parent worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetup.IsPrintHeadings">
            <summary>
            True if row and column headings are printed with this page. Applies
            only to worksheets. Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetup.PrintArea">
            <summary>
            Returns or sets the range to be printed, as a string using A1-style
            references in the language of the macro. Read/write String.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetup.PrintTitleColumns">
            <summary>
            Returns or sets the columns that contain the cells to be repeated on the left side of each page as a string in A1-style notation in the language of the macro.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetup.PrintTitleRows">
            <summary>
            Returns or sets the rows that contain the cells to be repeated at
            the top of each page, as a string in A1-style notation in the
            language of the macro.
            For example: "$1:$1" will repeate the first row and "$1:$3" will repeate row 1, row 2 and row 3.
            </summary>
        </member>
        <!-- 对于成员“P:Spire.Xls.Core.Spreadsheet.XlsPageSetup.IsFitToPage”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetup.IsSummaryRowBelow">
            <summary>
            Indicates whether summary rows will appear below detail in outlines.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetup.IsSummaryColumnRight">
            <summary>
            Indicates whether summary columns will appear right of the detail in outlines.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetup.DefaultRowHeight">
            <summary>
            Gets or sets default row height.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetup.RelationId">
            <summary>
            Gets / sets relation id to the printer settings part.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.m_alignWithMargins">
            <summary>
            set page header and footer have two value 0/1 default is 1
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.AlignWithMargins">
            <summary>
            Indicates whether align header footer margins with page margins.default is 1
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.DifferentOddEven">
            <summary>
            Indicates whether different odd and even page headers and footers.default is 0
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.ScaleWithDoc">
            <summary>
            Indicates whether scale header and footer with document scaling.default is 1
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.DifferentFirst">
            <summary>
            Indicates whether different first page header and footer.default is 0
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.IsFitToPage">
            <summary>
            Indicates whether fit to page.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.AutoFirstPageNumber">
            <summary>
            Indicates whether FirstPageNumber is set to Auto or not.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.BlackAndWhite">
            <summary>
            True if elements of the document will be printed in black and white.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.BottomMargin">
            <summary>
            Returns or sets the size of the bottom margin, in inches.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterFooter">
            <summary>
            Returns or sets the center part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterFooterImage">
            <summary>
            Gets or set image for center part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterFooterPictureWidth">
            <summary>
            Gets or set width of picture for center part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterFooterPictureHeight">
            <summary>
            Gets or set height of picture for center part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterHeaderImage">
            <summary>
            Gets or set image for center part of the header.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterHeaderPictureWidth">
            <summary>
            Gets or set width of picture for center part of the header.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterHeaderPictureHeight">
            <summary>
            Gets or set height of picture for center part of the header.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterHeader">
            <summary>
            Returns or sets the center part of the header. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterHorizontally">
            <summary>
            True if the sheet is centered horizontally on the page when it is
            printed. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.CenterVertically">
            <summary>
            True if the sheet is centered vertically on the page when it is
            printed. Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.Copies">
            <summary>
            Number of copies to print.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.Draft">
            <summary>
            True if the sheet will be printed without graphics.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.FirstPageNumber">
            <summary>
            Returns or sets the first page number that will be used when
            this sheet is printed. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.FooterMarginInch">
            <summary>
            Returns or sets the distance from the bottom of the page to the footer,
            in inches.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.HeaderMarginInch">
            <summary>
            Returns or sets the distance from the top of the page to the header,
            in inches. Read/write Double.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.LeftFooter">
            <summary>
            Returns or sets the left part of the footer
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.LeftHeader">
            <summary>
            Returns or sets the left part of the header. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.LeftFooterImage">
            <summary>
            Gets or set image for left part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.LeftFooterPictureWidth">
            <summary>
            Gets or set width of picture for left part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.LeftFooterPictureHeight">
            <summary>
            Gets or set height of picture for left part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.LeftHeaderImage">
            <summary>
            Gets or set image for left part of the header.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.LeftHeaderPictureWidth">
            <summary>
            Gets or set width of picture for left part of the header.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.LeftHeaderPictureHeight">
            <summary>
            Gets or set height of picture for left part of the header.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.LeftMargin">
            <summary>
            Returns or sets the size of the left margin, in inches.
            Read/write Double.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.Order">
            <summary>
            Returns or sets the order that Microsoft Excel uses to number pages when printing a large worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.PaperSize">
            <summary>
            Returns or sets the size of the paper.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.PrintComments">
            <summary>
            Returns or sets the way comments are printed with the sheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.PrintNotes">
            <summary>
            True if cell notes are printed as end notes with the sheet. Applies
            only to worksheets. Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.PrintQuality">
            <summary>
            Returns or sets the print quality. Read / write ushort.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.RightFooter">
            <summary>
            Returns or sets the right part of the footer. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.RightFooterImage">
            <summary>
            Gets or sets image for right part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.RightFooterPictureWidth">
            <summary>
            Gets or set width of picture for right part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.RightFooterPictureHeight">
            <summary>
            Gets or set height of picture for right part of the footer.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.RightHeader">
            <summary>
            Returns or sets the right part of the header
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.RightHeaderImage">
            <summary>
            Gets or sets image for right part of the header.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.RightHeaderPictureWidth">
            <summary>
            Gets or set width of picture for right part of the header.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.RightHeaderPictureHeight">
            <summary>
            Gets or set height of picture for right part of the header.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.RightMargin">
            <summary>
            Returns or sets the size of the right margin, in inches.
            Read/write Double.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.TopMargin">
            <summary>
            Returns or sets the size of the top margin, in points.
            Read/write Double.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.Zoom">
            <summary>
            Returns or sets a percentage (between 10 and 400 percent) by which Microsoft Excel will scale the worksheet for printing. Applies only to worksheets
            </summary>
        </member>
        <!-- 对于成员“P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.BackgoundImage”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.PageWidth">
            <summary>
            Returns page width in points. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.PageHeight">
            <summary>
            Returns page width in points. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.HResolution">
            <summary>
            Gets or sets horizontal resolution in dpi.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.VResolution">
            <summary>
            Gets or sets vertical resolution in dpi.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.FullHeaderString">
            <summary>
            Represents full header string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.FullFooterString">
            <summary>
            Gets footer full string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.FirstHeaderString">
            <summary>
            Represents first page header string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.FirstFooterString">
            <summary>
            Gets first page footer string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.OddHeaderString">
            <summary>
            Gets Odd page header string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.OddFooterString">
            <summary>
            Gets Odd page footer string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.EvenHeaderString">
            <summary>
            Gets Even page header string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsPageSetupBase.EvenFooterString">
            <summary>
            Gets OddEven page footer string.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsRange.MinAllowedDateTicks">
            <summary>
            Minimum supported date time value.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsRange.m_Validation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RangeAddress">
            <summary>
            Returns the range reference in the language of the macro. 
            Read-only String.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RangeAddressLocal">
            <summary>
            Returns the range reference for the specified range in the language of the user.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RangeR1C1Address">
            <summary>
            Returns the range reference using R1C1 notation.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RangeR1C1AddressLocal">
            <summary>
            Returns the range reference using R1C1 notation.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.BooleanValue">
            <summary>
            Returns or sets the bool value of the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Column">
            <summary>
            Returns the number of the first column in the first area in the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.ColumnGroupLevel">
            <summary>
            Column group level.
            </summary>
            <remarks>
            -1 - column group is not same.
             0 - Not group
             1 - 7 - group level.
            </remarks>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.ColumnWidth">
            <summary>
            Returns or sets the width of all columns in the specified range. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Count">
            <summary>
            Returns the number of objects in the collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasDataValidation">
            <summary>
            Indicates whether specified range object has data validation.
            If Range is not single cell, then returns true only if all cells have data validation. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.ColumnCount">
            <summary>
            Gets number of columns.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RowCount">
            <summary>
            Gets number of rows.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasConditionFormats">
            <summary>
            Indicates whether each cell of the range has some conditional formatting. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.DateTimeValue">
            <summary>
            Gets/sets DateTime value of the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.DisplayedText">
            <summary>
            Gets cell displayed text.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.NumberText">
            <summary>
            Returns cell text for number format.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.EntireRow">
            <summary>
            Returns a Range object that represents the entire row (or 
            rows) that contains the specified range. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.ErrorValue">
            <summary>
            Gets or sets error value of this range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Formula">
            <summary>
            Returns or sets the object's formula in A1-style notation and in 
            the language of the macro.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.FormulaArray">
            <summary>
            Returns or sets the array formula of a range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.FormulaStringValue">
            <summary>
            Gets or sets string value of the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.FormulaNumberValue">
            <summary>
            Gets or sets double value of the formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.FormulaErrorValue">
            <summary>
            Gets or sets error value of the formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.FormulaValue">
            <summary>
            Gets formula value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IsFormulaHidden">
            <summary>
            Determines if the formula will be hidden when the worksheet is protected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.FormulaDateTime">
            <summary>
            Gets or sets bool value of the formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.FormulaR1C1">
            <summary>
            Returns or sets the formula for the object, using R1C1-style notation in the language of the macro
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.FormulaArrayR1C1">
            <summary>
            Returns or sets the formula for the object, using R1C1-style notation in the language of the macro
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasFormula">
            <summary>
            True if all cells in the range contain formulas; 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasFormulaArray">
            <summary>
            Determines if all cells in the range contain array-entered formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HorizontalAlignment">
            <summary>
            Returns or sets the horizontal alignment for the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Hyperlinks">
            <summary>
            Returns hyperlinks for this range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IndentLevel">
            <summary>
            Returns or sets the indent level for the cell or range. value should be 0 between 15.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasError">
            <summary>
            Indicates whether range contains error value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IsGroupedByColumn">
            <summary>
            Indicates whether this range is grouped by column.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IsGroupedByRow">
            <summary>
            Indicates whether this range is grouped by row.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.LastColumn">
            <summary>
            Gets or sets last column of the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.LastRow">
            <summary>
            Gets or sets last row of the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.NumberValue">
            <summary>
            Gets or sets number value of the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.NumberFormat">
            <summary>
            Returns or sets the format code for the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Row">
            <summary>
            Returns the number of the first row of the first area in the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RowGroupLevel">
            <summary>
            Row group level.
            </summary>
            <remarks>
            -1 - column group is not same.
             0 - Not group
             1 - 7 - group level.
            </remarks>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RowHeight">
            <summary>
            Returns the height of all the rows in the range specified, measured in points.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.CellStyleName">
            <summary>
            Gets/sets name of the style for the current range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Text">
            <summary>
            Gets / sets text of range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.TimeSpanValue">
            <summary>
            Gets or sets timespan value of cell.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Value">
            <summary>
            Returns or sets the value of the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.EnvalutedValue">
            <summary>
            Returns the calculated value of a formula.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Value2">
            <summary>
            Returns or sets the cell value.
            It's not use for current and datetime types.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.VerticalAlignment">
            <summary>
            Returns or sets the vertical alignment of the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Worksheet">
            <summary>
            Returns a worksheet object that represents the worksheet 
            containing the specified range. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.DataValidation">
            <summary>
            DataValidation for the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasFormulaBoolValue">
            <summary>
            Determines if all cells in the range contain formula bool value..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasFormulaErrorValue">
            <summary>
            Determines if all cells in the range contain error value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasFormulaDateTime">
            <summary>
            Indicates if current range has formula value formatted as DateTime. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasFormulaNumberValue">
            <summary>
            Indicates whether current range has formula number value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IsBlank">
            <summary>
            Indicates whether the range is blank.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasPictures">
            <summary>
            Indicates whether the range is blank.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasBoolean">
            <summary>
            Indicates whether range contains bool value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasDateTime">
            <summary>
            Determines if all cells in the range contain datetime.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasNumber">
            <summary>
            Determines if any one cell in the range contain number.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IsAllNumber">
            <summary>
            Determines if all cells in the range contain number.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasString">
            <summary>
            Determines if all cells in the range contain string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasRichText">
            <summary>
            Determines if all cells in the range contain rich text string.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasMerged">
            <summary>
            Indicates whether this range is part of merged range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IsInitialized">
            <summary>
            Indicates whether range has been initialized.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasStyle">
            <summary>
            Determines if all cells in the range contain  differs from default style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IsWrapText">
            <summary>
            Determines if Microsoft Excel wraps the text in the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IgnoreErrorOptions">
            <summary>
            Represents ignore error options. If not single cell returs concatenateed flags.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.HasExternalFormula">
            <summary>
            Indicates is current range has external formula. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.IsStringsPreserved">
            <summary>
            Indicates whether all values in the range are preserved as strings.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RangeGlobalAddress">
            <summary>
            Returns the range reference in the language of the macro. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RangeGlobalAddressWithoutSheetName">
            <summary>
            Return global address without worksheet name.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.CellIndex">
            <summary>
            return cell index, If single cell.otherwise returns -1
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.Workbook">
            <summary>
            Returns a workbook object that represents the workbook containing the specified range
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.FormulaArrays">
            <summary>
             Returns the arrays formula of a range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.CellsCount">
            <summary>
            Gets number of cells.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.RangeGlobalAddress2007">
            <summary>
            Gets address global in the format required by Excel 2007.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.ReparseFormulaString">
            <summary>
            Reparses formula.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.UpdateNamedRange(System.Int32[])">
            <summary>
            Updates named ranges indexes.
            </summary>
            <param name="arrNewIndex">New indexes.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.UpdateRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Update region of range
            </summary>
            <param name="startRow">first Row</param>
            <param name="startColumn">first Column</param>
            <param name="endRow">last Row</param>
            <param name="endColumn">last Column</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.PartialClear">
            <summary>
            Partially clear range.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.SetListAutoFormatPattern(System.Boolean,Spire.Xls.ExcelColors,Spire.Xls.ExcelColors)">
            <summary>
            Sets auto format pattern for list_1 or list_2 types.
            </summary>
            <param name="bIsList_1">Indicates if it is list_1 auto format type.</param>
            <param name="foreCol">Represents default fore color.</param>
            <param name="backColor">Represents default back color.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Activate(System.Boolean)">
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.GroupByColumns(System.Boolean)">
            <summary>
            Groups columns. 
            </summary>
            <param name="isCollapsed">Indicates whether group should be collapsed.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.GroupByRows(System.Boolean)">
            <summary>
            Groups row. 
            </summary>
            <param name="isCollapsed">Indicates whether group should be collapsed.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.UngroupByColumns">
            <summary>
            Ungroups column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.UngroupByRows">
            <summary>
            Ungroups row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Merge">
            <summary>
            Creates a merged cell from the specified Range object.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Merge(System.Boolean)">
            <summary>
            Creates a merged cell from the specified Range object.
            </summary>
            <param name="clearCells">Indicates whether to clear unnecessary cells.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.UnMerge">
            <summary>
            Separates a merged area into individual cells.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.FreezePanes">
            <summary>
            Freezes panes at the current range in the worksheet. current range should be single cell range.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.ClearContents">
            <summary>
            Clear the contents of the Range.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.ClearAll">
            <summary>
            Clears the entire object.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.AddComment">
            <summary>
            Adds a comment to the range.
            </summary>
            <returns>Created comment or exists one.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.MeasureString(System.String)">
            <summary>
            Measures size of the string.
            </summary>
            <param name="measureString">String to measure.</param>
            <returns>Size of the string.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.AutoFitRows">
            <summary>
            Changes the width of the height of the rows in the range to achieve the best fit.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.AutoFitColumns">
            <summary>
            Changes the width of the columns in the range in the range to achieve the best fit.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Replace(System.String,System.String)">
            <summary>
            Replaces cells' values with new data. 
            </summary>
            <param name="oldValue">Value to search for.</param>
            <param name="newValue">The replacement value.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Replace(System.String,System.Double)">
            <summary>
            Replaces cells' values with new data. 
            </summary>
            <param name="oldValue">Value to search for.</param>
            <param name="newValue">The replacement value.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Replace(System.String,System.DateTime)">
            <summary>
            Replaces cells' values with new data. 
            </summary>
            <param name="oldValue">Value to search for.</param>
            <param name="newValue">The replacement value.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Replace(System.String,System.String[],System.Boolean)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">Value to search for.</param>
            <param name="newValues">The replacement value.</param>
            <param name="isVertical">Indicates whether to insert values vertically or horizontally.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Replace(System.String,System.Int32[],System.Boolean)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">Value to search for.</param>
            <param name="newValues">The replacement value.</param>
            <param name="isVertical">Indicates whether to insert values vertically or horizontally.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Replace(System.String,System.Double[],System.Boolean)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">Value to search for.</param>
            <param name="newValues">The replacement value.</param>
            <param name="isVertical">Indicates whether to insert values vertically or horizontally.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Replace(System.String,System.Data.DataTable,System.Boolean)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">Value to search for.</param>
            <param name="newValues">The replacement value.</param>
            <param name="isVertical">Indicates whether to insert values vertically or horizontally.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Replace(System.String,System.Data.DataColumn,System.Boolean)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">Value to search for.</param>
            <param name="newValues">DataColumn to replace.</param>
            <param name="isFieldNamesShown">Indicates whether to insert values vertically or horizontally.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.CopyToClipboard">
            <summary>
            Copies range to the clipboard.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.BorderAround">
            <summary>
            Sets around border for current range.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.BorderAround(Spire.Xls.LineStyleType)">
            <summary>
            Sets around border for current range.
            </summary>
            <param name="borderLine">Represents border line.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.BorderAround(Spire.Xls.LineStyleType,System.Drawing.Color)">
            <summary>
            Sets around border for current range.
            </summary>
            <param name="borderLine">Represents border line.</param>
            <param name="borderColor">Represents border color.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.BorderAround(Spire.Xls.LineStyleType,Spire.Xls.ExcelColors)">
            <summary>
            Sets around border for current range.
            </summary>
            <param name="borderLine">Represents border line.</param>
            <param name="borderColor">Represents border color as ExcelColors.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.BorderInside">
            <summary>
            Sets inside border for current range.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.BorderInside(Spire.Xls.LineStyleType)">
            <summary>
            Sets inside border for current range.
            </summary>
            <param name="borderLine">Represents border line.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.BorderInside(Spire.Xls.LineStyleType,System.Drawing.Color)">
            <summary>
            Sets inside border for current range.
            </summary>
            <param name="borderLine">Represents border line.</param>
            <param name="borderColor">Represents border color.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.BorderInside(Spire.Xls.LineStyleType,Spire.Xls.ExcelColors)">
            <summary>
            Sets inside border for current range.
            </summary>
            <param name="borderLine">Represents border line.</param>
            <param name="borderColor">Represents border color as ExcelColors.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.BorderNone">
            <summary>
            Sets none border for current range.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.SetAutoFormat(Spire.Xls.AutoFormatType)">
            <summary>
            Sets auto format for current range.
            </summary>
            <param name="format">Represents format to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.SetAutoFormat(Spire.Xls.AutoFormatType,Spire.Xls.AutoFormatOptions)">
            <summary>
            Sets auto format for current range.
            </summary>
            <param name="format">Represents auto format to set.</param>
            <param name="options">Represents auto format options.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.GetNewRangeLocation(System.Collections.Generic.Dictionary{System.String,System.String},System.String@)">
            <summary>
            Gets new range location.
            </summary>
            <param name="names">Worksheet names.</param>
            <param name="strSheetName">New worksheet name.</param>
            <returns>New name.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.ClearConditionalFormats">
            <summary>
            Clears conditional formats.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.GetRectangles">
            <summary>
            Gets rectangle information of current range.
            </summary>
            <returns>Rectangles information</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.GetRectanglesCount">
            <summary>
            Returns number of rectangles..
            </summary>
            <returns>Number of rectangles.</returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsRange.WorksheetName">
            <summary>
            Returns name of the parent worksheet.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsRange.Reparse">
            <summary>
            Reparse cell records.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.CellValueChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.CellValueChangedEventArgs.OldValue">
            <summary>
            Gets or sets the old value.
            </summary>
            <value>The old value.</value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.CellValueChangedEventArgs.NewValue">
            <summary>
            Gets or sets the new value.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.CellValueChangedEventArgs.Range">
            <summary>
            Gets or sets the range.
            </summary>
            <value>The range.</value>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.XlsStyle.StyleSettings">
            <summary>
            This class stores default predefined styles settings.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsStyle.StyleSettings.Fill">
            <summary>
            XlsFill settings.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsStyle.StyleSettings.Font">
            <summary>
            Font settings.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsStyle.StyleSettings.Borders">
            <summary>
            Borders information.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsStyle.StyleSettings.#ctor(Spire.Xls.Core.Spreadsheet.XlsFill,Spire.Xls.Core.Spreadsheet.XlsStyle.FontSettings)">
            <summary>
            Initializes new instance of the class.
            </summary>
            <param name="XlsFill">XlsFill object.</param>
            <param name="font">Font object.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsStyle.StyleSettings.#ctor(Spire.Xls.Core.Spreadsheet.XlsFill,Spire.Xls.Core.Spreadsheet.XlsStyle.FontSettings,Spire.Xls.Core.Spreadsheet.XlsStyle.BorderSettings)">
            <summary>
            Initializes new instance of the class.
            </summary>
            <param name="XlsFill">XlsFill object.</param>
            <param name="font">Font object.</param>
            <param name="borders">Borders object.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsStyle.CopyDefaultStyleSettings(System.Int32)">
            <summary>
            Copies default style settings into internal extended format from built-in style.
            </summary>
            <param name="index">Built-in style index.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsStyle.BuiltIn">
            <summary>
            Indicates whether style is build in. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsStyle.Name">
            <summary>
            Returns name of the style..
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsStyle.Index">
            <summary>
            Returns index of the style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsStyle.NotCompareNames">
            <summary>
            Indicates whether do not to compare name during CompareTo operation.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.XlsVPageBreak">
            <summary>
            Represents a vertical page break.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsVPageBreak.Type">
            <summary>
            Type of the page break.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsVPageBreak.Column">
            <summary>
            Gets the column index of the vertical page break. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsVPageBreak.StartRow">
            <summary>
            Gets the start row index of the vertical page break. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsVPageBreak.EndRow">
            <summary>
            Gets the end row index of the vertical page break. 
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsVPageBreak.SetLocation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the location of the page break
            </summary>
            <param name="column">The index of the column, basing on 1</param>
            <param name="startRow">The index of the start row, basing on 1</param>
            <param name="startRow">The index of the end row, basing on 1</param>
        </member>
        <member name="E:Spire.Xls.Core.Spreadsheet.XlsWorksheet.MissingFunction">
            <summary>
            Event raised when missing function is occured.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.FormulaEngine">
            <summary>
            Returns or sets the a Formula Engine object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.HasSheetCalculation">
            <summary>
            Gets a value indicating whether this instance has sheet calculation.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.EnableSheetEnvalution(System.Boolean)">
            <summary>
            Enables calculation support.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsWorksheet.m_zoomScaleNormal">
            <summary>
            the zoom scale of normal view of the sheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsWorksheet.m_zoomScalePageBreakView">
            <summary>
            the zoom scale of page break preview of the sheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsWorksheet.m_zoomScalePageLayoutView">
            <summary>
            the zoom scale of page layout view of the sheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsWorksheet.m_stopLeftCell">
            <summary>
            Top Left Visible Cell of this worksheet -- Office Open XML Part 4 - Markup Language Reference.pdf [3.3.1.83 sheetView (Worksheet View)]
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsWorksheet.allowEditRanges">
            <summary>
            Represents the Collection of protected ranges.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.AllowEditRanges">
            <summary>
            Represents the Collection of protected ranges.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.AddAllowEditRange(System.String,Spire.Xls.CellRange,System.String)">
            <summary>
            AddAllowEditRange : add a range of cells that allow editing
            </summary>
            <param name="title">title</param>
            <param name="range">range</param>
            <param name="password">password</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.AddAllowEditRange(System.String,Spire.Xls.CellRange)">
            <summary>
            AddAllowEditRange : add a range of cells that allow editing
            </summary>
            <param name="title">title</param>
            <param name="range">range</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ViewMode">
            <summary>
            Gets or sets the view mode of the sheet.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Zoom">
            <summary>
            Zoom factor of document.
            </summary>
            <remarks> Value of zoom should be between 10 and 400.</remarks>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ZoomScaleNormal">
            <summary>
            Gets or sets the zoom scale of normal view of the sheet.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ZoomScalePageBreakView">
            <summary>
            Gets or sets the zoom scale of page break preview of the sheet.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ZoomScalePageLayoutView">
            <summary>
            Gets or sets the zoom scale of page layout view of the sheet.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.RealZoomScaleNormal">
            <summary>
            Gets or sets the real zoom scale of normal view of the sheet.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.RealZoomScalePageBreakView">
            <summary>
            Gets or sets the real zoom scale of page break preview of the sheet.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.RealZoomScalePageLayoutView">
            <summary>
            Gets or sets the real zoom scale of page layout view of the sheet.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Excel2007ZoomScale">
            <summary>
            Gets the zoom scale for excel 2007.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.DefaultPrintRowHeight">
            <summary>
            Return default row height in pixel.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ConditionalFormats">
            <summary>
            Returns collection with all conditional formats in the worksheet. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.UseRangesCache">
            <summary>
            Indicates whether all created range objects should be cached. Default value is true.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.QuotedName">
            <summary>
            Returns quoted name of the worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Version">
            <summary>
            Gets or sets excel file version.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.IsVisible">
            <summary>
            Indicates whether IsHidden property is set.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ActivePane">
            <summary>
            Gets or sets index of the active pane.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.DisplayPageBreaks">
            <summary>
            True if page breaks (both automatic and manual) on the specified
            worksheet are displayed.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.IsDisplayZeros">
            <summary>
            Indicates whether zero values to be displayed
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GridLinesVisible">
            <summary>
            True if gridlines are visible;
            False otherwise.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.RowColumnHeadersVisible">
            <summary>
            True if row and column headers are visible.
            False otherwise.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.IsStringsPreserved">
            <summary>
            Indicates if all values in the workbook are preserved as strings.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Names">
            <summary>
            Name range used by macros to access to workbook items.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.IsFreezePanes">
            <summary>
            Indicates whether freezed panes are applied.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.DefaultRowHeight">
            <summary>
            Gets or sets default height of all the rows in the worksheet,
            in points. Double.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.StandardHeightFlag">
            <summary>
            Gets or sets the standard (default) height option flag, which defines that
            standard (default) row height and book default font height do not match. Bool.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.DefaultColumnWidth">
            <summary>
            Returns or sets the default  width of all the columns in the
            worksheet. Read/write Double.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.IsEmpty">
            <summary>
            Indicates whether worksheet is empty. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ListObjects">
            <summary>
            Returns all list objects in the worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ProtectContents">
            <summary>
            Indicates whether current sheet is protected.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.AutoFitRow(System.Int32)">
            <summary>
            Autofits the column width.
            </summary>
            <param name="rowIndex">Row index</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.AutoFitColumn(System.Int32)">
            <summary>
            Autofits the column width.
            </summary>
            <param name="colIndex">Column index.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.AutofitColumn(System.Int32,System.Int32,System.Int32)">
            <summary>
            Autofits column.
            </summary>
            <param name="columnIndex">Column index.</param>
            <param name="firstRow">One-based index of the first row to be used for autofit operation.</param>
            <param name="lastRow">One-based index of the last row to be used for autofit operation.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.HasArrayFormula(System.Int64)">
            <summary>
            Indicates whether cell contains array-entered formula.
            </summary>
            <param name="cellIndex">cell index.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Clone(System.Object,System.Boolean)">
            <summary>
            Creates copy of the current object.
            </summary>
            <param name="parent">Parent object for the new object.</param>
            <returns>Copy of the current object.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.UpdateHyperlinks(Spire.Xls.Core.Spreadsheet.XlsRange,Spire.Xls.Core.Spreadsheet.XlsRange)">
            <summary>
            Updates the hyperlinks.
            </summary>
            <param name="source">The source.</param>
            <param name="dest">The dest.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.RemoveLastRow(System.Boolean,System.Int32)">
            <summary>
            Removes required number of last rows from the worksheet.
            </summary>
            <param name="bUpdateFormula">Indicates whether to update formulas after row remove.</param>
            <param name="count">Number of rows to remove.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.RemoveLastColumn(System.Boolean)">
            <summary>
            Removes last column from the worksheet.
            </summary>
            <param name="bUpdateFormula">Indicates whether update formulas after removing.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.CopyRowColumnSettings(Spire.Xls.Core.Spreadsheet.Collections.RowStorage,Spire.Xls.Core.Parser.Biff_Records.ColumnInfoRecord,System.Boolean,System.Int32,System.Int32,Spire.Xls.InsertOptionsType)">
            <summary>
            
            </summary>
            <param name="sourceRow"></param>
            <param name="sourceColumn"></param>
            <param name="bRow"></param>
            <param name="iSourceIndex"></param>
            <param name="iCurIndex"></param>
            <param name="options"></param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetLastColumn(System.Int32)">
            <summary>
            Updates last column index.
            </summary>
            <param name="columnIndex">Column index.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetFirstRow(System.Int32)">
            <summary>
            Updates first row index.
            </summary>
            <param name="rowIndex">Row index.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetLastRow(System.Int32)">
            <summary>
            Updates last row index.
            </summary>
            <param name="rowIndex">Row index.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetRangeCoordinates(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Updates coordinates for used range, by removing empty rows and columns if necessary.
            </summary>
            <param name="firstRow">First row to start looking from.</param>
            <param name="firstColumn">First column to start looking from.</param>
            <param name="lastRow">Last row to finish looking at.</param>
            <param name="lastColumn">Last column to finish looking at.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.CopyToClipboard">
            <summary>
            Copies worksheet into the clipboard.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetRowHeight(System.Int32)">
            <summary>
            Gets the height of a specified row. 
            </summary>
            <param name="row">Row index.</param>
            <returns>Height of row</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetColumnWidth(System.Int32)">
            <summary>
            Gets the width of the specified column 
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Width of column</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Clear">
            <summary>
            Clears data the worksheet.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ClearData">
            <summary>
            Clears contents of a range. 
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.CheckExistence(System.Int32,System.Int32)">
            <summary>
            Indicates whether cell has been initialized.
            </summary>
            <param name="row">Row index.</param>
            <param name="column">Column index.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ShowColumn(System.Int32)">
            <summary>
            Shows a column.
            </summary>
            <param name="columnIndex">Column index.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.HideColumn(System.Int32)">
            <summary>
            Hides a column.
            </summary>
            <param name="columnIndex">Column index.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.IsColumnVisible(System.Int32)">
            <summary>
            Indicates whether column is visible.
            </summary>
            <param name="columnIndex">Column index.</param>
            <returns>true - visible, otherwise false.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.IsRowVisible(System.Int32)">
            <summary>
            Indicates whether row is visible.
            </summary>
            <param name="rowIndex">Row index.</param>
            <returns>true - visible, otherwise false.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertRange(System.Int32,System.Int32,System.Int32,System.Int32,Spire.Xls.InsertMoveOption,Spire.Xls.InsertOptionsType)">
            <summary>
            Insert a cell range into worksheet
            </summary>
            <param name="rowIndex">the cell range first row index</param>
            <param name="columnIndex">the cell range first column index</param>
            <param name="rowCount">the number of rows</param>
            <param name="columnCount">the number of columns</param>
            <param name="options">Insert options.</param>
            <param name="insertOption">Move the cell on the right to right or Move the cell below down</param>
            <returns>return the range that insert into worksheet</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertRow(System.Int32)">
            <summary>
            Inserts a new row into the worksheet. 
            </summary>
            <param name="rowIndex">Index at which new row should be inserted</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertRow(System.Int32,System.Int32)">
            <summary>
            Inserts multiple rows into the worksheet. 
            </summary>
            <param name="rowIndex">Index at which new row should be inserted</param>
            <param name="rowCount">Number of rows to be inserted. </param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertColumn(System.Int32)">
            <summary>
            Inserts a new column into the worksheet. 
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertColumn(System.Int32,System.Int32)">
            <summary>
             Inserts specified number column into the worksheet. 
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="columnCount">Number of columns to insert.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.DeleteRange(Spire.Xls.CellRange,Spire.Xls.DeleteOption)">
            <summary>
            delete a range in worksheet
            </summary>
            <param name="range">the range to be deleted</param>
            <param name="deleteOption">Choose to move the right range to left or move the below range to above</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.DeleteRow(System.Int32)">
            <summary>
            Delete a row.
            </summary>
            <param name="index">Row index to remove</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.DeleteRow(System.Int32,System.Int32)">
            <summary>
            Removes specified row.
            </summary>
            <param name="index">One-based row index to remove</param>
            <param name="count">Number of rows to delete.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.DeleteColumn(System.Int32)">
            <summary>
            Deletes a column.
            </summary>
            <param name="columnIndex">Column index to remove..</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.DeleteColumn(System.Int32,System.Int32)">
            <summary>
            Removes specified column.
            </summary>
            <param name="index">One-based column index to remove.</param>
            <param name="count">Number of columns to remove.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetColumnWidthPixels(System.Int32)">
            <summary>
            Gets the width of the specified column, in units of pixel. 
            </summary>
            <param name="columnIndex">Column index.</param>
            <returns>Width of column</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetRowHeightPixels(System.Int32)">
            <summary>
            Gets the height of a specified row in unit of pixel. 
            </summary>
            <param name="rowIndex">Row index.</param>
            <returns>Height of row</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertArray``1(``0[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports an array of objects into a worksheet. 
            </summary>
            <param name="objects">Object array.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="isVertical">Specifies to import data vertically or horizontally.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertArray(System.Object[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports an array of objects into a worksheet.
            </summary>
            <param name="arrObject">Array to import.</param>
            <param name="firstRow">
            The row number of the first cell to import in
            </param>
            <param name="firstColumn">
            The column number of the first cell to import in.
            </param>
            <param name="isVertical">
            TRUE if array should be imported vertically; FALSE - horizontally.
            </param>
            <returns>Number of imported elements.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertArray(System.String[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports an array of strings into a worksheet. 
            </summary>
            <param name="stringArray">String array.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="isVertical">Specifies to import data vertically or horizontally.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertArray(System.Int32[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports an array of integer into a worksheet. 
            </summary>
            <param name="intArray">Integer array.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="isVertical">Specifies to import data vertically or horizontally.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertArray(System.Double[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports an array of doubles into a worksheet. 
            </summary>
            <param name="doubleArray">Double array</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="isVertical">Specifies to import data vertically or horizontally.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertArray(System.DateTime[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports an array of datetimes into worksheet.
            </summary>
            <param name="dateTimeArray">Datetime array.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="isVertical">Specifies to import data vertically or horizontally.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertArray(System.Object[0:,0:],System.Int32,System.Int32)">
            <summary>
            Imports an array of objects into a worksheet.
            </summary>
            <param name="objectArray">Object array.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertArrayList(System.Collections.ArrayList,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports an arraylist of data into a worksheet. 
            </summary>
            <param name="arrayList">Data arraylist.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="isVertical">Specifies to import data vertically or horizontally.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Imports data from a DataTable into worksheet
            </summary>
            <param name="dataTable">DataTable</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports data from a DataTable into worksheet.
            </summary>
            <param name="dataTable">DataTable</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="transTypes">Indicates if preserve types when insert data into worksheet </param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Imports data from a DataTable into worksheet.
            </summary>
            <param name="dataTable">DataTable</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="maxRows">Maximum number of rows to import</param>
            <param name="maxColumns">Maximum number of columns to import</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports data from a DataTable into worksheet.
            </summary>
            <param name="dataTable">Datatable</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="maxRows">Maximum number of rows to import</param>
            <param name="maxColumns">Maximum number of columns to import</param>
            <param name="transTypes">Indicates if preserve types when insert data into worksheet </param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Data.DataColumn[],System.Boolean)">
            <summary>
            Imports data from a DataTable into worksheet
            </summary>
            <param name="dataTable">DataTable</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="maxRows">Maximum number of rows to import</param>
            <param name="maxColumns">Maximum number of columns to import</param>
            <param name="columnsArray">Array of columns to import.</param>
            <param name="transTypes">Indicates if preserve types when insert data into worksheet.true is default</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataColumn(System.Data.DataColumn,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Imports data column.
            </summary>
            <param name="dataColumn">Data column to import.</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">Index of the first row.</param>
            <param name="firstColumn">Index of the first column</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataColumns(System.Data.DataColumn[],System.Boolean,System.Int32,System.Int32)">
            <summary>
            Imports array of data columns.
            </summary>
            <param name="dataColumns">Data columns to import.</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">Index to the first row.</param>
            <param name="firstColumn">Index to the first column.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataView(System.Data.DataView,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Imports data from a DataView into worksheet.
            </summary>
            <param name="dataView">Data view object</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataView(System.Data.DataView,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports data from a DataView into worksheet.
            </summary>
            <param name="dataView">Dataview object.</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="transTypes">Indicates if preserve types when insert data into worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataView(System.Data.DataView,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Imports data from a DataView into worksheet.
            </summary>
            <param name="dataView">Dataview object.</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="maxRows">Maximum number of rows to import.</param>
            <param name="maxColumns">Maximum number of columns to import.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.InsertDataView(System.Data.DataView,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Imports data from a DataView into worksheet.
            </summary>
            <param name="dataView">Dataview object.</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
            <param name="firstRow">The row number of the first cell to import in.</param>
            <param name="firstColumn">The column number of the first cell to import in.</param>
            <param name="maxRows">Maximum number of rows to import.</param>
            <param name="maxColumns">Maximum number of columns to import.</param>
            <param name="transTypes">Indicates if preserve types when insert data into worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.RemovePanes">
            <summary>
            Removes panes from a worksheet.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Replace(System.String,System.String)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">String value to replace.</param>
            <param name="newValue">New value for the range with specified string.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Replace(System.String,System.DateTime)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">String value to replace.</param>
            <param name="newValue">New value for the range with specified string.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Replace(System.String,System.Double)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">String value to replace.</param>
            <param name="newValue">New value for the range with specified string.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Replace(System.String,System.String[],System.Boolean)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">String value to replace.</param>
            <param name="newValues">Array of new values.</param>
            <param name="isVertical">
            Indicates whether array should be inserted vertically.
            </param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Replace(System.String,System.Int32[],System.Boolean)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">String value to replace.</param>
            <param name="newValues">Array of new values.</param>
            <param name="isVertical">
            Indicates whether array should be inserted vertically.
            </param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Replace(System.String,System.Double[],System.Boolean)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">String value to replace.</param>
            <param name="newValues">Array of new values.</param>
            <param name="isVertical">
            Indicates whether array should be inserted vertically.
            </param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Replace(System.String,System.Data.DataTable,System.Boolean)">
            <summary>
            Replaces cells' values with new data.
            </summary>
            <param name="oldValue">String value to replace.</param>
            <param name="newValues">Data table with new data.</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Replace(System.String,System.Data.DataColumn,System.Boolean)">
            <summary>
             Replaces cells' values with new data.
            </summary>
            <param name="oldValue">String value to replace.</param>
            <param name="column">Data table with new data.</param>
            <param name="columnHeaders">Indicates whether to import field names.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Remove">
            <summary>
            Removes worksheet from parernt worksheets collection.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.MoveWorksheet(System.Int32)">
            <summary>
            Moves worksheet into new position.
            </summary>
            <param name="destIndex">Destination index.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetColumnWidth(System.Int32,System.Double)">
            <summary>
            Set solumn width
            </summary>
            <param name="columnIndex">Column index.</param>
            <param name="width">Width to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetColumnWidthInPixels(System.Int32,System.Int32)">
            <summary>
            Sets column width in pixels.
            </summary>
            <param name="iColumn">One-based column index.</param>
            <param name="value">Width in pixels to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetRowHeightInPixels(System.Int32,System.Double)">
            <summary>
            Sets row height in pixels.
            </summary>
            <param name="rowIndex">One-based row index to set height.</param>
            <param name="value">Value in pixels to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetColumnWidthInPixels(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the width of the specified columns. 
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="count">count</param>
            <param name="value">Value</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetRowHeight(System.Int32,System.Double)">
            <summary>
            Sets the height of the specified row. 
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetRowHeightPixels(System.Int32,System.Double)">
            <summary>
            Sets the height of the specified row. 
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetRowHeightInPixels(System.Int32,System.Int32,System.Double)">
            <summary>
            Set Row height from Start Row index
            </summary>
            <param name="rowIndex">Row index</param>
            <param name="Count">count</param>
            <param name="value">Value</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToFile(System.String,System.String)">
            <summary>
            Save worksheet to file.
            </summary>
            <param name="fileName">File name.</param>
            <param name="separator">Seperator.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            Save worksheet to file..
            </summary>
            <param name="fileName">File name.</param>
            <param name="separator">Seperator.</param>
            <param name="encoding">Encoding to use.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToStream(System.IO.Stream,System.String)">
            <summary>
            Save worksheet to stream.
            </summary>
            <param name="stream">Stream object.</param>
            <param name="separator">Seperator.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToStream(System.IO.Stream,System.String,System.Text.Encoding)">
            <summary>
            Save worksheet to stream.
            </summary>
            <param name="stream">Stream to save.</param>
            <param name="separator">Current seperator.</param>
            <param name="encoding">Encoding to use.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToHtml(System.String)">
            <summary>
            Save to HTML file.
            </summary>
            <param name="filename">File name</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToHtml(System.IO.Stream)">
            <summary>
            Save to HTML stream.
            </summary>
            <param name="stream">Stream object</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToPdf(System.String)">
            <summary>
            Save worksheet to pdf.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToPdfStream(System.IO.Stream)">
            <summary>
            Save worksheet to pdf Stream.
            </summary>
            <param name="stream">Stream.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToImage(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Save worksheet to image.
            </summary>
            <param name="fileName">file Name</param>
            <param name="firstRow"></param>
            <param name="firstColumn"></param>
            <param name="lastRow"></param>
            <param name="lastColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToImage(System.String)">
            <summary>
            Save worksheet to image.
            </summary>
            <param name="fileName">file Name</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SaveToImage(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            
            </summary>
            <param name="fileName">file name</param>
            <param name="format">file format</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ToImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="firstRow">One-based index of the first row to convert.</param>
            <param name="firstColumn">One-based index of the first column to convert.</param>
            <param name="lastRow">One-based index of the last row to convert.</param>
            <param name="lastColumn">One-based index of the last column to convert.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ToEMFStream(System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="stream">stream.</param>
            <param name="firstRow">One-based index of the first row to convert.</param>
            <param name="firstColumn">One-based index of the first column to convert.</param>
            <param name="lastRow">One-based index of the last row to convert.</param>
            <param name="lastColumn">One-based index of the last column to convert.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.ToSVGStream(System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert CellRange to Svg stream
            </summary>
            <param name="stream">stream.</param>
            <param name="firstRow">One-based index of the first row to convert.</param>
            <param name="firstColumn">One-based index of the first column to convert.</param>
            <param name="lastRow">One-based index of the last row to convert.</param>
            <param name="lastColumn">One-based index of the last column to convert.</param>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.TopLeftCell">
            <summary>
            Gets top left cell of the worksheet.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheet.TopLeftCellOfSheet">
            <summary>
            TopLeftCell of this worksheet,different of TopLeftCell property
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.Serialize(Spire.Xls.Core.Parser.Biff_Records.RecordArrayList,System.Boolean)">
            <summary>
            Saves worksheet into specified OffsetArrayList.
            </summary>
            <param name="records">
            OffsetArrayList that will receive all of the worksheet's records.
            </param>
            <param name="bClipboard">Indicates whether we need to serialize all records to be able to copy them into clipboard.</param>
            <exception cref="T:System.ArgumentNullException">
            When records is null
            </exception>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetCellValue(System.Int32,System.Int32,System.String)">
            <summary>
            Sets value in the specified cell.
            </summary>
            <param name="rowIndex">Row index</param>
            <param name="columnIndex">Column index.</param>
            <param name="stringValue">Value to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetCellValue(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets value in the specified cell.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="columnIndex">Column index.</param>
            <param name="boolValue">Value to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetNumber(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets value in the specified cell.
            </summary>
            <param name="iRow">One-based row index  of the cell to set value.</param>
            <param name="iColumn">One-based column index of the cell to set value.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetBoolean(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets value in the specified cell.
            </summary>
            <param name="iRow">One-based row index  of the cell to set value.</param>
            <param name="iColumn">One-based column index of the cell to set value.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetText(System.Int32,System.Int32,System.String)">
            <summary>
            Sets text in the specified cell.
            </summary>
            <param name="iRow">One-based row index  of the cell to set value.</param>
            <param name="iColumn">One-based column index of the cell to set value.</param>
            <param name="value">Text to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetFormula(System.Int32,System.Int32,System.String)">
            <summary>
            Sets formula in the specified cell.
            </summary>
            <param name="iRow">One-based row index  of the cell to set value.</param>
            <param name="iColumn">One-based column index of the cell to set value.</param>
            <param name="value">Formula to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetFormula(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Sets formula in the specified cell.
            </summary>
            <param name="iRow">One-based row index  of the cell to set value.</param>
            <param name="iColumn">One-based column index of the cell to set value.</param>
            <param name="value">Formula to set.</param>
            <param name="bIsR1C1">Indicates is formula in R1C1 notation.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetError(System.Int32,System.Int32,System.String)">
            <summary>
            Sets error in the specified cell.
            </summary>
            <param name="iRow">One-based row index  of the cell to set value.</param>
            <param name="iColumn">One-based column index of the cell to set value.</param>
            <param name="value">Error to set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetBlank(System.Int32,System.Int32)">
            <summary>
            Sets blank in specified cell.
            </summary>
            <param name="iRow">One-based row index  of the cell to set value.</param>
            <param name="iColumn">One-based column index of the cell to set value.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetFormulaNumberValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets formula number value.
            </summary>
            <param name="iRow">One based row index.</param>
            <param name="iColumn">One based column index.</param>
            <param name="value">Represents formula number value for set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetFormulaErrorValue(System.Int32,System.Int32,System.String)">
            <summary>
            Sets formula error value.
            </summary>
            <param name="iRow">One based row index.</param>
            <param name="iColumn">One based column index.</param>
            <param name="value">Represents formula error value for set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetFormulaBoolValue(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets formula bool value.
            </summary>
            <param name="iRow">One based row index.</param>
            <param name="iColumn">One based column index.</param>
            <param name="value">Represents formula bool value for set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetFormulaStringValue(System.Int32,System.Int32,System.String)">
            <summary>
            Sets formula string value.
            </summary>
            <param name="iRow">One based row index.</param>
            <param name="iColumn">One based column index.</param>
            <param name="value">Represents formula string value for set.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.SetError(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="iRow"></param>
            <param name="iColumn"></param>
            <param name="value"></param>
            <param name="isSetText"></param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GroupByColumns(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Groups columns. 
            </summary>
            <param name="firstColumn">The first column index to be grouped.</param>
            <param name="lastColumn">The last column index to be grouped.</param>
            <param name="isCollapsed">Indicates whether group should be collapsed.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GroupByRows(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Groups rows. 
            </summary>
            <param name="firstRow">The first row index to be grouped.</param>
            <param name="lastRow">The last row index to be grouped.</param>
            <param name="isCollapsed">Indicates whether group should be collapsed.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.UngroupByColumns(System.Int32,System.Int32)">
            <summary>
            Ungroups columns. 
            </summary>
            <param name="firstColumn">The first column index to be grouped.</param>
            <param name="lastColumn">The last column index to be grouped.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.UngroupByRows(System.Int32,System.Int32)">
            <summary>
            Ungroups rows. 
            </summary>
            <param name="firstRow">The first row index to be grouped.</param>
            <param name="lastRow">The last row index to be grouped.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetStringValue(System.Int64)">
            <summary>
            Returns string value corresponding to the cell.
            </summary>
            <param name="iCellIndex">Cell index to get value from.</param>
            <returns>String contained by the cell.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetText(System.Int32,System.Int32)">
            <summary>
            Returns string value corresponding to the cell.
            </summary>
            <param name="row">One-based row index of the cell to get value from.</param>
            <param name="column">One-based column index of the cell to get value from.</param>
            <returns>String contained by the cell.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetFormulaStringValue(System.Int32,System.Int32)">
            <summary>
            Returns formula string value corresponding to the cell.
            </summary>
            <param name="row">One-based row index of the cell to get value from.</param>
            <param name="column">One-based column index of the cell to get value from.</param>
            <returns>String contained by the cell.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetNumber(System.Int32,System.Int32)">
            <summary>
            Returns number value corresponding to the cell.
            </summary>
            <param name="row">One-based row index of the cell to get value from.</param>
            <param name="column">One-based column index of the cell to get value from.</param>
            <returns>Number contained by the cell.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetFormulaNumberValue(System.Int32,System.Int32)">
            <summary>
            Returns formula number value corresponding to the cell.
            </summary>
            <param name="row">One-based row index of the cell to get value from.</param>
            <param name="column">One-based column index of the cell to get value from.</param>
            <returns>Number contained by the cell.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetError(System.Int32,System.Int32)">
            <summary>
            Gets error value from cell.
            </summary>
            <param name="row">Row index.</param>
            <param name="column">Column index.</param>
            <returns>Returns error value or null.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetFormulaErrorValue(System.Int32,System.Int32)">
            <summary>
            Gets formula error value from cell.
            </summary>
            <param name="row">Row index.</param>
            <param name="column">Column index.</param>
            <returns>Returns error value or null.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetBoolean(System.Int32,System.Int32)">
            <summary>
            Gets bool value from cell.
            </summary>
            <param name="row">Represents row index.</param>
            <param name="column">Represents column index.</param>
            <returns>Returns found bool value. If cannot found returns false.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetFormulaBoolValue(System.Int32,System.Int32)">
            <summary>
            Gets formula bool value from cell.
            </summary>
            <param name="row">Represents row index.</param>
            <param name="column">Represents column index.</param>
            <returns>Returns found bool value. If cannot found returns false.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.HasArrayFormulaRecord(System.Int32,System.Int32)">
            <summary>
            Indicates is has array formula.
            </summary>
            <param name="row">Represents row index.</param>
            <param name="column">Represents column index.</param>
            <returns>Indicates is contain array formula record.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.HasArrayFormula(Spire.Xls.Core.Parser.Biff_Records.Formula.Ptg[])">
            <summary>
            Indicates whether tokens array contains array formula reference.
            </summary>
            <param name="arrTokens">Tokens to check.</param>
            <returns>True if it refers to </returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.GetCellType(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets cell type from current column.
            </summary>
            <param name="row">Indicates row.</param>
            <param name="column">Indicates column.</param>
            <param name="bNeedFormulaSubType">Indicates is need to indified formula sub type.</param>
            <returns>Returns cell type.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheet.IsExternalFormula(System.Int32,System.Int32)">
            <summary>
            Indicates is formula in cell is formula to external workbook.
            </summary>
            <param name="row">Represents row index.</param>
            <param name="column">Represents column index.</param>
            <returns>If contain extern formula returns true; otherwise false.</returns>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.ProtectedRange">
            <summary>
            Represents allow edit range
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.ProtectedRange.name">
            <summary>
            Represents protected range name.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.ProtectedRange.range">
            <summary>
            Represents protected range range.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.ProtectedRange.password">
            <summary>
            Represents protected range password.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.ProtectedRange.Name">
            <summary>
            Represents protected range name.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.ProtectedRange.Range">
            <summary>
            Represents protected range range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.ProtectedRange.Password">
            <summary>
            Represents protected range password.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.m_view">
            <summary>
            Worksheet view
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Name">
            <summary>
            Returns or sets the name of the object. Read / write String.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.IsSaved">
            <summary>
            Indicates whether worksheet was saved.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.HeaderFooterShapes">
            <summary>
            Header / footer shapes collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.CodeName">
            <summary>
            Name used by macros to access workbook items.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.ProtectContents">
            <summary>
            Indicates is current sheet is protected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.ProtectDrawingObjects">
            <summary>
            True if objects are protected. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.ProtectScenarios">
            <summary>
            True if the scenarios of the current sheet are protected. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.IsParsed">
            <summary>
            Indicates whether object was parsed.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.IsParsing">
            <summary>
            Indicates whether object is currently being parsed.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.IsSkipParsing">
            <summary>
            Indicates whether worksheet was opened in skip parsing mode. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.IsSupported">
            <summary>
            Indicates whether worksheet type is supported. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.FirstRow">
            <summary>
            Gets / sets index of the first row of the worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.FirstColumn">
            <summary>
            Gets or sets index of the first column of the worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.LastRow">
            <summary>
            Gets or sets one-based index of the last row of the worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.LastColumn">
            <summary>
            Gets or sets index of the last column of the worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Zoom">
            <summary>
            Zoom factor of document.
            </summary>
            <remarks> Value of zoom should be between 10 and 400.</remarks>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.TabKnownColor">
            <summary>
            Tab excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.TabColor">
            <summary>
            Tab color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.GridLineColor">
            <summary>
            Grid line color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.DefaultGridlineColor">
            <summary>
            Indicates whether gridline color has default value.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.IsRightToLeft">
            <summary>
            Indicates whether worksheet is displayed right to left.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.IsSelected">
            <summary>
            Indicates whether tab of this sheet is selected. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Index">
            <summary>
            Returns the index number of the object within the collection of objects.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Visibility">
            <summary>
            Controls end user visibility of worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.DataHolder">
            <summary>
            Gets / sets worksheet data holder.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.TopVisibleRow">
            <summary>
            Gets/sets top visible row of the worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.LeftVisibleColumn">
            <summary>
            Gets/sets left visible column of the worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Password">
            <summary>
            Describes password entered by user to protect worksheet's data.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.UnknownVmlShapes">
            <summary>
            Indicates whether worksheet contains some unknown vml shapes.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.TypedTextBoxes">
            <summary>
            Returns inner textboxes collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.TypedLines">
            <summary>
            Returns inner lines collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.InnerTextBoxes">
            <summary>
            Returns inner textboxes collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.TextBoxes">
            <summary>
            Returns inner textboxes collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.HasVmlShapes">
            <summary>
            Indicates whether worksheet has vml shapes. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.SheetId">
            <summary>
            Returns SheetId for this sheet. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Activate">
            <summary>
            Makes the current sheet the active sheet. Equivalent to clicking the
            sheet's tab in MS Excel.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Protect(System.String)">
            <summary>
            Protects worksheet with password.protect the sheet except select lock/unlock cells.
            </summary>
            <param name="password">Protection password.</param>
            <remarks>Password should be less than 15 symbols.</remarks>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Protect(System.String,Spire.Xls.SheetProtectionType)">
            <summary>
            Protects worksheet with password.
            </summary>
            <param name="password">Protection password.</param>
            <remarks>Password should be less than 15 symbols.</remarks>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Unprotect">
            <summary>
            Unprotects this wokrsheet.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.Unprotect(System.String)">
            <summary>
            Unprotects this worksheet using specified password.
            </summary>
            <param name="password">Password to unprotect.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsWorksheetBase.UpdateExtendedFormatIndex(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            This method should be called immedeately after extended format removal.
            </summary>
            <param name="dictFormats">Dictionary with updated exteneded formats.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser.ParseProtectedRanges(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.XlsWorksheet)">
            <summary>
            ParseProtectedRanges
            </summary>
            <param name="reader">reader</param>
            <param name="sheet">sheet</param>
        </member>
        <!-- 对于成员“M:Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser.ConvertColorByTint(System.Drawing.Color,System.Double)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser.ParseCFRuleTag(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.Collections.XlsConditionalFormats,System.Collections.Generic.List{Spire.Xls.Core.Spreadsheet.XmlReaders.DxfImpl},System.Boolean,System.Boolean)">
            <summary>
            Parses conditional formatting rule tag.
            </summary>
            <param name="reader">XmlReader to extract data from.</param>
            <param name="conditionalFormats">Condition to extract data into.</param>
            <param name="lstDxfs">Dxf styles collection.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser.ParseExternalDefinedNames(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.XlsExternWorkbook)">
            <summary>
            Extracts external names from the reader.
            </summary>
            <param name="reader">XmlReader to get data from.</param>
            <param name="externBook">External workbooks to put defined names into.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser.ParseExternalName(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.XlsExternWorkbook)">
            <summary>
            Extracts single external name from the reader.
            </summary>
            <param name="reader">XmlReader to get external name data from.</param>
            <param name="externBook">External workbook to put extracted name into.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser.ParseSheetDataSet(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.XlsExternWorkbook)">
            <summary>
            Extracts cached external data.
            </summary>
            <param name="reader">XmlReader to get data from.</param>
            <param name="externBook">External workbook to put cache into.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser.ParseExternalSheetData(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.XlsExternWorkbook)">
            <summary>
            Extracts single external worksheet cached data from XmlReader.
            </summary>
            <param name="reader">XmlReader to get cached data from.</param>
            <param name="externBook">External workbook to place extracted data into.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser.CreateExternBook(Spire.Xls.Core.Spreadsheet.XmlSerialization.RelationsCollection,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Creates external workbook.
            </summary>
            <param name="relations">Relations collection that helps to locate external workbook.</param>
            <param name="strUrlId">Relation id of the target workbook.</param>
            <param name="arrSheetNames">Name of the workbook's worksheets.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.MSXmlReader.ReadWorksheetPageBreaks(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.XlsWorksheet)">
            <summary>
            Read all page breaks
            </summary>
            <param name="reader"></param>
            <param name="sheet"></param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.MSXmlReader.SetFormula(Spire.Xls.Core.Spreadsheet.XlsWorksheet,System.Int32,System.Int32,System.String,System.String,Spire.Xls.Core.Spreadsheet.XmlSerialization.XmlSerializationCellType,System.Int32)">
            <summary>
            Sets formula to the specified cell.
            </summary>
            <param name="sheet">Parent worksheet.</param>
            <param name="row">One-based row index.</param>
            <param name="column">One-based column index.</param>
            <param name="strFormula">String represetation of the formula.</param>
            <param name="cellValue">String representation of the formula value.</param>
            <param name="cellType">Type of the formula value.</param>
        </member>
        <!-- 对于成员“M:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.CommentShapeParser.RegisterShape(Spire.Xls.Core.Spreadsheet.Shapes.TextBoxShapeBase)”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.TextBoxShapeParser">
            <summary>
            This class is used to parse text box shape.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.TextBoxShapeParser.ParseTextBox(Spire.Xls.Core.ITextBox,System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.XmlSerialization.RelationsCollection,System.String,System.Collections.Generic.List{System.String},Spire.Xls.Core.Spreadsheet.XmlSerialization.FileDataHolder,Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser)">
            <summary>
            Extracts text box settings from XmlReader.
            </summary>
            <param name="textBox">TextBox to XlsFill with settings.</param>
            <param name="reader">XmlReader to get data from.</param>
            <param name="parser">Parser used to help in parsing process.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.TextBoxShapeParser.ParseRichText(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser,Spire.Xls.Core.ITextBox)">
            <summary>
            Parses rich text.
            </summary>
            <param name="reader">XmlReader to read rich text from.</param>
            <param name="textArea">Text area that will get extracted rich text.</param>
            <param name="parser">Parser object that helps to extract data.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.TextBoxShapeParser.ParseBodyProperties(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.RichTextString,Spire.Xls.Core.ITextBox)">
            <summary>
            Parses text area body properties.
            </summary>
            <param name="reader">XmlReader to read body properties from.</param>
            <param name="textArea">Text area to put body properties into.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.TextBoxShapeParser.ParseListStyles(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.RichTextString)">
            <summary>
            Extracts list styles for a text area.
            </summary>
            <param name="reader">XmlReader to extract list styles from.</param>
            <param name="textArea">Text area that will get extracted settings.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.TextBoxShapeParser.ParseParagraphs(System.Xml.XmlReader,Spire.Xls.Core.ITextBox,Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser)">
            <summary>
            Parses paragraph.
            </summary>
            <param name="reader">XmlReader to get paragraph tag from.</param>
            <param name="textArea">Text area that will get paragraph information (formatting and text).</param>
            <param name="parser">Parser object that helps to extract data.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.TextBoxShapeParser.ParseParagraphRun(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.RichTextString,Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser,Spire.Xls.Core.ITextBox)">
            <summary>
            Parses paragraph run.
            </summary>
            <param name="reader">XmlReader to get paragraph run from.</param>
            <param name="textArea">Text area to put extracted properties into.</param>
            <param name="parser">Parser object that helps to extract data.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.TextBoxShapeParser.ParseParagraphRunProperites(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.RichTextString,Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser,Spire.Xls.Core.ITextBox)">
            <summary>
            Parses paragraph run.
            </summary>
            <param name="reader">XmlReader to extract paragraph tag from.</param>
            <param name="textArea">Text area that will get paragraph run information (formatting and text).</param>
            <param name="parser">Parser object that helps to extract data.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlReaders.Shapes.TextBoxShapeParser.ParseLineProperties(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.Shapes.XlsShapeLineFormat,System.Boolean,Spire.Xls.Core.Spreadsheet.XmlReaders.Excel2007Parser)">
            <summary>
            Serialize line properties.
            </summary>
            <param name="reader">XmlReader to serialize into.</param>
            <param name="border">Chart line properties to serialize.</param>
            <param name="bRoundCorners">Indicates whether border is rounded or not</param>
            <param name="parser">Excel2007Parser to help in extraction process.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Charts.ChartAxisParser.DateAxisTagParsing(System.Xml.XmlReader,Spire.Xls.Core.Spreadsheet.Charts.XlsChartAxis,Spire.Xls.Core.Spreadsheet.XmlSerialization.RelationsCollection)">
            <summary>
            Parses additional tags of date axis.
            </summary>
            <param name="reader">XmlReader to get data from.</param>
            <param name="axis">Axis to put data into.</param>
            <param name="relations">Chart relations.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Charts.ChartParser.ReadXmlValue(System.Xml.XmlReader)">
            <summary>
            Extracts number or string value from the reader.
            </summary>
            <param name="reader">XmlReader to get value from.</param>
            <returns>Extracted object.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Charts.ChartSerializator.SerializeSeriesValues(System.Xml.XmlWriter,Spire.Xls.Core.IXLSRange,System.Object[],System.String,Spire.Xls.Core.Spreadsheet.Charts.XlsChartSerie)">
            <summary>
            Serializes series values.
            </summary>
            <param name="writer">XmlWriter to serialize into.</param>
            <param name="range">Range to serialize values for.</param>
            <param name="tagName">Name of the xml tag to use.</param>
        </member>
        <!-- 对于成员“M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Charts.ChartSerializatorCommon.SerializeMaterial(System.Xml.XmlWriter,System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Charts.ChartSerializatorCommon.SerializeDefaultTextFormatting(System.Xml.XmlWriter,Spire.Xls.Core.IChartTextArea,Spire.Xls.Core.IWorkbook,System.Double)">
            <param name="textFormatting">Text formatting to serialize.</param>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Comm.PivotTableDef.SubtotalTop">
            <summary>
            indicated whether show all subtotals at top of group. 
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Comm.Protection.ChartDefaultValues">
            <summary>
            List of default values for protection options (order corresponds to ProtectionFlags and ProtectionAttributes).
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Comm.Protection.ProtectionAttributes">
            <summary>
            List of protection attribute names in the resulting file.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.ContentTypes.PivotTable">
            <summary>
            Content type for pivot table.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.ContentTypes.PivotCacheDefinition">
            <summary>
            Content type for pivot cache definition.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.ContentTypes.PivotCacheRecords">
            <summary>
            Content type for pivot cache records.
            </summary>
        </member>
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Drawings.CompoundLineTypeAttribute”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Drawings.AnchorAttribute”忽略有格式错误的 XML 注释 -->
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Drawings.TextBoxRotationAttribute">
            <summary>
            Determines if the text within the given text body should be displayed vertically.
            If this attribute is omitted, then a value of horz, or no vertical text is implied.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Drawings.LockTextAttribute">
            <summary>
            This attribute indicates whether to allow text editing within this drawing
            object when the parent worksheet is protected.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Drawings.SoftEdge">
            <summary>
            This attribute indicates the value soft edge of the chart shadow
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Drawings.Radio">
            <summary>
            value of soft edge
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Drawings.HorizontalAlignment">
            <summary>
            Specifies the alignment that is to be applied to the paragraph. Possible
            values for this include left, right, centered, justified and distributed.
            If this attribute is omitted, then a value of left is implied.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.RelationTypes.MissingPath">
            <summary>
            Content type  for path to extern link source that is missing.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.DLSXmlSerializator.DEF_TEXT_RANGE_ATTRIBUTE">
            <summary>
            Text tag in dls format.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.DLSXmlSerializator.DEF_TABLE_FORMAT_START">
            <summary>
            Table format tag in dls.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.DLSXmlSerializator.DEF_CHARACTER_FORMAT_START">
            <summary>
            Start of the character formatting tag.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.DLSXmlSerializator.DEF_PAGE_SETTINGS_START">
            <summary>
            Tag name for page settings block.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.DLSXmlSerializator.DEF_VALIGNMENT_ATTRIBUTE">
            <summary>
            Vertical alignment attribute.
            </summary>
        </member>
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.AlwaysCalculateArray”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.NamedStyleXFsTagName”忽略有格式错误的 XML 注释 -->
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.TableStyleTagName">
            <summary>
            Name of a single table style definition.
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.TableStyleElementTagName">
            <summary>
            Name of the xml tag that specifies formatting for one area of a table or PivotTable
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.DefaultTableStyleAttributeName">
            <summary>
            Name of default table style to apply to new Tables attribute
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.DefaultPivotStyleAttributeName">
            <summary>
            Name of the default table style to apply to new PivotTables attribute
            </summary>
        </member>
        <!-- 对于成员“F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.WorkbookViewIdAttribute”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.SerializeProtectedRanges(System.Xml.XmlWriter,Spire.Xls.Core.Spreadsheet.XlsWorksheet)">
            <summary>
            Serializes ProtectedRanges 
            </summary>
            <param name="writer">writer</param>
            <param name="sheet">sheet</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.SerializeOleObjectLink(System.Xml.XmlWriter,Spire.Xls.Core.Spreadsheet.XlsExternWorkbook)">
            <summary>
            Serializes external workbook into specified XmlWriter.
            </summary>
            <param name="writer">XmlWriter to serialize into.</param>
            <param name="book">External workbook to serialize.</param>
            <returns>Collection with external link item relations.</returns>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Excel2007Serializator.SerializeOleObjects(System.Xml.XmlWriter,Spire.Xls.Core.Spreadsheet.XlsWorksheet)">
            20141106
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Shapes.Drawings.StyleTag">
            <summary>
            The element specifies the style that will be applied to a shape and the corresponding references for each of the
            style components such as lines and fills.  
            Office Open XML Part 4 - Markup Language Reference.pdf [5.6.2.30 style (Shape Style)]
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Shapes.Drawings.LineReferenceTag">
            <summary>
            Defines a reference to a line style within the style matrix.
            Office Open XML Part 4 - Markup Language Reference.pdf [5.1.4.2.19 lnRef (Line Reference)]
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Shapes.Drawings.FillReferenceTag">
            <summary>
            Defines a reference to a fill style within the style matrix
            Office Open XML Part 4 - Markup Language Reference.pdf [5.1.4.2.10 fillRef (Fill Reference)]
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Shapes.Drawings.EffectReferenceTag">
            <summary>
            Defines a reference to an effect style within the style matrix
            Office Open XML Part 4 - Markup Language Reference.pdf [5.1.4.2.8 1 effectRef (Effect Reference)]
            </summary>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.XmlSerialization.Shapes.Drawings.FontReferenceTag">
            <summary>
            Represents a reference to a themed font.
            Office Open XML Part 4 - Markup Language Reference.pdf [5.1.4.1.17 fontRef (Font Reference)]
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Shapes.DrawingShapeSerializator.SerializeShadowStyle(System.Xml.XmlWriter,Spire.Xls.Core.Spreadsheet.Shapes.XlsPrstGeomShape)">
            <summary>
            writer Shadow of xlsPrstGeomShape
            </summary>
            <param name="writer"></param>
            <param name="textBox"></param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XmlSerialization.Shapes.ShapeSerializator.SerializeFill(System.Xml.XmlWriter,Spire.Xls.Core.Spreadsheet.Shapes.XlsShape,Spire.Xls.Core.Spreadsheet.XmlSerialization.WorksheetDataHolder,Spire.Xls.Core.Spreadsheet.XmlSerialization.RelationsCollection)">
            <summary>
            Serialize the fill style of textbox
            </summary>
            <param name="writer">XmlWriter to serialize into.</param>
            <param name="shape">Shape to serialize style for</param>
            <param name="holder">Parent worksheet data holder.</param>
            <param name="vmlRelations">Resource relation collection</param>
        </member>
        <member name="F:Spire.Xls.Core.Spreadsheet.ExcelConstants.DoubleSize">
            <summary>
            Size of the Double value in bytes.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsObject.Parent">
            <summary>
            Reference to Parent object. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsObject.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsObject.OnDispose">
            <summary>
            Method which can be overriden by users to take any specific actions when
            object is disposed.
            </summary>
        </member>
        <member name="T:Spire.Xls.Core.Spreadsheet.XlsEventArgs">
            <summary>
            Class used as message sender on Property value change. Class provides old and
            new values which allow user to create advanced logic.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsEventArgs.newValue">
            <summary>
            New property value.Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsEventArgs.oldValue">
            <summary>
            Old property value. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsEventArgs.Name">
            <summary>
            Name of the property. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Core.Spreadsheet.XlsEventArgs.Next">
            <summary>
            If more than one property must be changed on one send message, 
            attach it to the ValueChangeEventArgs to create a one way directed list of property changes.
            </summary>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsEventArgs.#ctor(System.Object,System.Object,System.String)">
            <summary>
            Main constructor.
            </summary>
            <param name="old">Old property value.</param>
            <param name="newValue">New property value.</param>
            <param name="objectName">Unique Identifier of object whose value changed.</param>
        </member>
        <member name="M:Spire.Xls.Core.Spreadsheet.XlsEventArgs.#ctor(System.Object,System.Object,System.String,Spire.Xls.Core.Spreadsheet.XlsEventArgs)">
            <summary>
            Main constructor.
            </summary>
            <param name="old">Old property value.</param>
            <param name="newValue">New property value.</param>
            <param name="objectName">Unique Identifier of object whose value changed.</param>
            <param name="next">Next property which must be changed.</param>
        </member>
        <member name="T:Spire.Xls.ConverterSetting">
            <summary>
            Convert Setting
            </summary>
        </member>
        <member name="P:Spire.Xls.ConverterSetting.PrintPageEventHandler">
            <summary>
            Print each page using this EventHandler
            </summary>  
        </member>
        <member name="P:Spire.Xls.ConverterSetting.XDpi">
            <summary>
            Gets or sets the horizontal resolution, in dots per inch (DPI). Default value is 96.
            </summary>
        </member>
        <member name="P:Spire.Xls.ConverterSetting.YDpi">
            <summary>
            Gets or sets the vertical resolution, in dots per inch (DPI). Default value is 96.
            </summary>
        </member>
        <member name="P:Spire.Xls.ConverterSetting.JPEGQuality">
            <summary>
            Gets or sets a value determining the quality.
            </summary>
        </member>
        <member name="P:Spire.Xls.ConverterSetting.SheetFitToPage">
            <summary>
            One sheet context render to only one page. 
            </summary>
        </member>
        <member name="P:Spire.Xls.ConverterSetting.ChartImageType">
            
             <summary>
             Indicate the chart render image type.
             </summary>
        </member>
        <member name="P:Spire.Xls.ConverterSetting.IsRegionClip">
            <summary>
            Enables or disables clipping the image to the region
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelSheetType">
            <summary>
            Sheet types.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelSheetType.ChartSheet">
            <summary>
            Charts.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelSheetType.DialogSheet">
             <summary>
            Dialogs.
             </summary>
        </member>
        <member name="F:Spire.Xls.ExcelSheetType.Excel4IntlMacroSheet">
             <summary>
            Excel 4.0 International Marcos sheet.
             </summary>
        </member>
        <member name="F:Spire.Xls.ExcelSheetType.Excel4MacroSheet">
             <summary>
            Excel 4.0 Marcos sheet.
             </summary>
        </member>
        <member name="F:Spire.Xls.ExcelSheetType.NormalWorksheet">
             <summary>
            Worksheets.
             </summary>
        </member>
        <member name="T:Spire.Xls.LineStyleType">
            <summary>
            Border line styles.
            </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.None">
            <summary>
            Represents no border line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.Thin">
            <summary>
            Represents the thin border line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.Medium">
            <summary>
            Represents the medium border line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.Dashed">
             <summary>
            Represents the dashed border line style.
             </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.Dotted">
            <summary>
            Represents the dotted border line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.Thick">
            <summary>
            Represents the thick border line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.Double">
            <summary>
            Represents the double border line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.Hair">
            <summary>
            Represents the hair border line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.MediumDashed">
             <summary>
            Represents the medium_dashed medium_dashed line style.
             </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.DashDot">
             <summary>
            Represents the DashDot border line style.
             </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.MediumDashDot">
             <summary>
            Represents the MediumDashDot border line style.
             </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.DashDotDot">
             <summary>
            Represents the DashDotDot border line style.
             </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.MediumDashDotDot">
             <summary>
            Represents the MediumDashDotDot border line style.
             </summary>
        </member>
        <member name="F:Spire.Xls.LineStyleType.SlantedDashDot">
             <summary>
            Represents the SlantedDashDot border line style.
             </summary>
        </member>
        <member name="T:Spire.Xls.BordersLineType">
             <summary>
            Specifies border and diagonal line types in Excel.
             </summary>
        </member>
        <member name="F:Spire.Xls.BordersLineType.DiagonalDown">
             <summary>
            Border running from the upper left-hand corner to the lower right of each cell in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.BordersLineType.DiagonalUp">
             <summary>
            Border running from the lower left-hand corner to the upper right of each cell in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.BordersLineType.EdgeBottom">
             <summary>
            Border at the bottom of the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.BordersLineType.EdgeLeft">
             <summary>
            Border at the left-hand edge of the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.BordersLineType.EdgeRight">
             <summary>
            Border at the right-hand edge of the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.BordersLineType.EdgeTop">
             <summary>
            Border at the top of the range.
             </summary>
        </member>
        <member name="T:Spire.Xls.FormulaLabelType">
            <summary>
            Label types for formula.
            </summary>
        </member>
        <member name="F:Spire.Xls.FormulaLabelType.ColumnLabels">
             <summary>
            Represents Column label for formula.
             </summary>
        </member>
        <member name="F:Spire.Xls.FormulaLabelType.MixedLabels">
             <summary>
            Represents Mixed label for formula.
             </summary>
        </member>
        <member name="F:Spire.Xls.FormulaLabelType.NoLabels">
             <summary>
            Represents no label for formula.
             </summary>
        </member>
        <member name="F:Spire.Xls.FormulaLabelType.RowLabels">
             <summary>
            Represents row label for formula.
             </summary>
        </member>
        <member name="T:Spire.Xls.BorderWeightType">
             <summary>
            Specifies the weight of the border around a range.
             </summary>
        </member>
        <member name="F:Spire.Xls.BorderWeightType.Hairline">
             <summary>
            Hairline (thinnest border).
             </summary>
        </member>
        <member name="F:Spire.Xls.BorderWeightType.Medium">
             <summary>
            Medium.
             </summary>
        </member>
        <member name="F:Spire.Xls.BorderWeightType.Thick">
             <summary>
            Thick (widest border).
             </summary>
        </member>
        <member name="F:Spire.Xls.BorderWeightType.Thin">
             <summary>
            Thin.
             </summary>
        </member>
        <member name="F:Spire.Xls.BorderWeightType.None">
             <summary>
            None border type.
             </summary>
        </member>
        <member name="T:Spire.Xls.ExcelCalculationMode">
            <summary>
            Enum that defines different types of the formula calculations.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCalculationMode.Manual">
            <summary>
            Represents the MANUAL calculation type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCalculationMode.Auto">
            <summary>
            Represents the AUTOMATIC calculation type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCalculationMode.AutoNoTable">
            <summary>
            Represents the AUTOMATIC EXCEPT TABLES calculation type.
            </summary>
        </member>
        <member name="T:Spire.Xls.HorizontalAlignType">
            <summary>
            Horizontal alignment type.
            </summary>
        </member>
        <member name="F:Spire.Xls.HorizontalAlignType.General">
             <summary>
            Represents the general horizontal alignment setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.HorizontalAlignType.Left">
             <summary>
            Represents left horizontal alignment setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.HorizontalAlignType.Center">
             <summary>
            Represents center horizontal alignment setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.HorizontalAlignType.Right">
             <summary>
            Represents center horizontal alignment setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.HorizontalAlignType.Fill">
             <summary>
            Represents XlsFill horizontal alignment setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.HorizontalAlignType.Justify">
             <summary>
            Represents justify  horizontal alignment setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.HorizontalAlignType.CenterAcrossSelection">
             <summary>
            Represents center across selection horizontal alignment setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.HorizontalAlignType.Distributed">
             <summary>
            Represents distributed horizontal alignment setting.
             </summary>
        </member>
        <member name="T:Spire.Xls.VerticalAlignType">
            <summary>
            Vertical alignment type.
            </summary>
        </member>
        <member name="F:Spire.Xls.VerticalAlignType.Top">
             <summary>
            Represents top vertical alignment.
             </summary>
        </member>
        <member name="F:Spire.Xls.VerticalAlignType.Center">
             <summary>
            Represents center vertical alignment.
             </summary>
        </member>
        <member name="F:Spire.Xls.VerticalAlignType.Bottom">
             <summary>
            Represents bottom vertical alignment.
             </summary>
        </member>
        <member name="F:Spire.Xls.VerticalAlignType.Justify">
             <summary>
            Represents justify vertical alignment.
             </summary>
        </member>
        <member name="F:Spire.Xls.VerticalAlignType.Distributed">
             <summary>
            Represents distributed vertical alignment.
             </summary>
        </member>
        <member name="T:Spire.Xls.OrderType">
            <summary>
            Page order for sheet in Excel.
            </summary>
        </member>
        <member name="F:Spire.Xls.OrderType.DownThenOver">
             <summary>
            Represents Down, then over.
             </summary>
        </member>
        <member name="F:Spire.Xls.OrderType.OverThenDown">
             <summary>
            Represents Over, then down.
             </summary>
        </member>
        <member name="T:Spire.Xls.PageOrientationType">
            <summary>
            Page orientation types in Excel.
            </summary>
        </member>
        <member name="F:Spire.Xls.PageOrientationType.Landscape">
             <summary>
            Represents landscape setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.PageOrientationType.Portrait">
             <summary>
            Represents potrait setting.
             </summary>
        </member>
        <member name="T:Spire.Xls.PaperSizeType">
            <summary>
            Paper size type.
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.Paper10x14">
            <summary>
            Represents paper size of 10 inches X 14 inches 
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.Paper11x17">
             <summary>
            Represents paper size of 11 inches X 17 inches 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperA3">
             <summary>
            Represents A3 (297 mm x  420 mm) paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperA4">
             <summary>
            Represents A4 (210 mm x  297 mm) paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperA4Small">
             <summary>
            Represents A4 Small (210 mm x  297 mm) paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperA5">
             <summary>
            Represents A5 (148 mm x  210 mm) paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperB4">
             <summary>
            Represents B4 (250 mm x  353 mm) paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperB5">
             <summary>
            Represents B5 (176 mm x  250 mm) paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperCSheet">
             <summary>
            Represents C paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperDSheet">
             <summary>
            Represents D paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelope10">
             <summary>
            Represents Envelope# 10 paper size(4-1/8 X 9-1/2 inches). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelope11">
             <summary>
            Represents Envelope# 11 paper size( (4-1/2 X 10-3/8 inches). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelope12">
             <summary>
            Represents Envelope# 12 paper size(4-3/4 X 11 inches). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelope14">
             <summary>
            Represents Envelope# 14 paper size(5 X 11-1/2 inches). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelope9">
             <summary>
            Represents Envelope# 9 paper size(3-7/8  X 8-7/8 inches). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeB4">
             <summary>
            Represents B4 Envelope paper size (250 mm x 353 mm).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeB5">
             <summary>
            Represents B5 Envelope paper size (176 mm x 250 mm). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeB6">
             <summary>
            Represents B6 Envelope paper size (176 mm x 125 mm). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeC3">
             <summary>
            Represents C3 Envelope paper size (324 mm x 458 mm). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeC4">
             <summary>
            Represents C4 Envelope paper size (229 mm x 324 mm). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeC5">
             <summary>
            Represents C5 Envelope paper size (162 mm x 229 mm).  
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeC6">
             <summary>
            Represents C6 Envelope paper size (114 mm x 162 mm). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeC65">
             <summary>
            Represents C65 Envelope paper size (114 mm x 229 mm). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeDL">
             <summary>
            Represents DL Envelope paper size (110 mm x 220 mm). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeItaly">
             <summary>
            Represents Italy Envelope paper size (110 mm x 230 mm). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopeMonarch">
             <summary>
            Represents Monarch Envelope paper size (3-7/8  X 7-1/2 inches). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEnvelopePersonal">
             <summary>
            Represents Personal Envelope paper size (3-5/8  X 6-1/2 inches). 
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperEsheet">
             <summary>
            Represents E paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperExecutive">
             <summary>
            Represents Executive paper size (7-1/2  X 10-1/2 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperFanfoldLegalGerman">
             <summary>
            Represents German Fanfold paper size (8-1/2  X 13 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperFanfoldStdGerman">
             <summary>
            Represents German Standard Fanfold paper size (8-1/2  X 12 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperFanfoldUS">
             <summary>
            Represents U.S. Standard Fanfold  paper size (14-7/8  X 11 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperFolio">
             <summary>
            Represents Folio paper size (8-1/2  X 13 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperLedger">
             <summary>
            Represents Ledger paper size (17  X 11 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperLegal">
             <summary>
            Represents Legal paper size (8-1/2  X 14 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperLetter">
             <summary>
            Represents Letter paper size (8-1/2  X 11 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperLetterSmall">
             <summary>
            Represents Letter Small paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperNote">
             <summary>
            Represents Note paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperQuarto">
             <summary>
            Represents Quarto paper size(215 mm x 275 mm).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperStatement">
             <summary>
            Represents Statement paper size(5-1/2  X 8-1/2 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperTabloid">
             <summary>
            Represents Tabloid paper size(11 X 17 inches).
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.PaperUser">
             <summary>
            Represents User paper size.
             </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.ISOB4">
            <summary>
            Represents ISO B4 paper size(250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.JapaneseDoublePostcard">
            <summary>
            Represents Japanese double postcard(200 mm by 148 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.StandardPaper9By11">
            <summary>
            Represents Standard paper(9 in. by 11 in.).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.StandardPaper10By11">
            <summary>
            Represents Standard paper(10 in. by 11 in.).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.StandardPaper15By11">
            <summary>
            Represents Standard paper(15 in. by 11 in.).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.InviteEnvelope">
            <summary>
            Represents Invite envelope (220 mm by 220 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.LetterExtraPaper9275By12">
            <summary>
            Represents Letter extra paper (9.275 in. by 12 in.).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.LegalExtraPaper9275By15">
            <summary>
            Represents Legal extra paper (9.275 in. by 15 in.).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.TabloidExtraPaper">
            <summary>
            Represents Tabloid extra paper (11.69 in. by 18 in.).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.A4ExtraPaper">
            <summary>
            Represents A4 extra paper (236 mm by 322 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.LetterTransversePaper">
            <summary>
            Represents Letter transverse paper (8.275 in. by 11 in.).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.A4TransversePaper">
            <summary>
            Represents A4 transverse paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.LetterExtraTransversePaper">
            <summary>
            Represents Letter extra transverse paper (9.275 in. by 12 in.).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.SuperASuperAA4Paper">
            <summary>
            Represents SuperA/SuperA/A4 paper (227 mm by 356 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.SuperBSuperBA3Paper">
            <summary>
            Represents SuperB/SuperB/A3 paper (305 mm by 487 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.LetterPlusPaper">
            <summary>
            Represents Letter plus paper (8.5 in. by 12.69 in.).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.A4PlusPaper">
            <summary>
            Represents A4 plus paper (210 mm by 330 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.A5TransversePaper">
            <summary>
            Represents A5 transverse paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.JISB5TransversePaper">
            <summary>
            Represents JIS B5 transverse paper (182 mm by 257 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.A3ExtraPaper">
            <summary>
            Represents A3 extra paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.A5ExtraPpaper">
            <summary>
            Represents A5 extra paper (174 mm by 235 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.ISOB5ExtraPaper">
            <summary>
            Represents ISO B5 extra paper (201 mm by 276 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.A2Paper">
            <summary>
            Represents A2 paper (420 mm by 594 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.A3TransversePaper">
            <summary>
            Represents A3 transverse paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="F:Spire.Xls.PaperSizeType.A3ExtraTransversePaper">
            <summary>
            Represents A3 extra transverse paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="T:Spire.Xls.PrintCommentType">
            <summary>
            Print comments types.
            </summary>
        </member>
        <member name="F:Spire.Xls.PrintCommentType.InPlace">
             <summary>
            Represents As displayed on sheet  setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.PrintCommentType.NoComments">
             <summary>
            Represents (None) setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.PrintCommentType.SheetEnd">
             <summary>
            Represents at end of sheet setting.
             </summary>
        </member>
        <member name="T:Spire.Xls.PrintErrorsType">
            <summary>
            Print error values.
            </summary>
        </member>
        <member name="F:Spire.Xls.PrintErrorsType.Blank">
             <summary>
            Represents the blank option.
             </summary>
        </member>
        <member name="F:Spire.Xls.PrintErrorsType.Dash">
             <summary>
            Represents the dash option.
             </summary>
        </member>
        <member name="F:Spire.Xls.PrintErrorsType.Displayed">
             <summary>
            Represents the displayed option.
             </summary>
        </member>
        <member name="F:Spire.Xls.PrintErrorsType.NA">
             <summary>
            Represents the NA option.
             </summary>
        </member>
        <member name="T:Spire.Xls.PageBreakExtentType">
            <summary>
            Page break extent types in Excel.
            </summary>
        </member>
        <member name="F:Spire.Xls.PageBreakExtentType.Full">
             <summary>
            Represents full page break option.
             </summary>
        </member>
        <member name="F:Spire.Xls.PageBreakExtentType.Partial">
             <summary>
            Represents partial page break option.
             </summary>
        </member>
        <member name="T:Spire.Xls.PageBreakType">
            <summary>
            Page break types in Excel.
            </summary>
        </member>
        <member name="F:Spire.Xls.PageBreakType.Automatic">
             <summary>
            Represents the Automatic type.
             </summary>
        </member>
        <member name="F:Spire.Xls.PageBreakType.Manual">
             <summary>
            Represents the Manual type.
             </summary>
        </member>
        <member name="F:Spire.Xls.PageBreakType.None">
             <summary>
            Represents the None type.
             </summary>
        </member>
        <member name="T:Spire.Xls.FontUnderlineType">
            <summary>
            Font underline types.
            </summary>
        </member>
        <member name="F:Spire.Xls.FontUnderlineType.None">
             <summary>
            Represents no underline.
             </summary>
        </member>
        <member name="F:Spire.Xls.FontUnderlineType.Single">
             <summary>
            Represents single underline.
             </summary>
        </member>
        <member name="F:Spire.Xls.FontUnderlineType.Double">
             <summary>
            Represents double underline.
             </summary>
        </member>
        <member name="F:Spire.Xls.FontUnderlineType.SingleAccounting">
             <summary>
            Represents SingleAccounting underline.
             </summary>
        </member>
        <member name="F:Spire.Xls.FontUnderlineType.DoubleAccounting">
             <summary>
            Represents DoubleAccounting underline.
             </summary>
        </member>
        <member name="T:Spire.Xls.ViewMode">
            <summary>
            Defines the view setting of the sheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.ViewMode.Normal">
            <summary>
            Normal view
            </summary>
        </member>
        <member name="F:Spire.Xls.ViewMode.Preview">
            <summary>
            Preview
            </summary>
        </member>
        <member name="F:Spire.Xls.ViewMode.Layout">
            <summary>
            Page Layout View
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelColors">
            <summary>
            Predefined colors in excel.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Black">
            <summary>
            Represents the Black color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.White">
            <summary>
            Represents the White color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Red">
            <summary>
            Represents the Red color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.LightGreen">
            <summary>
            Represents the LightGreen color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Blue">
            <summary>
            Represents the Blue color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Yellow">
            <summary>
            Represents the Yellow color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Magenta">
            <summary>
            Represents the Magenta color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Cyan">
            <summary>
            Represents the Cyan color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.None">
            <summary>
            No color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Aqua">
            <summary>
            Represents the Aqua color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.BlackCustom">
            <summary>
            Represents the BlackCustom color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.BlueCustom">
            <summary>
            Represents the BlueCustom color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.BlueGray">
            <summary>
            Represents the BlueGray color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.BrightGreen">
            <summary>
            Represents the BrightGreen color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Brown">
            <summary>
            Represents the Brown color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.DarkBlue">
            <summary>
            Represents the DarkBlue color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.DarkGreen">
            <summary>
            Represents the DarkGreen color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.DarkRed">
            <summary>
            Represents the DarkRed color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.DarkTeal">
            <summary>
            Represents the DarkTeal color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.DarkYellow">
            <summary>
            Represents the DarkYellow color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Gold">
            <summary>
            Represents the Gold color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Green">
            <summary>
            Represents the Green color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Gray25Percent">
            <summary>
            Represents the Gray25Percent color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Gray40Percent">
            <summary>
            Represents the Gray40Percent color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Gray50Percent">
            <summary>
            Represents the Gray50Percent color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Gray80Percent">
            <summary>
            Represents the Gray80Percent color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Indigo">
            <summary>
            Represents the Indigo color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Lavender">
            <summary>
            Represents the Lavender color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.LightBlue">
            <summary>
            Represents the LightBlue color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.LightGreen1">
            <summary>
            Represents the LightGreen1 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.LightOrange">
            <summary>
            Represents the LightOrange color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.LightTurquoise">
            <summary>
            Represents the LightTurquoise color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.LightYellow">
            <summary>
            Represents the LightYellow color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Lime">
            <summary>
            Represents the Lime color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.OliveGreen">
            <summary>
            Represents the OliveGreen color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Orange">
            <summary>
            Represents the Orange color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.PaleBlue">
            <summary>
            Represents the PaleBlue color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Pink">
            <summary>
            Represents the Pink color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Plum">
            <summary>
            Represents the Plum color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Red2">
            <summary>
            Represents the Red2 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Rose">
            <summary>
            Represents the Rose color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.SeaGreen">
            <summary>
            Represents the SeaGreen color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.SkyBlue">
            <summary>
            Represents the SkyBlue color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Tan">
            <summary>
            Represents the Tan color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Teal">
            <summary>
            Represents the Teal color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Turquoise">
            <summary>
            Represents the Turquoise color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Violet">
            <summary>
            Represents the Violet color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.WhiteCustom">
            <summary>
            Represents the WhiteCustom color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.YellowCustom">
            <summary>
            Represents the YellowCustom color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color0">
            <summary>
            Represents the Color0 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color1">
            <summary>
            Represents the Color1 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color2">
            <summary>
            Represents the Color2 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color3">
            <summary>
            Represents the Color3 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color4">
            <summary>
            Represents the Color4 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color5">
            <summary>
            Represents the Color5 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color6">
            <summary>
            Represents the Color6 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color7">
            <summary>
            Represents the Color7 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color8">
            <summary>
            Represents the Color8 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color9">
            <summary>
            Represents the Color9 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color10">
            <summary>
            Represents the Color10 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color11">
            <summary>
            Represents the Color11 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color12">
            <summary>
            Represents the Color12 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color13">
            <summary>
            Represents the Color13 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color14">
            <summary>
            Represents the Color14 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color15">
            <summary>
            Represents the Color15 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color16">
            <summary>
            Represents the Color16 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color17">
            <summary>
            Represents the Color17 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color18">
            <summary>
            Represents the Color18 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color19">
            <summary>
            Represents the Color19 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color20">
            <summary>
            Represents the Color20 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color21">
            <summary>
            Represents the Color21 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color22">
            <summary>
            Represents the Color22 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color23">
            <summary>
            Represents the Color23 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color24">
            <summary>
            Represents the Color24 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color25">
            <summary>
            Represents the Color25 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color26">
            <summary>
            Represents the Color26 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color27">
            <summary>
            Represents the Color27 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color28">
            <summary>
            Represents the Color28 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color29">
            <summary>
            Represents the Color29 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color30">
            <summary>
            Represents the Color30 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color31">
            <summary>
            Represents the Color31 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color32">
            <summary>
            Represents the Color32 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color33">
            <summary>
            Represents the Color33 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color34">
            <summary>
            Represents the Color34 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color35">
            <summary>
            Represents the Color35 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color36">
            <summary>
            Represents the Color36 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color37">
            <summary>
            Represents the Color37 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color38">
            <summary>
            Represents the Color38 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color39">
            <summary>
            Represents the Color39 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color40">
            <summary>
            Represents the Color40 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color41">
            <summary>
            Represents the Color41 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color42">
            <summary>
            Represents the Color42 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color43">
            <summary>
            Represents the Color43 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color44">
            <summary>
            Represents the Color44 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color45">
            <summary>
            Represents the Color45 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color46">
            <summary>
            Represents the Color46 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color47">
            <summary>
            Represents the Color47 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color48">
            <summary>
            Represents the Color48 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color49">
            <summary>
            Represents the Color49 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color50">
            <summary>
            Represents the Color50 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color51">
            <summary>
            Represents the Color51 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color52">
            <summary>
            Represents the Color52 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color53">
            <summary>
            Represents the Color53 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color54">
            <summary>
            Represents the Color54 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color55">
            <summary>
            Represents the Color55 color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelColors.Color56">
            <summary>
            Represents the Color56 color.
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelPatternType">
            <summary>
            Patterns style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.None">
            <summary>
            No pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Solid">
            <summary>
            Represents the Solid pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent50">
            <summary>
            Represents the Percent50 pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent70">
            <summary>
            Represents the Percent70 pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent25">
            <summary>
            Represents the Percent25 pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.DarkHorizontal">
            <summary>
            Represents the DarkHorizontal pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.DarkVertical">
            <summary>
            Represents the DarkVertical pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.DarkDownwardDiagonal">
            <summary>
            Represents the DarkDownwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.DarkUpwardDiagonal">
            <summary>
            Represents the DarkUpwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.ForwardDiagonal">
            <summary>
            Represents the ForwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent75">
            <summary>
            Represents the Percent75 pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Horizontal">
            <summary>
            Represents the Horizontal pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Vertical">
            <summary>
            Represents the Vertical pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.LightDownwardDiagonal">
            <summary>
            Represents the LightDownwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.LightUpwardDiagonal">
            <summary>
            Represents the LightUpwardDiagonal pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Angle">
            <summary>
            Represents the Angle pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent60">
            <summary>
            Represents the Percent60 pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent10">
            <summary>
            Represents the Percent10 pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent05">
            <summary>
            Represents the Percent05 pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent50Gray">
            <summary>
            Represents the Percent50Gray pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent75Gray">
            <summary>
            Represents the Percent75Gray pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent25Gray">
            <summary>
            Represents the Percent25Gray pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.HorizontalStripe">
            <summary>
            Represents the HorizontalStripe pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.VerticalStripe">
            <summary>
            Represents the VerticalStripe pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.ReverseDiagonalStripe">
            <summary>
            Represents the ReverseDiagonalStripe pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.DiagonalStripe">
            <summary>
            Represents the DiagonalStripe pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.DiagonalCrosshatch">
            <summary>
            Represents the DiagonalCrosshatch pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.ThickDiagonalCrosshatch">
            <summary>
            Represents the ThickDiagonalCrosshatch pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.ThinHorizontalStripe">
            <summary>
            Represents the ThinHorizontalStripe pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.ThinVerticalStripe">
            <summary>
            Represents the ThinVerticalStripe pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.ThinReverseDeagonalStripe">
            <summary>
            Represents the ThinReverseDeagonalStripe pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.ThinDiagonalStripe">
            <summary>
            Represents the ThinDiagonalStripe pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.ThinHorizontalCrosshatch">
            <summary>
            Represents the ThinHorizontalCrosshatch pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.ThinDiagonalCrosshatch">
            <summary>
            Represents the ThinDiagonalCrosshatch pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent125Gray">
            <summary>
            Represents the Percent125Gray pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Percent625Gray">
            <summary>
            Represents the Percent625Gray pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelPatternType.Gradient">
            <summary>
            Represent gradient pattern.
            </summary>
        </member>
        <member name="T:Spire.Xls.WorksheetVisibility">
            <summary>
            Visibility of worksheet type.
            </summary>
        </member>
        <member name="F:Spire.Xls.WorksheetVisibility.Visible">
            <summary>
            Worksheet is visible.
            </summary>
        </member>
        <member name="F:Spire.Xls.WorksheetVisibility.Hidden">
            <summary>
            Worksheet is hidden.
            </summary>
        </member>
        <member name="F:Spire.Xls.WorksheetVisibility.StrongHidden">
            <summary>
            Cleared with a Visual Basic macro. 
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelChartType">
            <summary>
            Chart types.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ColumnClustered">
            <summary>
            Represents the column clustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ColumnStacked">
            <summary>
            Represents the stacked column chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Column100PercentStacked">
            <summary>
            Represents the 100% stacked column chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Column3DClustered">
            <summary>
            Represents the 3D clustered column chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Column3DStacked">
            <summary>
            Represents the 3D stacked column chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Column3D100PercentStacked">
            <summary>
            Represents the 3D 100% stacked column chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Column3D">
            <summary>
            Represents the 3D column chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.BarClustered">
            <summary>
            Represents the clustered bar chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.BarStacked">
            <summary>
            Represents the stacked bar chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Bar100PercentStacked">
            <summary>
            Represents the 100% stacked bar chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Bar3DClustered">
            <summary>
            Represents the 3D clustered bar chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Bar3DStacked">
            <summary>
            Represents the 3D stacked bar chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Bar3D100PercentStacked">
            <summary>
            Represents the 100% 3D stacked bar chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Line">
            <summary>
            Represents the Line chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.LineStacked">
            <summary>
            Represents the stacked line chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Line100PercentStacked">
            <summary>
            Represents the 100% stacked line chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.LineMarkers">
            <summary>
            Represents the markers line chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.LineMarkersStacked">
            <summary>
            Represents the stacked markers line chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.LineMarkers100PercentStacked">
            <summary>
            Represents the 100% stacked markers line chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Line3D">
            <summary>
            Represents the 3D line chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Pie">
            <summary>
            Represents the pie chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Pie3D">
            <summary>
            Represents the 3D pie chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.PieOfPie">
            <summary>
            Represents the pie of pie chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.PieExploded">
            <summary>
            Represents the exploded pie chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Pie3DExploded">
            <summary>
            Represents the 3D exploded pie chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.PieBar">
            <summary>
            Represents the bar pie chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ScatterMarkers">
            <summary>
            Represents the markers scatter chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ScatterSmoothedLineMarkers">
            <summary>
            Represents the ScatterSmoothedLineMarkers chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ScatterSmoothedLine">
            <summary>
            Represents the ScatterSmoothedLine chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ScatterLineMarkers">
            <summary>
            Represents the ScatterLineMarkers chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ScatterLine">
            <summary>
            Represents the ScatterLine chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Area">
            <summary>
            Represents the Area chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.AreaStacked">
            <summary>
            Represents the AreaStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Area100PercentStacked">
            <summary>
            Represents the Area100PercentStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Area3D">
            <summary>
            Represents the Area3D chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Area3DStacked">
            <summary>
            Represents the Area3DStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Area3D100PercentStacked">
            <summary>
            Represents the Area3D100PercentStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Doughnut">
            <summary>
            Represents the Doughnut chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.DoughnutExploded">
            <summary>
            Represents the DoughnutExploded chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Radar">
            <summary>
            Represents the Radar chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.RadarMarkers">
            <summary>
            Represents the RadarMarkers chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.RadarFilled">
            <summary>
            Represents the RadarFilled chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Surface3D">
            <summary>
            Represents the Surface3D chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Surface3DNoColor">
            <summary>
            Represents the Surface3DNoColor chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.SurfaceContour">
            <summary>
            Represents the SurfaceContour chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.SurfaceContourNoColor">
            <summary>
            Represents the SurfaceContourNoColor chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Bubble">
            <summary>
            Represents the Bubble chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Bubble3D">
            <summary>
            Represents the Bubble3D chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.StockHighLowClose">
            <summary>
            Represents the StockHighLowClose chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.StockOpenHighLowClose">
            <summary>
            Represents the StockOpenHighLowClose chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.StockVolumeHighLowClose">
            <summary>
            Represents the StockVolumeHighLowClose chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.StockVolumeOpenHighLowClose">
            <summary>
            Represents the StockVolumeOpenHighLowClose chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.CylinderClustered">
            <summary>
            Represents the CylinderClustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.CylinderStacked">
            <summary>
            Represents the CylinderStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Cylinder100PercentStacked">
            <summary>
            Represents the Cylinder100PercentStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.CylinderBarClustered">
            <summary>
            Represents the CylinderBarClustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.CylinderBarStacked">
            <summary>
            Represents the CylinderBarStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.CylinderBar100PercentStacked">
            <summary>
            Represents the CylinderBar100PercentStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Cylinder3DClustered">
            <summary>
            Represents the Cylinder3DClustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ConeClustered">
            <summary>
            Represents the ConeClustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ConeStacked">
            <summary>
            Represents the ConeStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Cone100PercentStacked">
            <summary>
            Represents the Cone100PercentStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ConeBarClustered">
            <summary>
            Represents the ConeBarClustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ConeBarStacked">
            <summary>
            Represents the ConeBarStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.ConeBar100PercentStacked">
            <summary>
            Represents the ConeBar100PercentStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Cone3DClustered">
            <summary>
            Represents the Cone3DClustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.PyramidClustered">
            <summary>
            Represents the PyramidClustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.PyramidStacked">
            <summary>
            Represents the PyramidStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Pyramid100PercentStacked">
            <summary>
            Represents the Pyramid100PercentStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.PyramidBarClustered">
            <summary>
            Represents the PyramidBarClustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.PyramidBarStacked">
            <summary>
            Represents the PyramidBarStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.PyramidBar100PercentStacked">
            <summary>
            Represents the PyramidBar100PercentStacked chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.Pyramid3DClustered">
            <summary>
            Represents the Pyramid3DClustered chart type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelChartType.CombinationChart">
            <summary>
            Represents the CombinationChart chart types.
            </summary>
        </member>
        <member name="T:Spire.Xls.LegendPositionType">
            <summary>
            Legend placement for charts.
            </summary>
        </member>
        <member name="F:Spire.Xls.LegendPositionType.Bottom">
             <summary>
            Represents the bottom option.
             </summary>
        </member>
        <member name="F:Spire.Xls.LegendPositionType.Corner">
             <summary>
            Represents the Corner option.
             </summary>
        </member>
        <member name="F:Spire.Xls.LegendPositionType.Top">
             <summary>
            Represents the Top option.
             </summary>
        </member>
        <member name="F:Spire.Xls.LegendPositionType.Right">
             <summary>
            Represents the Right option.
             </summary>
        </member>
        <member name="F:Spire.Xls.LegendPositionType.Left">
             <summary>
            Represents the Left option.
             </summary>
        </member>
        <member name="F:Spire.Xls.LegendPositionType.NotDocked">
             <summary>
            Represents the Not Docked option.
             </summary>
        </member>
        <member name="T:Spire.Xls.PrintedChartSizeType">
            <summary>
            Print size type.
            </summary>
        </member>
        <member name="F:Spire.Xls.PrintedChartSizeType.Custom">
             <summary>
            Represents the Custom option.
             </summary>
        </member>
        <member name="F:Spire.Xls.PrintedChartSizeType.ScaleToFitPage">
             <summary>
            Represents the ScaleToFit page option.
             </summary>
        </member>
        <member name="F:Spire.Xls.PrintedChartSizeType.UseFullPage">
             <summary>
            Represents the Use Full Page option.
             </summary>
        </member>
        <member name="T:Spire.Xls.ChartPlotEmptyType">
            <summary>
            Chart plot empty type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartPlotEmptyType.NotPlotted">
            <summary>
            No plot.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartPlotEmptyType.Zero">
            <summary>
            Represents the Zero empty plot.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartPlotEmptyType.Interpolated">
            <summary>
            Represents the Interpolated empty plot.
            </summary>
        </member>
        <member name="T:Spire.Xls.AxisUsedType">
            <summary>
            Axes used type for charts.
            </summary>
        </member>
        <member name="F:Spire.Xls.AxisUsedType.Primary">
             <summary>
            Represents the Primary axis option.
             </summary>
        </member>
        <member name="F:Spire.Xls.AxisUsedType.PrimaryAndSecondary">
             <summary>
            Represents the Primary and Secondary axis option.
             </summary>
        </member>
        <member name="T:Spire.Xls.ChartBackgroundMode">
            <summary>
            Chart background mode.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartBackgroundMode.Transparent">
             <summary>
            Represents the Transparent option.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartBackgroundMode.Opaque">
             <summary>
            Represents the Opaque option.
             </summary>
        </member>
        <member name="T:Spire.Xls.ChartHorzAlignmentType">
            <summary>
            Chart horizontal alignment type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartHorzAlignmentType.Left">
             <summary>
            Represents the Left alignment option for the horizontal alignment setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartHorzAlignmentType.Center">
             <summary>
            Represents the Center alignment option for the horizontal alignment setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartHorzAlignmentType.Right">
             <summary>
            Represents the Right alignment option for the horizontal alignment setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartHorzAlignmentType.Justify">
             <summary>
            Represents the Justify alignment option for the horizontal alignment setting for Chart.
             </summary>
        </member>
        <member name="T:Spire.Xls.ChartVertAlignmentType">
            <summary>
            Chart vertical alignment.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartVertAlignmentType.Top">
             <summary>
            Represents the Top alignment option for the Vertical alignment setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartVertAlignmentType.Center">
             <summary>
            Represents the Center alignment option for the Vertical alignment setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartVertAlignmentType.Bottom">
             <summary>
            Represents the Bottom alignment option for the Vertical alignment setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartVertAlignmentType.Justify">
             <summary>
            Represents the Justify alignment option for the Vertical alignment setting for Chart.
             </summary>
        </member>
        <member name="T:Spire.Xls.ExcelAutoType">
            <summary>
            Border pattern type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelAutoType.Auto">
             <summary>
            Represents the Automatic option for the Border Pattern setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ExcelAutoType.None">
             <summary>
            Represents the None option for the Border Pattern setting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ExcelAutoType.Custom">
             <summary>
            Represents the Custom option for the Border Pattern setting.
             </summary>
        </member>
        <member name="T:Spire.Xls.ChartLinePatternType">
            <summary>
            Chart line patterns.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartLinePatternType.Solid">
             <summary>
            Represents the Solid line pattern setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLinePatternType.Dash">
             <summary>
            Represents the Dash line pattern setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLinePatternType.Dot">
             <summary>
            Represents the Dot line pattern setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLinePatternType.DashDot">
             <summary>
            Represents the Dash-dot line pattern setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLinePatternType.DashDotDot">
             <summary>
            Represents the Dash-dot-dot line pattern setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLinePatternType.None">
             <summary>
            Represents the no line pattern setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLinePatternType.DarkGray">
             <summary>
            Represents the Dark Gray line pattern setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLinePatternType.MediumGray">
             <summary>
            Represents the Medium Gray line pattern setting for Chart.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLinePatternType.LightGray">
             <summary>
            Represents the Light Gray line pattern setting for Chart.
             </summary>
        </member>
        <member name="T:Spire.Xls.ChartLineWeightType">
            <summary>
            Chart line weight values type. 
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartLineWeightType.Hairline">
             <summary>
            Represents the Hairline weight for Chart line.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLineWeightType.Narrow">
             <summary>
            Represents the Narrow weight for Chart line.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLineWeightType.Medium">
             <summary>
            Represents the Medimun weight for Chart line.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartLineWeightType.Wide">
             <summary>
            Represents the Wide weight for Chart line.
             </summary>
        </member>
        <member name="T:Spire.Xls.ChartMarkerType">
            <summary>
            Chart marker types.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.None">
             <summary>
            Represents the None option for the marker type.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.Square">
             <summary>
            Represents the square style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.Diamond">
             <summary>
            Represents the diamond style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.Triangle">
             <summary>
            Represents the Triangle style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.X">
             <summary>
            Represents the X style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.Star">
             <summary>
            Represents the Star style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.DowJones">
             <summary>
            Represents the Dow Jones style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.StandardDeviation">
             <summary>
            Represents the Standard Deviation style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.Circle">
             <summary>
            Represents the Circle style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.PlusSign">
             <summary>
            Represents the Plus style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.Auto">
             <summary>
            Represents the Auto style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="F:Spire.Xls.ChartMarkerType.Picture">
             <summary>
            Represents the Picture style in the custom marker option for Chart lines.
             </summary>
        </member>
        <member name="T:Spire.Xls.AxisType">
            <summary>
            Primary axis types for Charts..
            </summary>
        </member>
        <member name="F:Spire.Xls.AxisType.Category">
             <summary>
            Represents the Category (X) Axis.
             </summary>
        </member>
        <member name="F:Spire.Xls.AxisType.Value">
             <summary>
            Represents the Value (Y) Axis.
             </summary>
        </member>
        <member name="F:Spire.Xls.AxisType.Serie">
            <summary>
            Represents the Serie Axis.
            </summary>
        </member>
        <member name="F:Spire.Xls.InsertOptionsType.FormatAsBefore">
            <summary>
            Indicates that inserted row/column has the same format as the row above or column left.
            </summary>
        </member>
        <member name="F:Spire.Xls.InsertOptionsType.FormatAsAfter">
            <summary>
            Indicates that inserted row/column has the same format as the row below or column right.
            </summary>
        </member>
        <member name="F:Spire.Xls.InsertOptionsType.FormatDefault">
            <summary>
            Indicates that inserted row/column has default format.
            </summary>
        </member>
        <member name="T:Spire.Xls.TopBottomType">
            <summary>
            TopBottom type.
            </summary>
        </member>
        <member name="T:Spire.Xls.AverageType">
            <summary>
            Average type.
            </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.Above">
             <summary>
            Above the average for all values in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.AboveEqual">
             <summary>
            Above or equal the average for all values in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.Below">
             <summary>
            below the average for all values in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.BelowEqual">
             <summary>
            below or equal the average for all values in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.AboveStdDev1">
             <summary>
            StdDev above 1 than the average for all values in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.AboveStdDev2">
             <summary>
            StdDev above 2 than the average for all values in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.AboveStdDev3">
             <summary>
            StdDev above 3 than the average for all values in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.BelowStdDev1">
             <summary>
            StdDev below 1 than the average for all values in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.BelowStdDev2">
             <summary>
            StdDev below 2 than the average for all values in the range.
             </summary>
        </member>
        <member name="F:Spire.Xls.AverageType.BelowStdDev3">
             <summary>
            StdDev below 3 than the average for all values in the range.
             </summary>
        </member>
        <member name="T:Spire.Xls.ConditionalFormatType">
            <summary>
            Conditional formatting type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.CellValue">
             <summary>
            Represents the Cell Value Is option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.Formula">
             <summary>
            Represents the Formula Is option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.DataBar">
             <summary>
            Represents the DataBar option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.IconSet">
             <summary>
            Represents the IconSet option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.ColorScale">
             <summary>
            Represents the ColorScale option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.BeginsWith">
             <summary>
            Represents the BeginsWith option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.ContainsText">
             <summary>
            Represents the ContainsText option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.EndsWith">
             <summary>
            Represents the EndsWith option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.NotContainsText">
             <summary>
            Represents the NotContainsText option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.TopBottom">
             <summary>
            Represents the TopBottom option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.Average">
             <summary>
            Represents the Average option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.ContainsBlanks">
             <summary>
            Represents the ContainsBlanks option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.ContainsErrors">
             <summary>
            Represents the ContainsErrors option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.DuplicateValues">
             <summary>
            Represents the DuplicateValues option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.NotContainsBlanks">
             <summary>
            Represents the NotContainsBlanks option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.NotContainsErrors">
             <summary>
            Represents the NotContainsErrors option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.TimePeriod">
             <summary>
            Represents the TimePeriod option for conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ConditionalFormatType.UniqueValues">
             <summary>
            Represents the UniqueValues option for conditional formatting.
             </summary>
        </member>
        <member name="T:Spire.Xls.ComparisonOperatorType">
            <summary>
            The Comparison operator for conditional formatting in Excel.
            </summary>
        </member>
        <member name="F:Spire.Xls.ComparisonOperatorType.None">
             <summary>
            Represents no option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ComparisonOperatorType.Between">
             <summary>
            Represents between option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ComparisonOperatorType.NotBetween">
             <summary>
            Represents not between option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ComparisonOperatorType.Equal">
             <summary>
            Represents equal to option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ComparisonOperatorType.NotEqual">
             <summary>
            Represents not equal to option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ComparisonOperatorType.Greater">
             <summary>
            Represents greater than option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ComparisonOperatorType.Less">
             <summary>
            Represents less than option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ComparisonOperatorType.GreaterOrEqual">
             <summary>
            Represents greater than or equal to option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ComparisonOperatorType.LessOrEqual">
             <summary>
            Represents less than or equal to option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="T:Spire.Xls.ValidationComparisonOperator">
            <summary>
            The Comparison operator for conditional formatting.
            </summary>
        </member>
        <member name="F:Spire.Xls.ValidationComparisonOperator.Between">
             <summary>
            Represents between option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ValidationComparisonOperator.NotBetween">
             <summary>
            Represents not between option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ValidationComparisonOperator.Equal">
             <summary>
            Represents equal to option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ValidationComparisonOperator.NotEqual">
             <summary>
            Represents not equal to option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ValidationComparisonOperator.Greater">
             <summary>
            Represents greater than option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ValidationComparisonOperator.Less">
             <summary>
            Represents less than option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ValidationComparisonOperator.GreaterOrEqual">
             <summary>
            Represents greater than or equal to option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="F:Spire.Xls.ValidationComparisonOperator.LessOrEqual">
             <summary>
            Represents less than or equal to option for comparison in conditional formatting.
             </summary>
        </member>
        <member name="T:Spire.Xls.CellDataType">
            <summary>
            Cell data types:
            </summary>
        </member>
        <member name="F:Spire.Xls.CellDataType.Any">
            <summary>
            Represents the Any data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellDataType.Integer">
            <summary>
            Represents the Integer data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellDataType.Decimal">
            <summary>
            Represents the Decimal data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellDataType.User">
            <summary>
            Represents the User data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellDataType.Date">
            <summary>
            Represents the Date data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellDataType.Time">
            <summary>
            Represents the Time data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellDataType.TextLength">
            <summary>
            Represents the TextLength data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellDataType.Formula">
            <summary>
            Represents the Formula data type.
            </summary>
        </member>
        <member name="T:Spire.Xls.AlertStyleType">
            <summary>
            Possible error style values:
            </summary>
        </member>
        <member name="F:Spire.Xls.AlertStyleType.Stop">
            <summary>
            Specifies that the alert should be displayed with the stop style.
            </summary>
        </member>
        <member name="F:Spire.Xls.AlertStyleType.Warning">
            <summary>
            Specifies that the alert should be displayed with the warning style. 
            </summary>
        </member>
        <member name="F:Spire.Xls.AlertStyleType.Info">
            <summary>
            Specifies that the alert should be displayed with the information style. 
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelShapeType">
            <summary>
            Excel shapes.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.AutoShape">
            <summary>
            Represents the AutoShape shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Callout">
            <summary>
            Represents the Callout shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Canvas">
            <summary>
            Represents the Canvas shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Chart">
            <summary>
            Represents the Chart shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Comment">
            <summary>
            Represents the Comment shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Diagram">
            <summary>
            Represents the Diagram shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.EmbeddedOLEObject">
            <summary>
            Represents the EmbeddedOLEObject shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.FormControl">
            <summary>
            Represents the FormControl shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Freeform">
            <summary>
            Represents the Freeform shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Group">
            <summary>
            Represents the Group shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Line">
            <summary>
            Represents the Line shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.LinkedOLEObject">
            <summary>
            Represents the LinkedOLEObject shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.LinkedPicture">
            <summary>
            Represents the LinkedPicture shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Media">
            <summary>
            Cannot be used with this property. This constant is used with shapes
            in other Microsoft Office applications. 
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.OLEControlObject">
            <summary>
            Represents the OLEControlObject shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Picture">
            <summary>
            Represents the Picture shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Placeholder">
            <summary>
            Cannot be used with this property. This constant is used with shapes
            in other Microsoft Office applications. 
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.ScriptAnchor">
            <summary>
            Represents the ScriptAnchor shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.ShapeTypeMixed">
            <summary>
            Represents the ShapeTypeMixed shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Table">
            <summary>
            Represents the Table shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.TextBox">
            <summary>
            Represents the TextBox shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Oval">
            <summary>
            Represents the Oval shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.TextEffect">
            <summary>
            Represents the TextEffect shape type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelShapeType.Unknown">
            <summary>
            Represents the Unknown shape type.
            </summary>
        </member>
        <member name="T:Spire.Xls.TextRotationType">
            <summary>
            Text Rotation types.
            </summary>
        </member>
        <member name="F:Spire.Xls.TextRotationType.LeftToRight">
            <summary>
            Represents the LeftToRight text rotation.
            </summary>
        </member>
        <member name="F:Spire.Xls.TextRotationType.TopToBottom">
            <summary>
            Represents the TopToBottom text rotation.
            </summary>
        </member>
        <member name="F:Spire.Xls.TextRotationType.CounterClockwise">
            <summary>
            Represents the CounterClockwise text rotation.
            </summary>
        </member>
        <member name="F:Spire.Xls.TextRotationType.Clockwise">
            <summary>
            Represents the Clockwise text rotation.
            </summary>
        </member>
        <member name="T:Spire.Xls.XLSAutoShapeType">
            <summary>
            Represents all built-in auto shape type.
            B模型AutoShapeType 枚举,03图形解析时用
            </summary>
        </member>
        <member name="T:Spire.Xls.PrstGeomShapeType">
            <summary>
            Worksheet preset geometry shape type
            </summary>
        </member>
        <member name="T:Spire.Xls.CommentHAlignType">
            <summary>
            Comment horizontally align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentHAlignType.Left">
            <summary>
            Represents the Left comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentHAlignType.Center">
            <summary>
            Represents the Center comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentHAlignType.Right">
            <summary>
            Represents the Right comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentHAlignType.Justified">
            <summary>
            Represents the Justified comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentHAlignType.Justify">
            <summary>
            Represents the Justified comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentHAlignType.Distributed">
            <summary>
            Represents the Destributed comment align.
            </summary>
        </member>
        <member name="T:Spire.Xls.CommentVAlignType">
            <summary>
            Comment vertically align
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentVAlignType.Top">
            <summary>
            Represents the Top comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentVAlignType.Center">
            <summary>
            Represents the Center comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentVAlignType.Bottom">
            <summary>
            Represents the Bottom comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentVAlignType.Justify">
            <summary>
            Represents the Justified comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.CommentVAlignType.Distributed">
            <summary>
            Represents the Destributed comment align.
            </summary>
        </member>
        <member name="F:Spire.Xls.HttpContentType.CSV">
            <summary>
            Represents the CSV HttpContent type.
            </summary>
        </member>
        <member name="T:Spire.Xls.StyleMergeType">
            <summary>
            Syle merge types.
            </summary>
        </member>
        <member name="F:Spire.Xls.StyleMergeType.Leave">
            <summary>
            Represents the Leave style merge option.
            </summary>
        </member>
        <member name="F:Spire.Xls.StyleMergeType.Replace">
            <summary>
            Represents the Replace style merge option.
            </summary>
        </member>
        <member name="F:Spire.Xls.StyleMergeType.CreateDiffName">
            <summary>
            Represents the CreateDiffName style merge option.
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelCellType">
            <summary>
            Excel cell type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.AllFormatConditions">
            <summary>
            Cells of any format.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.AllValidation">
            <summary>
            Cells having validation criteria.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.Blanks">
            <summary>
            Empty cells.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.Comments">
            <summary>
            Cells containing notes.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.Constants">
            <summary>
            Cells containing constants.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.Formulas">
            <summary>
            Cells containing formulas.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.LastCell">
            <summary>
            The last cell in the used range.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.SameFormatConditions">
            <summary>
            Cells having the same format.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.SameValidation">
            <summary>
            Cells having the same validation criteria.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelCellType.Visible">
            <summary>
            All visible cells.
            </summary>
        </member>
        <member name="T:Spire.Xls.FilterDataType">
            <summary>
            Data type for filters.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterDataType.NotUsed">
            <summary>
            Represents the filter data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterDataType.FloatingPoint">
            <summary>
            Represents the FloatingPoint filter data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterDataType.String">
            <summary>
            Represents the String filter data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterDataType.Boolean">
            <summary>
            Represents the Boolean filter data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterDataType.ErrorCode">
            <summary>
            Represents the ErrorCode filter data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterDataType.MatchAllBlanks">
            <summary>
            Represents the MatchAllBlanks filter data type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterDataType.MatchAllNonBlanks">
            <summary>
            Represents the MatchAllNonBlanks filter data type.
            </summary>
        </member>
        <member name="T:Spire.Xls.FilterConditionType">
            <summary>
            Filter conditions.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterConditionType.Less">
            <summary>
            Represents the Less filter condition type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterConditionType.Equal">
            <summary>
            Represents the Equal filter condition type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterConditionType.LessOrEqual">
            <summary>
            Represents the LessOrEqual filter condition type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterConditionType.Greater">
            <summary>
            Represents the Greater filter condition type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterConditionType.NotEqual">
            <summary>
            Represents the NotEqual filter condition type.
            </summary>
        </member>
        <member name="F:Spire.Xls.FilterConditionType.GreaterOrEqual">
            <summary>
            Represents the GreaterOrEqual filter condition type.
            </summary>
        </member>
        <member name="T:Spire.Xls.RectangleStyleType">
            <summary>
            Excel rectangle style.
            </summary>
        </member>
        <member name="F:Spire.Xls.RectangleStyleType.Regular">
            <summary>
            Represents the Regular rectangle style.
            </summary>
        </member>
        <member name="F:Spire.Xls.RectangleStyleType.Shadowed">
            <summary>
            Represents the Shadowed rectangle style.
            </summary>
        </member>
        <member name="T:Spire.Xls.PagesOrderType">
            <summary>
            Page order type
            </summary>
        </member>
        <member name="F:Spire.Xls.PagesOrderType.DownThenOver">
            <summary>
            Represents the DownThenOver pages order.
            </summary>
        </member>
        <member name="F:Spire.Xls.PagesOrderType.OverThenDown">
            <summary>
            Represents the OverThenDown pages order.
            </summary>
        </member>
        <member name="T:Spire.Xls.HyperLinkType">
            <summary>
            Hyper link type.
            </summary>
        </member>
        <member name="F:Spire.Xls.HyperLinkType.None">
            <summary>
            No hyperlink.
            </summary>
        </member>
        <member name="F:Spire.Xls.HyperLinkType.Url">
            <summary>
            Represents the Url hyperlink type.
            </summary>
        </member>
        <member name="F:Spire.Xls.HyperLinkType.File">
            <summary>
            Represents the File hyperlink type.
            </summary>
        </member>
        <member name="F:Spire.Xls.HyperLinkType.Unc">
            <summary>
            Represents the Unc hyperlink type.
            </summary>
        </member>
        <member name="F:Spire.Xls.HyperLinkType.Workbook">
            <summary>
            Represents the Workbook hyperlink type.
            </summary>
        </member>
        <member name="T:Spire.Xls.DataSourceType">
            <summary>
            Data source type.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataSourceType.Worksheet">
            <summary>
            Represents the Worksheet data source type.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataSourceType.ExternalData">
            <summary>
            Represents the ExternalData data source type.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataSourceType.Consolidation">
            <summary>
            Represents the Consolidation data source type.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataSourceType.ScenarioPivotTable">
            <summary>
            Represents the ScenarioPivotTable data source type.
            </summary>
        </member>
        <member name="T:Spire.Xls.ReadingOrderType">
            <summary>
            Reading order types.
            </summary>
        </member>
        <member name="F:Spire.Xls.ReadingOrderType.Context">
            <summary>
            Represents the Context reading order type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ReadingOrderType.LeftToRight">
            <summary>
            Represents the LeftToRight reading order type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ReadingOrderType.RightToLeft">
            <summary>
            Represents the RightToLeft reading order type.
            </summary>
        </member>
        <member name="T:Spire.Xls.ImageFormatType">
            <summary>
            Image formats.
            </summary>
        </member>
        <member name="F:Spire.Xls.ImageFormatType.Original">
            <summary>
            Original picture format.
            </summary>
        </member>
        <member name="F:Spire.Xls.ImageFormatType.Png">
            <summary>
            PNG picture format.
            </summary>
        </member>
        <member name="F:Spire.Xls.ImageFormatType.Jpeg">
            <summary>
            JPG picture format.
            </summary>
        </member>
        <member name="T:Spire.Xls.BubbleSizeType">
            <summary>
            Bubble size.
            </summary>
        </member>
        <member name="F:Spire.Xls.BubbleSizeType.Area">
             <summary>
            Area buble size.
             </summary>
        </member>
        <member name="F:Spire.Xls.BubbleSizeType.Width">
             <summary>
            Width buble size.
             </summary>
        </member>
        <member name="T:Spire.Xls.ChartPieType">
            <summary>
            Chart pile type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartPieType.Normal">
            <summary>
            Represents the Normal pie type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartPieType.Pie">
            <summary>
            Represents the Pie pie type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartPieType.Bar">
            <summary>
            Represents the Bar pie type.
            </summary>
        </member>
        <member name="T:Spire.Xls.SplitType">
            <summary>
            Split type.
            </summary>
        </member>
        <member name="F:Spire.Xls.SplitType.Position">
            <summary>
            Represents the Position split type.
            </summary>
        </member>
        <member name="F:Spire.Xls.SplitType.Value">
            <summary>
            Represents the Value split type.
            </summary>
        </member>
        <member name="F:Spire.Xls.SplitType.Percent">
            <summary>
            Represents the Percent split type.
            </summary>
        </member>
        <member name="F:Spire.Xls.SplitType.Custom">
            <summary>
            Represents the Custom split type.
            </summary>
        </member>
        <member name="T:Spire.Xls.DropLineStyleType">
            <summary>
            Drop line style type.
            </summary>
        </member>
        <member name="F:Spire.Xls.DropLineStyleType.Drop">
            <summary>
            Represents the Drop line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.DropLineStyleType.HiLow">
            <summary>
            Represents the HiLow drop line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.DropLineStyleType.Series">
            <summary>
            Represents the Series drop line style.
            </summary>
        </member>
        <member name="T:Spire.Xls.LegendSpacingType">
            <summary>
            Legend spacing for charts.
            </summary>
        </member>
        <member name="F:Spire.Xls.LegendSpacingType.Close">
            <summary>
            Represents the Close .
            </summary>
        </member>
        <member name="F:Spire.Xls.LegendSpacingType.Medium">
            <summary>
            Represents the Medium.
            </summary>
        </member>
        <member name="F:Spire.Xls.LegendSpacingType.Open">
            <summary>
            Represents the Open.
            </summary>
        </member>
        <member name="T:Spire.Xls.BaseFormatType">
            <summary>
            Base format options.
            </summary>
        </member>
        <member name="F:Spire.Xls.BaseFormatType.Rectangle">
            <summary>
            Represents Rectangle base format.
            </summary>
        </member>
        <member name="F:Spire.Xls.BaseFormatType.Circle">
            <summary>
            Represents Circle base format.
            </summary>
        </member>
        <member name="T:Spire.Xls.TopFormatType">
            <summary>
            Top format type.
            </summary>
        </member>
        <member name="F:Spire.Xls.TopFormatType.Straight">
            <summary>
            Represents Straight top format.
            </summary>
        </member>
        <member name="F:Spire.Xls.TopFormatType.Sharp">
            <summary>
            Represents Sharp top format.
            </summary>
        </member>
        <member name="F:Spire.Xls.TopFormatType.Trunc">
            <summary>
            Represents Trunc top format.
            </summary>
        </member>
        <member name="T:Spire.Xls.ObjectTextLinkType">
            <summary>
            Object text is linked to.
            </summary>
        </member>
        <member name="F:Spire.Xls.ObjectTextLinkType.Chart">
            <summary>
            Represents the Chart object text type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ObjectTextLinkType.YAxis">
            <summary>
            Represents the YAxis object text type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ObjectTextLinkType.XAxis">
            <summary>
            Represents the XAxis object text type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ObjectTextLinkType.DataLabel">
            <summary>
            Represents the DataLabel object text type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ObjectTextLinkType.ZAxis">
            <summary>
            Represents the ZAxis object text type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ObjectTextLinkType.DisplayUnit">
            <summary>
            Represents the DisplayUnit object text type.
            </summary>
        </member>
        <member name="T:Spire.Xls.AxisLineIdentifierType">
            <summary>
            Axis line indentifier type.
            </summary>
        </member>
        <member name="F:Spire.Xls.AxisLineIdentifierType.AxisLineItself">
            <summary>
            The axis line itself.
            </summary>
        </member>
        <member name="F:Spire.Xls.AxisLineIdentifierType.MajorGridLine">
            <summary>
            Major grid line along the axis.
            </summary>
        </member>
        <member name="F:Spire.Xls.AxisLineIdentifierType.MinorGridLine">
            <summary>
            Minor grid line along the axis.
            </summary>
        </member>
        <member name="F:Spire.Xls.AxisLineIdentifierType.WallsOrFloor">
            <summary>
            Walls or floor -- walls if parent axis is type 0 or 2;
            floor if parent axis is type 1.
            </summary>
        </member>
        <member name="T:Spire.Xls.CellFormatType">
            <summary>
            Cell format types.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellFormatType.Unknown">
            <summary>
            Represents unknown format type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellFormatType.General">
            <summary>
            Represents general number format.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellFormatType.Text">
            <summary>
            Represents text number format.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellFormatType.Number">
            <summary>
            Represents number number format.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellFormatType.DateTime">
            <summary>
            Represents datetime number format.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellFormatType.Formula">
            <summary>
            Represents Formula.
            </summary>
        </member>
        <member name="T:Spire.Xls.CellExportType">
            <summary>
            data export type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellExportType.Bool">
            <summary>
            Represents Boolean property.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellExportType.Number">
            <summary>
            Represents Number property.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellExportType.Text">
            <summary>
            Represents Text property.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellExportType.DateTime">
            <summary>
            Represents DateTime property.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellExportType.TimeSpan">
            <summary>
            Represents TimeSpan property.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellExportType.Error">
            <summary>
            Represents Error property.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellExportType.Formula">
            <summary>
            Represents Formula.
            </summary>
        </member>
        <member name="T:Spire.Xls.BuiltInPropertyType">
            <summary>
            SummaryInformation property type.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Title">
            <summary>
            Title document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Subject">
            <summary>
            Subject document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Author">
            <summary>
            Author document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Keywords">
            <summary>
            Keywords document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Comments">
            <summary>
            Comments document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Template">
            <summary>
            Template document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.LastAuthor">
            <summary>
            LastAuthor document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.RevisionNumber">
            <summary>
            Revnumber document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.EditTime">
            <summary>
            EditTime document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.LastPrinted">
            <summary>
            LastPrinted document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.CreationDate">
            <summary>
            CreationDate document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.LastSaveDate">
            <summary>
            LastSaveDate document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.PageCount">
            <summary>
            PageCount document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.WordCount">
            <summary>
            WordCount document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.CharCount">
            <summary>
            CharCount document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Thumbnail">
            <summary>
            Thumbnail document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.ApplicationName">
            <summary>
            ApplicationName document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Security">
            <summary>
            Ssecurity document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Category">
            <summary>
            Category  document property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.PresentationTarget">
            <summary>
            Target format type.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.ByteCount">
            <summary>
            ByteCount.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.LineCount">
            <summary>
            LineCount.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.ParagraphCount">
            <summary>
            ParCount.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.SlideCount">
            <summary>
            SlideCount.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.NoteCount">
            <summary>
            NoteCount.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.HiddenCount">
            <summary>
            HiddenCount.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.MultimediaClipCount">
            <summary>
            MmclipCount.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.ScaleCrop">
            <summary>
            ScaleCrop property.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.HeadingPair">
            <summary>
            HeadingPair.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.DocParts">
            <summary>
            DocParts.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Manager">
            <summary>
            Manager.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.Company">
            <summary>
            Company.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInPropertyType.LinksDirty">
            <summary>
            LinksDirty.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelClearOptions.ClearFormat">
            <summary>
            Clears the formats of the cell.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelClearOptions.ClearContent">
            <summary>
            Clears the contents of the cell.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelClearOptions.ClearComment">
            <summary>
            Clears the comments of the cell.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelClearOptions.ClearAll">
            <summary>
            Clears the comments, content and formats of the cell.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelClearOptions.ClearConditionalFormats">
            <summary>
            Clears all the Conditional Format
            </summary>
        </member>
        <member name="F:Spire.Xls.LineShapeType.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="F:Spire.Xls.LineShapeType.ElbowLine">
            <summary>
            PloyLine
            </summary>
        </member>
        <member name="F:Spire.Xls.LineShapeType.CurveLine">
            <summary>
            CurveLine
            </summary>
        </member>
        <member name="T:Spire.Xls.ShapeLineStyleType">
            <summary>
            Represents shape line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeLineStyleType.LineSingle">
            <summary>
            Represents single line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeLineStyleType.LineThinThin">
            <summary>
            Represents thin thin line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeLineStyleType.LineThinThick">
            <summary>
            Represents thin thick line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeLineStyleType.LineThickThin">
            <summary>
            Represents thick thin line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeLineStyleType.LineThickBetweenThin">
            <summary>
            Represents thick between thin line style.
            </summary>
        </member>
        <member name="T:Spire.Xls.ShapeDashLineStyleType">
            <summary>
            Represents shape dash line style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeDashLineStyleType.Solid">
            <summary>
            Represents solid style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeDashLineStyleType.Dotted">
            <summary>
            Represents Dotted style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeDashLineStyleType.DottedRound">
            <summary>
            Represents DottedRound style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeDashLineStyleType.Dashed">
            <summary>
            Represents Dashed style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeDashLineStyleType.MediumDashed">
            <summary>
            Represents MediumDashed style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeDashLineStyleType.DashDot">
            <summary>
            Represents DashDot style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeDashLineStyleType.MediumDashDot">
            <summary>
            Represents MediumDashDot style.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeDashLineStyleType.DashDotDot">
            <summary>
            Represents DashDotDot style.
            </summary>
        </member>
        <member name="T:Spire.Xls.ShapeArrowStyleType">
            <summary>
            Represents shape arrow style type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowStyleType.LineNoArrow">
            <summary>
            Represetns no arrow.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowStyleType.LineArrow">
            <summary>
            Represetns standart arrow.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowStyleType.LineArrowStealth">
            <summary>
            Represetns Stealth arrow.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowStyleType.LineArrowDiamond">
            <summary>
            Represetns Diamond arrow.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowStyleType.LineArrowOval">
            <summary>
            Represetns Oval arrow.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowStyleType.LineArrowOpen">
            <summary>
            Represetns Open arrow.
            </summary>
        </member>
        <member name="T:Spire.Xls.ShapeArrowLengthType">
            <summary>
            Represents arrow head length.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowLengthType.ArrowHeadShort">
            <summary>
            Represents short arrow head length.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowLengthType.ArrowHeadMedium">
            <summary>
            Represents short arrow head length.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowLengthType.ArrowHeadLong">
            <summary>
            Represents short arrow head length.
            </summary>
        </member>
        <member name="T:Spire.Xls.ShapeArrowWidthType">
            <summary>
            Represents arrow head width.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthType.ArrowHeadNarrow">
            <summary>
            Represents short arrow head width.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthType.ArrowHeadMedium">
            <summary>
            Represents short arrow head width.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthType.ArrowHeadWide">
            <summary>
            Represents short arrow head width.
            </summary>
        </member>
        <member name="T:Spire.Xls.ShapeArrowWidthLengthType">
            <summary>
            Represents shape arrow width length.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthLengthType.ArrowNarrowShort">
            <summary>
            Represents ArrowNarrowShort type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthLengthType.ArrowNarrowMedium">
            <summary>
            Represents ArrowNarrowMedium type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthLengthType.ArrowNarrowLong">
            <summary>
            Represents ArrowNarrowLong type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthLengthType.ArrowMediumShort">
            <summary>
            Represents ArrowMediumShort type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthLengthType.ArrowMediumMedium">
            <summary>
            Represents ArrowMediumMedium type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthLengthType.ArrowMediumLong">
            <summary>
            Represents ArrowMediumLong type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthLengthType.ArrowWideShort">
            <summary>
            Represents ArrowWideShort type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthLengthType.ArrowWideMedium">
            <summary>
            Represents ArrowWideMedium type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeArrowWidthLengthType.ArrowWideLong">
            <summary>
            Represents ArrowWideLong type.
            </summary>
        </member>
        <member name="T:Spire.Xls.ShapeFillType">
            <summary>
            Represents shape XlsFill type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeFillType.SolidColor">
            <summary>
            Solid color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeFillType.Pattern">
            <summary>
            Represents pattern type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeFillType.Texture">
            <summary>
            Represents texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeFillType.Picture">
            <summary>
            Represents picture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeFillType.UnknownGradient">
            <summary>
            Represents unsupport gradient.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeFillType.Gradient">
            <summary>
            Represents gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ShapeFillType.NoFill">
            <summary>
            Represents noFill type.
            </summary>
        </member>
        <member name="T:Spire.Xls.GradientStyleType">
            <summary>
            Represents excel shape shading style.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientStyleType.Horizontal">
            <summary>
            Represents horizontal style.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientStyleType.Vertical">
            <summary>
            Represents vertical style.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientStyleType.Diagonl_Up">
            <summary>
            Represents diagonl up style.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientStyleType.Diagonl_Down">
            <summary>
            Represents diagonl down style.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientStyleType.From_Corner">
            <summary>
            Represents from corner style.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientStyleType.From_Center">
            <summary>
            Represents from center style.
            </summary>
        </member>
        <member name="T:Spire.Xls.GradientVariantsType">
            <summary>
            Represents shape shading variants.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientVariantsType.ShadingVariants1">
            <summary>
            Represents first shading variants.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientVariantsType.ShadingVariants2">
            <summary>
            Represents second shading variants.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientVariantsType.ShadingVariants3">
            <summary>
            Represnets third shading variants.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientVariantsType.ShadingVariants4">
            <summary>
            Represents fourth shading variants.
            </summary>
        </member>
        <member name="T:Spire.Xls.GradientColorType">
            <summary>
            Represents gradient color type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientColorType.OneColor">
            <summary>
            Represents one color gradient style.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientColorType.TwoColor">
            <summary>
            Represents two color gradinent style.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientColorType.Preset">
            <summary>
            Represents preset gradient style.
            </summary>
        </member>
        <member name="T:Spire.Xls.GradientTextureType">
            <summary>
            Represents gradient texture.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Newsprint">
            <summary>
            Represents Newsprint texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Recycled_Paper">
            <summary>
            Represents Recycled Paper texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Parchment">
            <summary>
            Represents Parchment texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Stationery">
            <summary>
            Represents Stationery texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.GreenMarble">
            <summary>
            Represents Green Marble texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.WhiteMarble">
            <summary>
            Represents White Marble texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.BrownMarble">
            <summary>
            Represents Brown Marble texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Granite">
            <summary>
            Represents Granite texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.BlueTissuePaper">
            <summary>
            Represents Blue Tissue Paper texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.PinkTissuePaper">
            <summary>
            Represents Pink Tissue Paper texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.PurpleMesh">
            <summary>
            Represents Purple Mesh texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Bouquet">
            <summary>
            Represents Bouquet texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Papyrus">
            <summary>
            Represents Papyrus texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Canvas">
            <summary>
            Represents Canvas texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Denim">
            <summary>
            Represents Denim texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.WovenMat">
            <summary>
            Represents Woven Mat texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.WaterDroplets">
            <summary>
            Represents Water Droplets texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.PaperBag">
            <summary>
            Represents Paper Bag texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.FishFossil">
            <summary>
            Represents Fish Fossil texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Sand">
            <summary>
            Represents Sand texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Cork">
            <summary>
            Represents Cork texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Walnut">
            <summary>
            Represents Walnut texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.Oak">
            <summary>
            Represents Oak texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.MediumWood">
            <summary>
            Represents Medium Wood texture type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientTextureType.UserDefined">
            <summary>
            Represents user defined texture type.
            </summary>
        </member>
        <member name="T:Spire.Xls.GradientPatternType">
            <summary>
            Represents excel gradient pattern.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat5Percent">
            <summary>
            Represents 5% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat10Percent">
            <summary>
            Represents 10% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat20Percent">
            <summary>
            Represents 20% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat25Percent">
            <summary>
            Represents 25% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat30Percent">
            <summary>
            Represents 30% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat40Percent">
            <summary>
            Represents 40% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat50Percent">
            <summary>
            Represents 50% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat60Percent">
            <summary>
            Represents 60% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat70Percent">
            <summary>
            Represents 70% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat75Percent">
            <summary>
            Represents 75% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat80Percent">
            <summary>
            Represents 80% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.Pat90Percent">
            <summary>
            Represents 90% gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDarkDownwardDiagonal">
            <summary>
            Represents Dark Downward Diagonal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDarkHorizontal">
            <summary>
            Represents Dark Horizontal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDarkUpwardDiagonal">
            <summary>
            Represents Dark Upward Diagonal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDarkVertical">
            <summary>
            Represents Dark Vertical gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDashedDownwardDiagonal">
            <summary>
            Represents Dashed Downward Diagonal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDashedHorizontal">
            <summary>
            Represents Dashed Horizontal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDashedUpwardDiagonal">
            <summary>
            Represents Dashed Upward Diagonal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDashedVertical">
            <summary>
            Represents Dashed Vertical gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDiagonalBrick">
            <summary>
            Represents Diagonal Brick gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDivot">
            <summary>
            Represents Divot gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDottedDiamond">
            <summary>
            Represents Dotted Diamond gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatDottedGrid">
            <summary>
            Represents Dotted Grid gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatHorizontalBrick">
            <summary>
            Represents Horizontal Brick gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatLargeCheckerBoard">
            <summary>
            Represents Large Checker Board gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatLargeConfetti">
            <summary>
            Represents Large Confetti gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatLargeGrid">
            <summary>
            Represents Large Grid gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatLightDownwardDiagonal">
            <summary>
            Represents Light Downward Diagonal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatLightHorizontal">
            <summary>
            Represents Light Horizontal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatLightUpwardDiagonal">
            <summary>
            Represents Light Upward Diagonal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatLightVertical">
            <summary>
            Represents Light Vertical gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatMixed">
            <summary>
            Represents Mixed gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatNarrowHorizontal">
            <summary>
            Represents Narrow Horizontal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatNarrowVertical">
            <summary>
            Represents Narrow Vertical gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatOutlinedDiamond">
            <summary>
            Represents Outlined Diamond gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatPlaid">
            <summary>
            Represents Plaid gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatShingle">
            <summary>
            Represents Shingle gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatSmallCheckerBoard">
            <summary>
            Represents Small Checker Board gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatSmallConfetti">
            <summary>
            Represents Small Confetti gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatSmallGrid">
            <summary>
            Represents Small Grid gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatSolidDiamond">
            <summary>
            Represents Solid Diamond gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatSphere">
            <summary>
            Represents Sphere gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatTrellis">
            <summary>
            Represents Trellis gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatWave">
            <summary>
            Represents Wave gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatWeave">
            <summary>
            Represents Weave gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatWideDownwardDiagonal">
            <summary>
            Represents Wide Downward Diagonal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatWideUpwardDiagonal">
            <summary>
            Represents Wide Upward Diagonal gradient pattern
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPatternType.PatZigZag">
            <summary>
            Represents Zig Zag gradient pattern
            </summary>
        </member>
        <member name="T:Spire.Xls.GradientPresetType">
            <summary>
            Represents preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradEarlySunset">
            <summary>
            Represents early sunset preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradLateSunset">
            <summary>
            Represents late sunset preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradNightfall">
            <summary>
            Represents nightfall preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradDaybreak">
            <summary>
            Represents daybreak preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradHorizon">
            <summary>
            Represents horizon preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradDesert">
            <summary>
            Represents desert preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradOcean">
            <summary>
            Represents ccean preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradCalmWater">
            <summary>
            Represents calm water preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradFire">
            <summary>
            Represents fire preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradFog">
            <summary>
            Represents fog preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradMoss">
            <summary>
            Represents moss preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradPeacock">
            <summary>
            Represents peacock preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradWheat">
            <summary>
            Represents wheat preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradParchment">
            <summary>
            Represents parchment preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradMahogany">
            <summary>
            Represents mahogany preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradRainbow">
            <summary>
            Represents rainbow preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradRainbow2">
            <summary>
            Represents rainbowII preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradGold">
            <summary>
            Represents gold preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradGold2">
            <summary>
            Represents goldII preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradBrass">
            <summary>
            Represents brass preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradChrome">
            <summary>
            Represents chrome preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradChrome2">
            <summary>
            Represents chromeII preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradSilver">
            <summary>
            Represents silver preset gradient type.
            </summary>
        </member>
        <member name="F:Spire.Xls.GradientPresetType.GradSapphire">
            <summary>
            Represents sapphire preset gradient type.
            </summary>
        </member>
        <member name="T:Spire.Xls.TickMarkType">
            <summary>
            Represents enum of chart tick mark values.
            </summary>
        </member>
        <member name="F:Spire.Xls.TickMarkType.TickMarkNone">
            <summary>
            Represents tick mark none.
            </summary>
        </member>
        <member name="F:Spire.Xls.TickMarkType.TickMarkInside">
            <summary>
            Represents tick mark inside.
            </summary>
        </member>
        <member name="F:Spire.Xls.TickMarkType.TickMarkOutside">
            <summary>
            Represents tick mark outside.
            </summary>
        </member>
        <member name="F:Spire.Xls.TickMarkType.TickMarkCross">
            <summary>
            Represents tick mark cross.
            </summary>
        </member>
        <member name="T:Spire.Xls.TickLabelPositionType">
            <summary>
            Represents enum of chart tick label position values.
            </summary>
        </member>
        <member name="F:Spire.Xls.TickLabelPositionType.TickLabelPositionNone">
            <summary>
            Represents none label position.
            </summary>
        </member>
        <member name="F:Spire.Xls.TickLabelPositionType.TickLabelPositionLow">
            <summary>
            Represents low label position.
            </summary>
        </member>
        <member name="F:Spire.Xls.TickLabelPositionType.TickLabelPositionHigh">
            <summary>
            Represents high label position.
            </summary>
        </member>
        <member name="F:Spire.Xls.TickLabelPositionType.TickLabelPositionNextToAxis">
            <summary>
            Represents nex to axis label position.
            </summary>
        </member>
        <member name="T:Spire.Xls.AutoFormatType">
            <summary>
            Represents auto format values.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Simple">
            <summary>
            Represents Simple auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Classic1">
            <summary>
            Represents Classic1 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Classic_2">
            <summary>
            Represents Classic2 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Classic_3">
            <summary>
            Represents Classic3 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Accounting1">
            <summary>
            Represents Accounting1 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Accounting2">
            <summary>
            Represents Accounting2 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Accounting3">
            <summary>
            Represents Accounting3 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Accounting4">
            <summary>
            Represents Accounting4 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Colorful1">
            <summary>
            Represents Colorful1 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Colorful2">
            <summary>
            Represents Colorful2 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Colorful3">
            <summary>
            Represents Colorful3 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.List1">
            <summary>
            Represents List1 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.List2">
            <summary>
            Represents List2 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.List3">
            <summary>
            Represents List3 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Effect3D1">
            <summary>
            Represents Effect3D1 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.Effect3D2">
            <summary>
            Represents Effect3D2 auto format.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatType.None">
            <summary>
            Represents None auto format.
            </summary>
        </member>
        <member name="T:Spire.Xls.AutoFormatOptions">
            <summary>
            Represents auto format options.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatOptions.Number">
            <summary>
            Represents number auto format option.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatOptions.Border">
            <summary>
            Represents border auto format option.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatOptions.Font">
            <summary>
            Represents font auto format option.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatOptions.Patterns">
            <summary>
            Represents patterns auto format option.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatOptions.Alignment">
            <summary>
            Represents alignment auto format option.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatOptions.Width_Height">
            <summary>
            Represents width\height auto format option.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatOptions.None">
            <summary>
            Represents none auto format option.
            </summary>
        </member>
        <member name="F:Spire.Xls.AutoFormatOptions.All">
            <summary>
            Represents all auto format option.
            </summary>
        </member>
        <member name="T:Spire.Xls.ErrorBarType">
            <summary>
            Error-bar type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ErrorBarType.Percentage">
            <summary>
            Represents the Percentage error-bar source type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ErrorBarType.Fixed">
            <summary>
            Represents the FixedValue error-bar source type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ErrorBarType.StandardDeviation">
            <summary>
            Represents the StandardDeviation error-bar source type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ErrorBarType.Custom">
            <summary>
            Represents the Custom error-bar source type.
            </summary>
        </member>
        <member name="F:Spire.Xls.ErrorBarType.StandardError">
            <summary>
            Represents the StandardError error-bar source type.
            </summary>
        </member>
        <member name="T:Spire.Xls.ErrorBarIncludeType">
            <summary>
            Represents error bar include values.
            </summary>
        </member>
        <member name="F:Spire.Xls.ErrorBarIncludeType.Both">
            <summary>
            Represents both error bar include.
            </summary>
        </member>
        <member name="F:Spire.Xls.ErrorBarIncludeType.Plus">
            <summary>
            Represents plus error bar include.
            </summary>
        </member>
        <member name="F:Spire.Xls.ErrorBarIncludeType.Minus">
            <summary>
            Represents minus error bar include.
            </summary>
        </member>
        <member name="T:Spire.Xls.TrendLineType">
            <summary>
            Represents trend line values.
            </summary>
        </member>
        <member name="F:Spire.Xls.TrendLineType.Exponential">
            <summary>
            Represents Exponential trend line type.
            </summary>
        </member>
        <member name="F:Spire.Xls.TrendLineType.Linear">
            <summary>
            Represents Linear trend line type.
            </summary>
        </member>
        <member name="F:Spire.Xls.TrendLineType.Logarithmic">
            <summary>
            Represents Logarithmic trend line type.
            </summary>
        </member>
        <member name="F:Spire.Xls.TrendLineType.Moving_Average">
            <summary>
            Represents Moving average trend line type.
            </summary>
        </member>
        <member name="F:Spire.Xls.TrendLineType.Polynomial">
            <summary>
            Represents Polynomial trend line type.
            </summary>
        </member>
        <member name="F:Spire.Xls.TrendLineType.Power">
            <summary>
            Represents Power trend line type.
            </summary>
        </member>
        <member name="T:Spire.Xls.CategoryType">
            <summary>
            Represents category type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CategoryType.Category">
            <summary>
            Represents Category category type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CategoryType.Time">
            <summary>
            Represents time category type.
            </summary>
        </member>
        <member name="F:Spire.Xls.CategoryType.Automatic">
            <summary>
            Represents automatic category type.
            </summary>
        </member>
        <member name="T:Spire.Xls.AxisTextDirectionType">
            <summary>
            Represents axis text direction.
            </summary>
        </member>
        <member name="F:Spire.Xls.AxisTextDirectionType.Context">
            <summary>
            Represents context text direction.
            </summary>
        </member>
        <member name="F:Spire.Xls.AxisTextDirectionType.LeftToRight">
            <summary>
            Represents Left-To-Right text direction.
            </summary>
        </member>
        <member name="F:Spire.Xls.AxisTextDirectionType.RightToLeft">
            <summary>
            Represents Right-To-Left text direction.
            </summary>
        </member>
        <member name="T:Spire.Xls.SheetProtectionType">
            <summary>
            Represents sheet protection flags enums.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.None">
            <summary>
            Not allows the user to do any thing on a protected worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.Objects">
            <summary>
            True to protect shapes.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.Scenarios">
            <summary>
            True to protect scenarios.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.FormattingCells">
            <summary>
            True allows the user to format any cell on a protected worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.FormattingColumns">
            <summary>
            True allows the user to format any column on a protected worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.FormattingRows">
            <summary>
            True allows the user to format any row on a protected.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.InsertingColumns">
            <summary>
            True allows the user to insert columns on the protected worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.InsertingRows">
            <summary>
            True allows the user to insert rows on the protected worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.InsertingHyperlinks">
            <summary>
            True allows the user to insert hyperlinks on the worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.DeletingColumns">
            <summary>
            True allows the user to delete columns on the protected worksheet,
            where every cell in the column to be deleted is unlocked.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.DeletingRows">
            <summary>
            True allows the user to delete rows on the protected worksheet,
            where every cell in the row to be deleted is unlocked.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.LockedCells">
            <summary>
            True allows the user to select locked cells on the protected worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.Sorting">
            <summary>
            True allows the user to sort on the protected worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.Filtering">
            <summary>
            True allows the user to set filters on the protected worksheet.
            Users can change filter criteria but can not enable or disable an auto filter.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.UsingPivotTables">
            <summary>
            True allows the user to use pivot table reports on the protected worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.UnLockedCells">
            <summary>
             True allows the user to select locked cells on the protected worksheet.
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.Content">
            <summary>
            Represents all flags
            </summary>
        </member>
        <member name="F:Spire.Xls.SheetProtectionType.All">
            <summary>
            Allows the user to do any thing on a protected worksheet.
            </summary>
        </member>
        <member name="T:Spire.Xls.ChartDisplayUnitType">
            <summary>
            Represents excel chart uint to display.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.None">
            <summary>
            Represents None display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.Hundreds">
            <summary>
            Represents Hundreds display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.Thousands">
            <summary>
            Represents Thousands display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.TenThousands">
            <summary>
            Represents TenThousands display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.HundredThousands">
            <summary>
            Represents HundredThousands display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.Millions">
            <summary>
            Represents Millions display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.TenMillions">
            <summary>
            Represents TenMillions display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.HundredMillions">
            <summary>
            Represents HundredMillions display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.ThousandMillions">
            <summary>
            Represents ThousandMillions display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.MillionMillions">
            <summary>
            Represents MillionMillions display Unit
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartDisplayUnitType.Custom">
            <summary>
            Represents Custom display Unit
            </summary>
        </member>
        <member name="T:Spire.Xls.ChartBaseUnitType">
            <summary>
            Represents chart base unit.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartBaseUnitType.Day">
            <summary>
            Represents Day base unit.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartBaseUnitType.Month">
            <summary>
            Represents Month base unit.
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartBaseUnitType.Year">
            <summary>
            Represents Year base unit.
            </summary>
        </member>
        <member name="T:Spire.Xls.DataLabelPositionType">
            <summary>
            Represents Data label placement.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.Automatic">
            <summary>
            Represents default position.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.Outside">
            <summary>
            Represents the Outside data label placement option.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.Inside">
            <summary>
            Represents the Inside data label placement option.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.Center">
            <summary>
            Represents the Center data label placement option.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.OutsideBase">
            <summary>
            Represents the OutsideBase data label placement option.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.Above">
            <summary>
            Represents the Above data label placement option.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.Below">
            <summary>
            Represents the Below data label placement option.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.Left">
            <summary>
            Represents the Left data label placement option.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.Right">
            <summary>
            Represents the Right data label placement option.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.BestFit">
            <summary>
            Represents the BestFit data label placement option.
            </summary>
        </member>
        <member name="F:Spire.Xls.DataLabelPositionType.Moved">
            <summary>
            Represents the Moved data label placement option.
            </summary>
        </member>
        <member name="T:Spire.Xls.IgnoreErrorType">
            <summary>
            Represents flags of excel ignore error indicator.
            </summary>
        </member>
        <member name="F:Spire.Xls.IgnoreErrorType.None">
            <summary>
            Represents None flag of excel ignore error indicator.
            </summary>
        </member>
        <member name="F:Spire.Xls.IgnoreErrorType.EvaluateToError">
            <summary>
            Represents EvaluateToError flag of excel ignore error indicator.
            </summary>
        </member>
        <member name="F:Spire.Xls.IgnoreErrorType.EmptyCellReferences">
            <summary>
            Represents EmptyCellReferences flag of excel ignore error indicator.
            </summary>
        </member>
        <member name="F:Spire.Xls.IgnoreErrorType.NumberAsText">
            <summary>
            Represents NumberAsText flag of excel ignore error indicator.
            </summary>
        </member>
        <member name="F:Spire.Xls.IgnoreErrorType.OmittedCells">
            <summary>
            Represents OmittedCells flag of excel ignore error indicator.
            </summary>
        </member>
        <member name="F:Spire.Xls.IgnoreErrorType.InconsistentFormula">
            <summary>
            Represents InconsistentFormula flag of excel ignore error indicator.
            </summary>
        </member>
        <member name="F:Spire.Xls.IgnoreErrorType.TextDate">
            <summary>
            Represents TextDate flag of excel ignore error indicator.
            </summary>
        </member>
        <member name="F:Spire.Xls.IgnoreErrorType.UnlockedFormulaCells">
            <summary>
            Represents UnlockedFormulaCells flag of excel ignore error indicator.
            </summary>
        </member>
        <member name="F:Spire.Xls.IgnoreErrorType.All">
            <summary>
            Represents All flag of excel ignore error indicator.
            </summary>
        </member>
        <member name="T:Spire.Xls.EncryptionType">
            <summary>
            Represents encryption algrorithm that will be used for encryption.
            </summary>
        </member>
        <member name="F:Spire.Xls.EncryptionType.None">
            <summary>
            No encryption.
            </summary>
        </member>
        <member name="F:Spire.Xls.EncryptionType.Standard">
            <summary>
            Standard encryption.
            </summary>
        </member>
        <member name="T:Spire.Xls.FileFormat">
            <summary>
            Represents possible excel versions.
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.Xlsb2007">
            <summary>
            Represents excel version 2007 xlsb
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.Xlsb2010">
            <summary>
            Represents excel version 2010 xlsb
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.ODS">
            <summary>
            OpenOffice Spreadsheet documents
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.CSV">
            <summary>
            CSV file.
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.XML">
            <summary>
            Xml file
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.PDF">
            <summary>
            PDF file
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.Bitmap">
            <summary>
            Bitmap file
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.XPS">
            <summary>
            XPS file
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.PostScript">
            <summary>
            PostScript file
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.Version97to2003">
            <summary>
            Represents excel version 97-2003.
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.Version2007">
            <summary>
            Represents excel version 2007.
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.Version2010">
            <summary>
            Represents excel version 2010.
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.Version2013">
            <summary>
            Represents excel version 2013.
            </summary>
        </member>
        <member name="F:Spire.Xls.FileFormat.Version2016">
            <summary>
            Represents excel version 2016.
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelVersion">
            <summary>
            Represents possible excel versions.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelVersion.Xlsb2007">
            <summary>
            Represents excel version 2007 xlsb
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelVersion.Xlsb2010">
            <summary>
            Represents excel version 2010 xlsb
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelVersion.ODS">
            <summary>
            OpenOffice Spreadsheet documents
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelVersion.Version97to2003">
            <summary>
            Represents excel version 97-2003.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelVersion.Version2007">
            <summary>
            Represents excel version 2007
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelVersion.Version2013">
            <summary>
            Represents excel version 2013.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelVersion.Version2016">
            <summary>
            Represents excel version 2016.
            </summary>
        </member>
        <member name="T:Spire.Xls.FontVertialAlignmentType">
            <summary>
            Defines the possible settings for vertical alignment of a run of text.
            This is used to get superscript or subscript text without altering the
            font size properties of the rest of the text run.
            </summary>
        </member>
        <member name="F:Spire.Xls.FontVertialAlignmentType.Baseline">
            <summary>
            Returns the text in this run to the baseline, default,
            alignment, and returns it to the original font size.
            </summary>
        </member>
        <member name="F:Spire.Xls.FontVertialAlignmentType.Superscript">
            <summary>
            Specifies that this text should be superscript. Raises the text in this
            run above the baseline and changes it to a smaller size, if a smaller
            size is available.
            </summary>
        </member>
        <member name="F:Spire.Xls.FontVertialAlignmentType.Subscript">
            <summary>
            Specifies that this text should be subscript. Lowers the text in this
            run below the baseline and changes it to a smaller size, if a smaller
            size is available.
            </summary>
        </member>
        <member name="T:Spire.Xls.CheckState">
            <summary>
            Specifies check state of the check box.
            </summary>
        </member>
        <member name="F:Spire.Xls.CheckState.Unchecked">
            <summary>
            Indicates that checkbox is unchecked.
            </summary>
        </member>
        <member name="F:Spire.Xls.CheckState.Checked">
            <summary>
            Indicates that checkbox is checked.
            </summary>
        </member>
        <member name="F:Spire.Xls.CheckState.Mixed">
            <summary>
            Mixed state.
            </summary>
        </member>
        <member name="T:Spire.Xls.ImageType">
            <summary>
            Possible image types for image conversion.
            </summary>
        </member>
        <member name="F:Spire.Xls.ImageType.Bitmap">
            <summary>
            Bitmap image.
            </summary>
        </member>
        <member name="F:Spire.Xls.ImageType.Metafile">
            <summary>
            Metafile image.
            </summary>
        </member>
        <member name="T:Spire.Xls.ExpandCollapseFlags">
            <summary>
            Flags for expand/collapse settings.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExpandCollapseFlags.Default">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExpandCollapseFlags.IncludeSubgroups">
            <summary>
            Indicates whether subgroups must be included into operation.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExpandCollapseFlags.ExpandParent">
            <summary>
            Indicates whether we have to expand parent group when expanding child (to make it visible).
            </summary>
        </member>
        <member name="T:Spire.Xls.BuiltInStyles">
            <summary>
            Specifies existing built-in styles for Excel 2007.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Normal">
            <summary>
            Indicates Normal style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Comma">
            <summary>
            Indicates Comma style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Currency">
            <summary>
            Indicates Currency style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Percent">
            <summary>
            Indicates Percent style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Comma0">
            <summary>
            Indicates Comma[0] style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Currency0">
            <summary>
            Indicates Currency[0] style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Note">
            <summary>
            Indicates Note style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.WarningText">
            <summary>
            Indicates Warning Text style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Title">
            <summary>
            Indicates Title style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Heading1">
            <summary>
            Indicates Heading 1 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Heading2">
            <summary>
            Indicates Heading 2 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Heading3">
            <summary>
            Indicates Heading 3 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Heading4">
            <summary>
            Indicates Heading 4 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Input">
            <summary>
            Indicates Input style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Output">
            <summary>
            Indicates Output style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Calculation">
            <summary>
            Indicates Calculation style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.CheckCell">
            <summary>
            Indicates Check Cell style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.LinkedCell">
            <summary>
            Indicates Linked Cell style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Total">
            <summary>
            Indicates Total style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Good">
            <summary>
            Indicates Good style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Bad">
            <summary>
            Indicates Bad style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Neutral">
            <summary>
            Indicates Neutral style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent1">
            <summary>
            Indicates Accent1 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent1_20">
            <summary>
            Indicates 20% - Accent1 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent1_40">
            <summary>
            Indicates 40% - Accent1 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent1_60">
            <summary>
            Indicates 60% - Accent1 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent2">
            <summary>
            Indicates Accent2 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent2_20">
            <summary>
            Indicates 20% - Accent2 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent2_40">
            <summary>
            Indicates 40% - Accent2 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent2_60">
            <summary>
            Indicates 60% - Accent2 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent3">
            <summary>
            Indicates Accent3 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent3_20">
            <summary>
            Indicates 20% - Accent3 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent3_40">
            <summary>
            Indicates 40% - Accent3 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent3_60">
            <summary>
            Indicates 60% - Accent3 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent4">
            <summary>
            Indicates Accent4 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent4_20">
            <summary>
            Indicates 20% - Accent4 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent4_40">
            <summary>
            Indicates 40% - Accent4 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent4_60">
            <summary>
            Indicates 60% - Accent4 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent5">
            <summary>
            Indicates Accent5 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent5_20">
            <summary>
            Indicates 20% - Accent5 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent5_40">
            <summary>
            Indicates 40% - Accent5 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent5_60">
            <summary>
            Indicates 60% - Accent5 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent6">
            <summary>
            Indicates Accent6 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent6_20">
            <summary>
            Indicates 20% - Accent6 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent6_40">
            <summary>
            Indicates 40% - Accent6 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.Accent6_60">
            <summary>
            Indicates 60% - Accent6 style.
            </summary>
        </member>
        <member name="F:Spire.Xls.BuiltInStyles.ExplanatoryText">
            <summary>
            Indicates Explanatory Text style.
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelComboType">
            <summary>
            Represents possible combo box type values..
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelComboType.Regular">
            <summary>
            Regular sheet dropdown control.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelComboType.PivotTablePageField">
            <summary>
            PivotTable page field dropdown.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelComboType.AutoFilter">
            <summary>
            AutoFilter dropdown.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelComboType.AutoComplete">
            <summary>
            AutoComplete dropdown.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelComboType.DataValidation">
            <summary>
            Data validation list dropdown.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelComboType.PivotTableRowOrColumn">
            <summary>
            PivotTable row or column field dropdown.
            </summary>
        </member>
        <member name="F:Spire.Xls.ExcelComboType.TableTotalRow">
            <summary>
            Dropdown for the Total Row of a table.
            </summary>
        </member>
        <member name="T:Spire.Xls.UnknownVariableAction">
            <summary>
            Defines action that must be taken when meeting unknown variable during template markers processing.
            </summary>
        </member>
        <member name="F:Spire.Xls.UnknownVariableAction.Exception">
            <summary>
            Throws exception if no variable is defined.
            </summary>
        </member>
        <member name="F:Spire.Xls.UnknownVariableAction.Skip">
            <summary>
            Skips processing variable and leaves it in the document.
            </summary>
        </member>
        <member name="F:Spire.Xls.UnknownVariableAction.ReplaceBlank">
            <summary>
            Replaces variable with empty string.
            </summary>
        </member>
        <member name="T:Spire.Xls.XLSXBorderJoinType">
            <summary>
            shape border join type 
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXBorderJoinType.Round">
            <summary>
            Rounded edge
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXBorderJoinType.Bevel">
            <summary>
            Beveled edge
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXBorderJoinType.Mitter">
            <summary>
            Metter join 
            </summary>
        </member>
        <member name="T:Spire.Xls.ChartParagraphType">
            <summary>
            MS Chart Font Type
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartParagraphType.None">
            <summary>
            No Font Tag
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartParagraphType.Default">
            <summary>
            Default Property tag
            </summary>
        </member>
        <member name="F:Spire.Xls.ChartParagraphType.RichText">
            <summary>
            Rich text tag
            </summary>
        </member>
        <member name="T:Spire.Xls.VariableTypeAction">
            <summary>
            Defines value type and numberformat in the 
            template marker variable.
            </summary>
        </member>
        <member name="F:Spire.Xls.VariableTypeAction.DetectDataType">
            <summary>
            Detects the DataType of the marker variable.
            </summary>
        </member>
        <member name="F:Spire.Xls.VariableTypeAction.DetectNumberFormat">
            <summary>
            Detects both the NumberFormat and DataType of the marker variable.
            </summary>
        </member>
        <member name="F:Spire.Xls.VariableTypeAction.None">
            <summary>
            Represents the None Action.
            </summary>
        </member>
        <member name="T:Spire.Xls.SortOrientationType">
            <summary>
            Represents the sort orientation.
            </summary>
        </member>
        <member name="F:Spire.Xls.SortOrientationType.TopToBottom">
            <summary>
            Sorts from top to Bottom.
            </summary>
        </member>
        <member name="F:Spire.Xls.SortOrientationType.LeftToRight">
            <summary>
            Sorts from Left to Right.
            </summary>
        </member>
        <member name="T:Spire.Xls.SortComparsionType">
            <summary>
            Represents the sort by in the range.
            </summary>
        </member>
        <member name="F:Spire.Xls.SortComparsionType.Values">
            <summary>
            Sort based on values in the cell.
            </summary>
        </member>
        <member name="F:Spire.Xls.SortComparsionType.BackgroundColor">
            <summary>
            Sort based on the cell back color.
            </summary>
        </member>
        <member name="F:Spire.Xls.SortComparsionType.FontColor">
            <summary>
            Sort based on the font color.
            </summary>
        </member>
        <member name="T:Spire.Xls.SortedWayType">
            <summary>
            Represents the algorithm to sort.
            </summary>
        </member>
        <member name="F:Spire.Xls.SortedWayType.QuickSort">
            <summary>
            Represents the Quick sort rule.
            </summary>
        </member>
        <member name="F:Spire.Xls.SortedWayType.HeapSort">
            <summary>
            Represents the Heap sort rule.
            </summary>
        </member>
        <member name="F:Spire.Xls.SortedWayType.InsertionSort">
            <summary>
            Represents the Insertion sort rule.
            </summary>
        </member>
        <member name="T:Spire.Xls.OrderBy">
            <summary>
            Represents the sort order.
            </summary>
        </member>
        <member name="F:Spire.Xls.OrderBy.Ascending">
            <summary>
            Represent the ascending sort.
            </summary>
        </member>
        <member name="F:Spire.Xls.OrderBy.Descending">
            <summary>
            Represent the descending sort.
            </summary>
        </member>
        <member name="F:Spire.Xls.OrderBy.Top">
            <summary>
            Represents the position value in the sort list
            </summary>
        </member>
        <member name="F:Spire.Xls.OrderBy.Bottom">
            <summary>
            Represents the position of value in the sort list.
            </summary>
        </member>
        <member name="T:Spire.Xls.CellPropertyExtensionType">
            <summary>
            Represents the extension property data.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.ForeColor">
            <summary>
            Cell interior foreground color.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.BackColor">
            <summary>
            Cell interior background color.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.GradientFill">
            <summary>
            Cell interior gradient fill.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.TopBorderColor">
            <summary>
            Top cell border color.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.BottomBorderColor">
            <summary>
            Bottom cell border color.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.LeftBorderColor">
            <summary>
            Left cell border color.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.RightBorderColor">
            <summary>
            Right cell border color.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.DiagonalCellBorder">
            <summary>
            Diagonal cell border color.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.TextColor">
            <summary>
            Cell text color.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.FontScheme">
            <summary>
            Font Scheme
            </summary>
        </member>
        <member name="F:Spire.Xls.CellPropertyExtensionType.TextIndentationLevel">
            <summary>
            The text indentation level.
            </summary>
        </member>
        <member name="T:Spire.Xls.FontScheme">
            <summary>
            Font Scheme.
            </summary>
        </member>
        <member name="F:Spire.Xls.FontScheme.None">
            <summary>
            No font scheme.
            </summary>
        </member>
        <member name="F:Spire.Xls.FontScheme.MajorScheme">
            <summary>
            Major scheme.
            </summary>
        </member>
        <member name="F:Spire.Xls.FontScheme.MinorScheme">
            <summary>
            Minor scheme.
            </summary>
        </member>
        <member name="F:Spire.Xls.FontScheme.Niched">
            <summary>
            Ninched state.
            </summary>
        </member>
        <member name="T:Spire.Xls.LayoutMode">
            <summary>
            layout mode
            </summary>
        </member>
        <member name="F:Spire.Xls.LayoutMode.Edge">
            <summary>
            Edge.
            </summary>
        </member>
        <member name="F:Spire.Xls.LayoutMode.Factor">
            <summary>
            Factor.
            </summary>
        </member>
        <member name="T:Spire.Xls.ResizeBehaveType">
            <summary>
            Represents The ResizeBehave mode. 
            </summary>
        </member>
        <member name="F:Spire.Xls.ResizeBehaveType.FreeFloating">
            <summary>
            Don't move or resize with underlying rows/columns.
            </summary>
        </member>
        <member name="F:Spire.Xls.ResizeBehaveType.MoveNotResize">
            <summary>
            Move with cells but do not resize.
            </summary>
        </member>
        <member name="F:Spire.Xls.ResizeBehaveType.MoveAndResize">
            <summary>
            Move and resize with anchor cells.
            </summary>
        </member>
        <member name="T:Spire.Xls.XLSXChartShadowOuterType">
            <summary>
            Indicates the Outer Shadow values
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.None">
            <summary>
            Represents No shadow
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.OffsetRight">
            <summary>
            Represents Outer shadow at Right
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.OffsetDiagonalBottomRight">
            <summary>
            Represents Outer shadow at DiagonalBottomRight
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.OffsetBottom">
            <summary>
            Represents Outer shadow at Bottom
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.OffsetDiagonalTopLeft">
            <summary>
            Represents Outer shadow at DiagonalTopLeft
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.OffsetCenter">
            <summary>
            Represents Outer shadow at Center
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.OffsetTop">
            <summary>
            Represents Outer shadow at Top
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.OffsetLeft">
            <summary>
            Represents Outer shadow at Left
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.OffsetDiagonalTopRight">
            <summary>
            Represents Outer shadow at DiagonalTopRight
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowOuterType.OffsetDiagonalBottomLeft">
            <summary>
            Represents Outer shadow at DiagonalBottomLeft
            </summary>
        </member>
        <member name="T:Spire.Xls.XLSXChartShadowInnerType">
            <summary>
            Indicates the Inner Shadow Values
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.None">
            <summary>
            Represents No shadow.
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.InsideDiagonalBottomLeft">
            <summary>
            Represents Inner Shadow at Diagonal Bottom Left
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.InsideTop">
            <summary>
            Represents Inner Shadow at Top
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.InsideRight">
            <summary>
            Represents Inner Shadow at Right
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.InsideLeft">
            <summary>
            Represents Inner Shadow at Left
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.InsideDiagonalTopRight">
            <summary>
            Represents Inner Shadow at TopRight
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.InsideDiagonalBottomRight">
            <summary>
            Represents Inner Shadow at Diagonal Bottom Right
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.InsideCenter">
            <summary>
            Represents Inner Shadow at Center
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.InsideBottom">
            <summary>
            Represents Inner Shadow at Bottom
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartShadowInnerType.InsideDiagonalTopLeft">
            <summary>
            Represents Inner Shadow at Diagonal Top left
            </summary>
        </member>
        <member name="T:Spire.Xls.XLSXChartPrespectiveType">
            <summary>
            Indicates the Perspective shadow Values
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartPrespectiveType.None">
            <summary>
            Represents the No Shadow
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartPrespectiveType.DiagonalUpperRight">
            <summary>
            Represents Perspective Shadow at Diagonal Upper Right
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartPrespectiveType.DiagonalLowerRight">
            <summary>
            Represents Perspective Shadow at Diagonal Lower Right
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartPrespectiveType.DiagonalUpperLeft">
            <summary>
            Represents Perspective Shadow at Diagonal Upper Left
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartPrespectiveType.DiagonalLowerLeft">
            <summary>
            Represents Perspective Shadow at Diagonal Lower Left
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartPrespectiveType.Below">
            <summary>
            Represents Perspective Shadow at Below
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.None">
            <summary>
            No bevel
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.Angle">
            <summary>
            Represents Angle 
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.ArtDeco">
            <summary>
            Represents Art Deco
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.Circle">
            <summary>
            Represents Circle
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.Convex">
            <summary>
            Represents Convex
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.CoolSlant">
            <summary>
            Represents Cool Slant
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.Cross">
            <summary>
            Represents Cross
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.Divot">
            <summary>
            Represents Divot
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.HardEdge">
            <summary>
            Represents Hard Edge
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.RelaxedInset">
            <summary>
            Represents Relaxed Inset
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.Riblet">
            <summary>
            Represents Riblet
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.Slope">
            <summary>
            Represents Slope
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartBevelType.SoftRound">
            <summary>
            Represents Soft round
            </summary>
        </member>
        <member name="T:Spire.Xls.XLSXChartMaterialType">
            <summary>
            Indicates the Material property values fro the chart
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.None">
            <summary>
            Represents No Material Effect
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.Matte">
            <summary>
            Represents Matte Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.WarmMatte">
            <summary>
            Represents WarmMatte Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.Plastic">
            <summary>
            Represents Plastic Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.Metal">
            <summary>
            Represents Metal Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.DarkEdge">
            <summary>
            Represents Dark Edge Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.SoftEdge">
            <summary>
            Represents Soft Edge Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.Flat">
            <summary>
            Represents Flat Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.WireFrame">
            <summary>
            Represents Wire Frame Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.Powder">
            <summary>
            Represents Powder Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.TranslucentPowder">
            <summary>
            Represents Translucent Powder Material
            </summary>
        </member>
        <member name="F:Spire.Xls.XLSXChartMaterialType.Clear">
            <summary>
            Represents Clear Material
            </summary>
        </member>
        <member name="T:Spire.Xls.OleObjectType">
            <summary>
            defines the types of OLE object
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.None">
            <summary>
            Type is not defined
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.AdobeAcrobatDocument">
            <summary>
            Adobe Acrobat Document. 
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.Bitmap">
            <summary>
            Bitmap Image.
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.MediaClip">
            <summary>
            Media Clip
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.Equation">
            <summary>
            Equation
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.GraphChart">
            <summary>
            Graph Chart
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.Excel97to2003Worksheet">
            <summary>
            Excel 97-2003 Worksheet. 
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.ExcelBinaryWorksheet">
            <summary>
            Excel Binary Worksheet. 
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.ExcelChart">
            <summary>
            Excel chart. 
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.ExcelMacroWorksheet">
            <summary>   
            Excel Macro-Enabled Worksheet. 
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.ExcelWorksheet">
            <summary>
            Excel Worksheet. 
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.PowerPoint97to2003Presentation">
            <summary>
            PowerPoint 97-2003 Presentation.
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.PowerPoint_97_2003_Slide">
            <summary>
            PowerPoint 97-2003 Slide. 
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.PowerPointMacroPresentation">
            <summary>
            PowerPoint Macro-Enabled Presentation.
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.PowerPointMacroSlide">
            <summary>
            PowerPoint Macro-Enabled Slide.
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.PowerPointPresentation">
            <summary>
            PowerPoint Presentation. 
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.PowerPointSlide">
            <summary>
            PowerPoint Slide.
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.Word97to2003Document">
            <summary>
            Word 97-2003 Document.
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.WordDocument">
            <summary>
            Word Document.
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.WordMacroDocument">
            <summary>
            Word Macro-Enabled Document. 
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.VisioDrawing">
            <summary>
            Visio Deawing
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.MIDISequence">
            <summary>
            MIDI Sequence
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.OpenDocumentPresentation">
            <summary>
            OpenDocument Presentation
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.OpenDocumentSpreadsheet">
            <summary>
            OpenDocument Spreadsheet
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.OpenDocumentText">
            <summary>
            OpenDocument Text
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.OpenOfficeSpreadsheet1_1">
            <summary>
            OpenOffice.org 1.1 Spreadsheet
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.OpenOfficeText_1_1">
            <summary>
            OpenOffice.org 1.1 Text
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.Package">
            <summary>
            Package
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.VideoClip">
            <summary>
            Video Clip
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.WaveSound">
            <summary>
            Wave Sound
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.WordPadDocument">
            <summary>
            WordPad Document
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.OpenOfficeSpreadsheet">
            <summary>
            OpenOffice spreadsheet
            </summary>
        </member>
        <member name="F:Spire.Xls.OleObjectType.OpenOfficeText">
            <summary>
            OpenOffice Text
            </summary>
        </member>
        <member name="T:Spire.Xls.SparklineType">
            <summary>
            Defined types of Sparkline chart types.
            </summary>
        </member>
        <member name="F:Spire.Xls.SparklineType.Stacked">
            <summary>
            Sparkline type is WinLoss.
            </summary>
        </member>
        <member name="F:Spire.Xls.SparklineType.Column">
            <summary>
            Sparkline type is Column.
            </summary>
        </member>
        <member name="F:Spire.Xls.SparklineType.Line">
            <summary>
            Sparkline type is Line.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartFormatCollection.Item(System.Int32)">
            <summary>
            Gets chart format.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartCategoryAxis.CategoryLabels">
            <summary>
            Category labels for the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartCategoryAxis.Font">
            <summary>
            Gets font used for axis text displaying.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartCategoryAxis.TitleArea">
            <summary>
            Returns text area for the axis title. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartCategoryAxis.MajorGridLines">
            <summary>
            Returns a ChartGridLine object that represents the major gridlines for the specified axis. Only axes in the primary axis group can have gridlines
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartCategoryAxis.MinorGridLines">
            <summary>
            Returns a ChartGridLine object that represents the minor gridlines for the specified axis. Only axes in the primary axis group can have gridlines.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartDataLabels.Format">
            <summary>
            Gets data format. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartDataLabels.TextArea">
            <summary>
            Gets or sets text area.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartDataPoint.DataFormat">
            <summary>
            Gets data format. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartDataPoint.DataLabels">
            <summary>
            Gets data labels object for the data point. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartDataPointsCollection.DefaultDataPoint">
            <summary>
            Returns default data point. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartDataPointsCollection.DefaultPointFormat">
            <summary>
            Gets default data format .
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartDataPointsCollection.Item(System.Int32)">
            <summary>
            Gets chart point.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartFormat.DataFormatOrNull">
            <summary>
            Returns dataformat or null; Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartFormat.FirstDropBar">
            <summary>
            Gets first drop bar.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartFormat.PieSeriesLine">
            <summary>
            Represents series line properties. ( For pie of pie or pie of bar chart types only. ) Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartFormat.SecondDropBar">
            <summary>
            Returns object that represents second drop bar.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartArea.Border">
            <summary>
            Represents chart border. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartArea.Interior">
            <summary>
            Represents chart interior. Read only
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartGridLine.Border">
            <summary>
            Gets line border. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartLegend.TextArea">
            <summary>
            Return text area of legend.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartLegend.LegendEntries">
            <summary>
            Represents legend entries collection. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartLegendEntry.TextArea">
            <summary>
            Returns text area. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartPlotArea.Interior">
            <summary>
            Represents frame interior. Read only
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSerie.DataPoints">
            <summary>
            Returns data points collection for the chart series. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSerie.CategoryLabels">
            <summary>
            Category labels for the series.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSerie.Bubbles">
            <summary>
            Bubble sizes for the series.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSerie.Values">
            <summary>
            Values range for the series.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSerie.Format">
            <summary>
            Returns serie format.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSerie.DataFormat">
            <summary>
            Returns data format. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSerieDataFormat.AreaProperties">
            <summary>
            Returns object, that represents aera properties. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSerieDataFormat.LineProperties">
            <summary>
            Returns object, that represents line properties. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSeries.Item(System.Int32)">
            <summary>
            Returns a single Name object from a Names collection.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSeries.Item(System.String)">
            <summary>
            Returns a single Name object from a Names collection.
            </summary>
        </member>
        <member name="M:Spire.Xls.Charts.ChartSeriesAxis.SetTitle(Spire.Xls.Charts.ChartTextArea)">
            <summary>
            Sets axis title.
            </summary>
            <param name="text">Title to set.</param>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSeriesAxis.Font">
            <summary>
            Returns font used for axis text displaying. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSeriesAxis.MajorGridLines">
            <summary>
            Returns major gridLines. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSeriesAxis.MinorGridLines">
            <summary>
            Returns minor gridLines. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartSeriesAxis.TitleArea">
            <summary>
            Returns text area for the axis title. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Xls.Charts.ChartValueAxis.SetTitle(Spire.Xls.Charts.ChartTextArea)">
            <summary>
            Sets axis title.
            </summary>
            <param name="text">Title to set.</param>
        </member>
        <member name="P:Spire.Xls.Charts.ChartValueAxis.Font">
            <summary>
            Returns font used for axis text displaying. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartValueAxis.MajorGridLines">
            <summary>
            Returns major gridLines. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartValueAxis.MinorGridLines">
            <summary>
            Returns minor gridLines. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartValueAxis.TitleArea">
            <summary>
            Returns text area for the axis title. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartWallOrFloor.Border">
            <summary>
            Gets line border. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartWallOrFloor.Interior">
            <summary>
            Represents chart interior.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartWrappedFrameFormat.Border">
            <summary>
            Represents chart border. Read only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Charts.ChartWrappedFrameFormat.Interior">
            <summary>
            Represents frame interior. Read only
            </summary>
        </member>
        <member name="T:Spire.Xls.OColor">
            <summary>
            This object used to store, convert colors.
            </summary>
        </member>
        <member name="P:Spire.Xls.OColor.Value">
            <summary>
            Returns color value (it can be index, rgb color, etc.)
            </summary>
        </member>
        <member name="P:Spire.Xls.OColor.Tint">
            <summary>
            Gets or sets Tint.
            </summary>
        </member>
        <member name="M:Spire.Xls.OColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes new instance of the color object.
            </summary>
            <param name="color">Color value to initialize.</param>
        </member>
        <member name="M:Spire.Xls.OColor.#ctor(Spire.Xls.ExcelColors)">
            <summary>
            Initializes new instance of the color object.
            </summary>
            <param name="color">Color value to initialize.</param>
        </member>
        <member name="P:Spire.Xls.OColor.ColorType">
            <summary>
            Returns type of the stored color.
            </summary>
        </member>
        <member name="M:Spire.Xls.OColor.GetKnownColor(Spire.Xls.Workbook)">
            <summary>
            Get excel color for other color type.
            </summary>
            <param name="book">Workbook object</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.OColor.SetKnownColor(Spire.Xls.ExcelColors)">
            <summary>
            Sets known color.
            </summary>
            <param name="value">Excel color to set.</param>
        </member>
        <member name="M:Spire.Xls.OColor.SetRGBColor(System.Drawing.Color,Spire.Xls.Core.IWorkbook)">
            <summary>
            Sets RGB color value.
            </summary>
            <param name="value">Value to set.</param>
            <param name="book">Parent workbook.</param>
        </member>
        <member name="M:Spire.Xls.OColor.op_Implicit(System.Drawing.Color)~Spire.Xls.OColor">
            <summary>
            Conversion operator.
            </summary>
            <param name="color">Value to convert.</param>
            <returns>Converted item.</returns>
        </member>
        <member name="M:Spire.Xls.OColor.op_Equality(Spire.Xls.OColor,Spire.Xls.OColor)">
            <summary>
            Checks whether two instance have the same data.
            </summary>
            <param name="first">First color object.</param>
            <param name="second">Second color object.</param>
            <returns>True if they have the same data.</returns>
        </member>
        <member name="M:Spire.Xls.OColor.op_Inequality(Spire.Xls.OColor,Spire.Xls.OColor)">
            <summary>
            Checks whether two instances have different data.
            </summary>
            <param name="first">First color object.</param>
            <param name="second">Second color object.</param>
            <returns>True if they have different data.</returns>
        </member>
        <member name="M:Spire.Xls.OColor.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Spire.Xls.OColor.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the current Object.
            </summary>
            <param name="obj">The Object to compare with the current Object.</param>
            <returns>true if the specified Object is equal to the current Object; otherwise, false.</returns>
        </member>
        <member name="T:Spire.Xls.ColorType">
            <summary>
            Color types.
            </summary>
        </member>
        <member name="F:Spire.Xls.ColorType.Known">
            <summary>
            Known color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ColorType.RGB">
            <summary>
            RGB color.
            </summary>
        </member>
        <member name="F:Spire.Xls.ColorType.Theme">
            <summary>
             Theme color.
             </summary>
        </member>
        <member name="T:Spire.Xls.ChartShadow">
            <summary>
            Represents chart shadow object
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartShadow.ShadowOuterType">
            <summary>
            Gets or sets the shadow outer type.
            </summary>
            <value>The shadow outer presets.</value>
        </member>
        <member name="P:Spire.Xls.ChartShadow.ShadowInnerType">
            <summary>
            Gets or sets the shadow inner type.
            </summary>
            <value>The shadow inner presets.</value>
        </member>
        <member name="P:Spire.Xls.ChartShadow.HasCustomStyle">
            <summary>
            Gets or sets a value indicating whether this instance has custom shadow style.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartShadow.ShadowPrespectiveType">
            <summary>
            Gets or sets the shadow prespective type.
            </summary>
            <value>The shadow prespective presets.</value>
        </member>
        <member name="P:Spire.Xls.ChartShadow.Transparency">
            <summary>
            Gets or sets the transparency.
            </summary>
            <value>The transparency.</value>
        </member>
        <member name="P:Spire.Xls.ChartShadow.Size">
            <summary>
            Gets or sets the size of Shadow.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Xls.ChartShadow.Blur">
            <summary>
            Gets or sets the blur.
            </summary>
            <value>The blur.</value>
        </member>
        <member name="P:Spire.Xls.ChartShadow.Angle">
            <summary>
            Gets or sets the angle..
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartShadow.Color">
            <summary>
            Gets or sets the color of shaow.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartShadow.Distance">
            <summary>
            Gets or sets the distance of Shadow.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartShadow.SoftEdge">
            <summary>
            Gets or sets the radio of soft edge.
            </summary>
        </member>
        <member name="T:Spire.Xls.Sparkline">
            <summary>
            A sparkline represents a tiny chart or graphic in a worksheet cell that provides a visual representation of data. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Sparkline.DataRange">
            <summary>
            Represents the data range of the sparkline.
            </summary>
        </member>
        <member name="P:Spire.Xls.Sparkline.RefRange">
            <summary>
            Represents the reference range of the sparkline.
            </summary>
        </member>
        <member name="P:Spire.Xls.Sparkline.Column">
            <summary>
            Gets the column index of a sparkline.
            </summary>
        </member>
        <member name="P:Spire.Xls.Sparkline.Row">
            <summary>
            Gets the row index of a sparkline.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.ShowHorizontalAxis">
            <summary>
            Indicates whether to show the sparkline horizontal axis. The horizontal axis appears if the sparkline has data that crosses the zero axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.IsDisplayHidden">
            <summary>
            Indicates whether to show data in hidden rows and columns.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.ShowFirstPoint">
            <summary>
            Indicates whether to highlight the first point of data in the sparkline group. 
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.ShowLastPoint">
            <summary>
            Indicates whether to highlight the last point of data in the sparkline group. 
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.ShowLowPoint">
            <summary>
            Indicates whether to highlight the lowest points of data in the sparkline group.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.ShowHighPoint">
             <summary>
            Indicates whether to highlight the highest points of data in the sparkline group. 
             </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.ShowNegativePoint">
            <summary>
            Indicates whether to highlight the negative values on the sparkline group with a different color or marker.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.ShowMarkers">
            <summary>
            Indicates whether to highlight each point in each line sparkline in the sparkline group.  
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.VerticalAxisMaxValue">
            <summary>
            Gets and sets the custom maximum value for the vertical axis. 
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.VerticalAxisMaxType">
            <summary>
            Represents the vertical axis maximum value type. 
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.VerticalAxisMinValue">
            <summary>
            Gets and sets the custom minimum value for the vertical axis. 
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.VerticalAxisMinValueType">
            <summary>
            Represents the vertical axis minimum value type. 
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.SparklineType">
            <summary>
            Indicates the sparkline type of the sparkline group.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.IsHorizontalDateAxis">
            <summary>
            Indicates wheter represents the horizontal axis type as Dateaxis.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.HorizontalDateAxisRange">
            <summary>
            Represents the range that contains the date values for the sparkline data.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.HorizontalAxisColor">
            <summary>
            Gets and sets the color of the horizontal axis in the sparkline group.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.FirstPointColor">
            <summary>
            Gets and sets the color of the first point of data in the sparkline group. 
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.HighPointColor">
            <summary>
            Gets and sets the color of the highest points of data in the sparkline group. 
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.LastPointColor">
            <summary>
            Gets and sets the color of the last point of data in the sparkline group.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.LineWeight">
            <summary>
            Gets and sets the line weight in each line sparkline in the sparkline group, in the unit of points. 
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.LowPointColor">
            <summary>
            Gets and sets the color of the lowest points of data in the sparkline group.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.MarkersColor">
             <summary>
            Gets and sets the color of points in each line sparkline in the sparkline group.
             </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.NegativePointColor">
            <summary>
            Gets and sets the color of the negative values on the sparkline group.
            </summary>
        </member>
        <member name="P:Spire.Xls.SparklineGroup.SparklineColor">
            <summary>
            Gets and sets the color of the sparklines in the sparkline group. 
            </summary>
        </member>
        <member name="T:Spire.Xls.SparklineGroupCollection">
            <summary>
            The SparklineGroupCollection represents the collection of SparklineGroup objects.
            </summary>
        </member>
        <member name="M:Spire.Xls.SparklineGroupCollection.Clear(Spire.Xls.SparklineGroup)">
            <summary>
            Clears the sparkline group.
            </summary>
        </member>
        <member name="M:Spire.Xls.SparklineGroupCollection.AddGroup(Spire.Xls.SparklineType)">
            <summary>
            Adds the SparklineGroup instance.
            </summary>
        </member>
        <member name="M:Spire.Xls.SparklineGroupCollection.AddGroup">
            <summary>
            Adds the SparklineGroup instance.
            </summary>
        </member>
        <member name="T:Spire.Xls.SparklineCollection">
            <summary>
            Represents the SparklineCollection.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Xls.SparklineCollection.Add”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Xls.SparklineCollection.Add(Spire.Xls.CellRange,Spire.Xls.CellRange)">
            <summary>
            Adds the sparkline.
            </summary>
        </member>
        <member name="M:Spire.Xls.SparklineCollection.RefreshRanges(Spire.Xls.CellRange,Spire.Xls.CellRange)">
            <summary>
            Adds the sparkline.
            </summary>
        </member>
        <member name="M:Spire.Xls.SparklineCollection.Add(Spire.Xls.CellRange,Spire.Xls.CellRange,System.Boolean)">
            <summary>
            Adds the sparkline.
            </summary>
        </member>
        <member name="M:Spire.Xls.SparklineCollection.RefreshRanges(Spire.Xls.CellRange,Spire.Xls.CellRange,System.Boolean)">
            <summary>
            Refresh data range of the sparkline.
            </summary>
        </member>
        <member name="M:Spire.Xls.SparklineCollection.Clear(Spire.Xls.Sparkline)">
            <summary>
            Clears the sparkline.
            </summary>
            <param name="sparklineRange">The sparkline range.<see cref="!: IRange"/></param>
        </member>
        <member name="P:Spire.Xls.Format3D.BevelTopType">
            <summary>
            Gets or sets the bevel top type.
            </summary>
            <value>The bevel top.</value>
        </member>
        <member name="P:Spire.Xls.Format3D.BevelBottomType">
            <summary>
            Gets or sets the bevel bottom type.
            </summary>
            <value>The bevel bottom.</value>
        </member>
        <member name="P:Spire.Xls.Format3D.MaterialType">
            <summary>
            Gets or sets the material.
            </summary>
            <value>The material.</value>
        </member>
        <member name="P:Spire.Xls.Format3D.LightingType">
            <summary>
            Gets or sets the lighting type.
            </summary>
            <value>The lighting.</value>
        </member>
        <member name="M:Spire.Xls.Format3D.Spire#Xls#Core#ICloneParent#Clone(System.Object)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <param name="parent">Parent object for a copy of this instance.</param>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Spire.Xls.Format3D.Clone(System.Object)">
            <summary>
            Clone current Record.
            </summary>
            <param name="parent">Parent object.</param>
            <returns>Returns clone of current object.</returns>
        </member>
        <member name="P:Spire.Xls.ConditionalFormatWrapper.IsPatternColorPresent">
            <summary>
            Indicates whether pattern color .
            </summary>
        </member>
        <member name="T:Spire.Xls.VMLPresetGradientFills">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Brass">
            <summary>
              Looks up a localized string similar to 0 #825600;8520f #ffa800;18350f #825600;28180f #ffa800;38011f #825600;47186f #ffa800;57016f #825600;1 #ffa800.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Calm_Water">
            <summary>
              Looks up a localized string similar to 0 #ccf;11796f #9cf;23593f #96f;39977f #c9f;53740f #9cf;1 #ccf.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Chrome">
            <summary>
              Looks up a localized string similar to 0 white;10486f #1f1f1f;11796f white;27525f #636363;34734f #cfcfcf;43254f #cfcfcf;49807f #1f1f1f;51773f white;1 #7f7f7f.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_ChromeII">
            <summary>
              Looks up a localized string similar to 0 #cbcbcb;8520f #5f5f5f;13763f #5f5f5f;41288f white;43909f #b2b2b2;45220f #292929;53740f #777;1 #eaeaea.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Daybreak">
            <summary>
              Looks up a localized string similar to 0 #5e9eff;26214f #85c2ff;45875f #c4d6eb;1 #ffebfa.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Desert">
            <summary>
              Looks up a localized string similar to 0 #fc9fcb;8520f #f8b049;13763f #f8b049;41288f #fee7f2;43909f #f952a0;45220f #c50849;53740f #b43e85;1 #f8b049.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Early_Sunset">
            <summary>
              Looks up a localized string similar to 0 #000082;19661f #66008f;42598f #ba0066;58982f red;1 #ff8200.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Fire">
            <summary>
              Looks up a localized string similar to 0 #fff200;29491f #ff7a00;45875f #ff0300;1 #4d0808.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Fog">
            <summary>
              Looks up a localized string similar to 0 #8488c4;34734f #d4deff;54395f #d4deff;1 #96ab94.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Gold">
            <summary>
              Looks up a localized string similar to 0 #e6dcac;7864f #e6d78a;19661f #c7ac4c;29491f #e6d78a;50463f #c7ac4c;1 #e6dcac.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_GoldII">
            <summary>
              Looks up a localized string similar to 0 #fbe4ae;8520f #bd922a;13763f #bd922a;41288f #fbe4ae;43909f #bd922a;45220f #835e17;53740f #a28949;1 #fae3b7.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Horizon">
            <summary>
              Looks up a localized string similar to 0 #dcebf5;5243f #83a7c3;8520f #768fb9;13763f #83a7c3;34079f white;36700f #9c6563;38011f #80302d;46531f #c0524e;61604f #ebdad4;1 #55261c.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Late_Sunset">
            <summary>
              Looks up a localized string similar to 0 black;13107f #000040;.5 #400040;.75 #8f0040;58982f #f27300;1 #ffbf00.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Mahogany">
            <summary>
              Looks up a localized string similar to 0 #d6b19c;19661f #d49e6c;45875f #a65528;1 #663012.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Moss">
            <summary>
              Looks up a localized string similar to 0 #ddebcf;.5 #9cb86e;1 #156b13.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Nightfall">
            <summary>
              Looks up a localized string similar to 0 black;26214f #0a128c;45875f #181cc7;57672f #7005d4;1 #8c3d91.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Ocean">
            <summary>
              Looks up a localized string similar to 0 #03d4a8;.25 #21d6e0;.75 #0087e6;1 #005cbf.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Parchment">
            <summary>
              Looks up a localized string similar to 0 #ffefd1;42598f #f0ebd5;1 #d1c39f.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Peacock">
            <summary>
              Looks up a localized string similar to 0 #39f;10486f #0cc;30802f #99f;39322f #2e6792;46531f #33c;53084f #1170ff;1 #069.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Rainbow">
            <summary>
              Looks up a localized string similar to 0 #a603ab;13763f #0819fb;22938f #1a8d48;34079f yellow;47841f #ee3f17;57672f #e81766;1 #a603ab.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_RainbowII">
            <summary>
              Looks up a localized string similar to 0 #f39;.25 #f63;.5 yellow;.75 #01a78f;1 #36f.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Sapphire">
            <summary>
              Looks up a localized string similar to 0 #000082;8520f #0047ff;18350f #000082;28180f #0047ff;38011f #000082;47186f #0047ff;57016f #000082;1 #0047ff.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Silver">
            <summary>
              Looks up a localized string similar to 0 white;4588f #e6e6e6;20972f #7d8496;30802f #e6e6e6;55706f #7d8496;1 #e6e6e6.
            </summary>
        </member>
        <member name="P:Spire.Xls.VMLPresetGradientFills.Grad_Wheat">
            <summary>
              Looks up a localized string similar to 0 #fbeac7;11796f #fee7f2;23593f #fac77d;39977f #fba97d;53740f #fbd49c;1 #fee7f2.
            </summary>
        </member>
        <member name="T:Spire.Xls.AutoFilter">
            <summary>
            Represents autofiltering for the specified worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.AutoFilter.FirstCondition">
            <summary>
            First condition of autofilter.
            </summary>
        </member>
        <member name="P:Spire.Xls.AutoFilter.SecondCondition">
            <summary>
            Second condition of autofilter. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellBorder.KnownColor">
            <summary>
            Returns or sets a ExcelColors value that represents the color of the border
            </summary>
        </member>
        <member name="P:Spire.Xls.CellBorder.Color">
            <summary>
            Returns or sets the primary color of the object, as shown in the table in the remarks section. Use the RGB function to create a color value. 
            Read/write Color.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellBorder.OColor">
            <summary>
            Returns or sets the primary color of the object.
            Read/write ExcelColors.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellBorder.LineStyle">
            <summary>
            Returns or sets the line style for the border. Read/write LineStyleType.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellBorder.ShowDiagonalLine">
            <summary>
            Indicates whether shows diagonal line.
            </summary>
        </member>
        <member name="M:Spire.Xls.CellBorder.CopyFrom(Spire.Xls.CellBorder)">
            <summary>
            Copies styles from source border.
            </summary>
            <param name="baseBorder">source border.</param>
        </member>
        <member name="T:Spire.Xls.CellRange">
            <summary>
            Represents a cell, a row, a column, a selection of cells containing one or more contiguous blocks of cells.
            </summary>
        </member>
        <member name="M:Spire.Xls.CellRange.Activate">
            <summary>
            Active single cell in the worksheet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.CellRange.AddComment(Spire.Xls.ExcelComment)">
            <summary>
            Adds a comment to the range.
            </summary>
            <param name="comment">Comment to add</param>
        </member>
        <member name="M:Spire.Xls.CellRange.AddComment">
            <summary>
            Adds a comment to the range.
            </summary>
            <returns>Created comment or exists one.</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.Clone(System.Object,System.Collections.Generic.Dictionary{System.String,System.String},Spire.Xls.Workbook)">
            <summary>
            Clones current IXLSRange.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="rangeNames">new names.</param>
            <param name="book">Parent workbook.</param>
            <returns>Cloned instance.</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.Move(Spire.Xls.CellRange)">
            <summary>
            Moves the cells to the specified Range.
            </summary>
            <param name="destination">Destnation Range.</param>
        </member>
        <member name="M:Spire.Xls.CellRange.Move(Spire.Xls.CellRange,System.Boolean,System.Boolean)">
            <summary>
            Moves the cells to the specified Range.
            </summary>
            <param name="destination">Destination Range.</param>
            <param name="updateReference">Indicates whether to update reference range.</param>
        </member>
        <member name="M:Spire.Xls.CellRange.Copy(Spire.Xls.CellRange)">
            <summary>
            Copies the range to the specified range.
            </summary>
            <param name="destRange">Destination range</param>
            <returns>Destination range</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.Copy(Spire.Xls.CellRange,System.Boolean)">
            <summary>
            Copies the range to the specified range.
            </summary>
            <param name="destination">Destination range.</param>
            <param name="updateReference">Indicates whether to update reference cells.</param>
        </member>
        <member name="M:Spire.Xls.CellRange.Copy(Spire.Xls.CellRange,System.Boolean,System.Boolean)">
            <summary>
            Copies the range to the specified range.
            </summary>
            <param name="destRange">Destination range.</param>
            <param name="updateReference">Indicates whether to update reference cells.</param>
            <param name="copyStyles">Indicates whether to copy styles.</param>
            <returns>Destination range</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindAllNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input double.
            </summary>
            <param name="doubleValue">Double value to search for</param>
            <param name="formulaValue">Indicates whether to find formula value</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindAllString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string.
            </summary>
            <param name="stringValue">String value to search for</param>
            <param name="formula">Indicates whether include formula</param>
            <param name="formulaValue">Indicates whether include formula value</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindAllDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input datetime.
            </summary>
            <param name="dateTimeValue">DateTime value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindAllTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with input timespan
            </summary>
            <param name="timeSpanValue">time span value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindAllBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool. 
            </summary>
            <param name="boolValue">Bool value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool. 
            </summary>
            <param name="boolValue">Bool value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input double. 
            </summary>
            <param name="doubleValue">Double value to search for</param>
            <param name="formulaValue">Indicates whether includes formula value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string. 
            </summary>
            <param name="stringValue">String value to search for</param>
            <param name="formula">Indicates whether includes formula to search for</param>
            <param name="formulaValue">Indicates whether includes formula value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input datetime. 
            </summary>
            <param name="dateTimeValue">Datetime value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.FindTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with the input time span. 
            </summary>
            <param name="timeSpanValue">Time span value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.Intersect(Spire.Xls.CellRange)">
            <summary>
            Get intersection range with the specified range.
            </summary>
            <param name="range">Range which to intersect.</param>
            <returns>Range intersection.</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.Merge(Spire.Xls.CellRange)">
            <summary>
            Creates a merged cell from the specified Range object.
            </summary>
            <param name="range">The Range to merge with.</param>
            <returns>Merged ranges.</returns>
        </member>
        <member name="M:Spire.Xls.CellRange.SetDataValidation(Spire.Xls.Validation)">
            <summary>
            Sets data validation for the range.
            </summary>
            <param name="dv">Data validation to set.</param>
        </member>
        <member name="P:Spire.Xls.CellRange.Borders">
            <summary>
            Returns a Borders collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.Style">
            <summary>
            Returns a Style object that represents the style of the specified range
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.Cells">
            <summary>
            Returns a Range object that represents the cells in the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.Columns">
            <summary>
            Returns a Range object that represents the columns in the specified range
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.Rows">
            <summary>
            Returns the number of the first row of the first area in the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.Item(System.Int32,System.Int32)">
            <summary>
            Gets cell range. Row and column indexes are one-based.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.CellRange.Item(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets cell range. Row and column indexes are one-based.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <param name="lastRow"></param>
            <param name="lastColumn"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.CellRange.Item(System.String)">
            <summary>
            Gets cell range.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.CellRange.Item(System.String,System.Boolean)">
            <summary>
            Gets cell range
            </summary>
            <param name="name"></param>
            <param name="IsR1C1Notation"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.CellRange.Comment">
            <summary>
            Returns a Comment object that represents the comment associated with the cell in the upper-left corner of the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.Worksheet">
            <summary>
            Returns a worksheet object that represents the worksheet 
            containing the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.RichText">
            <summary>
            Returns a RichTextString object that represents the rich text style.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.EntireColumn">
            <summary>
            Returns a Range object that represents the entire column (or 
            columns) that contains the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.EndCell">
            <summary>
            Returns a Range object that represents the cell at the end of the 
            region that contains the source range.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.MergeArea">
            <summary>
            Returns a Range object that represents the merged range containing the specified cell.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellRange.EntireRow">
            <summary>
            Returns a Range object that represents the entire row (or rows) that contains the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyle.Borders">
            <summary>
            Returns a Borders collection that represents the borders of a style.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyle.Font">
            <summary>
            Returns a Font object that represents the font of the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyle.Interior">
            <summary>
            Returns interior object for extended format.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellStyle.s">
            <summary>
            Clone a cellstyle
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.JustifyLast">
            <summary>
            Represents justify text alignment
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.NumberFormatLocal">
            <summary>
            Returns or sets the format code for the object as a string in the
            language of the user.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.BuiltIn">
            <summary>
            True if the style is a built-in style.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.FillPattern">
            <summary>
            Gets or Sets fill pattern type.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.FormulaHidden">
            <summary>
            True if the formula will be hidden when the worksheet is protected.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.HorizontalAlignment">
            <summary>
            Returns or sets the horizontal alignment for the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.IncludeAlignment">
            <summary>
            True if the style includes the AddIndent, HorizontalAlignment,
            VerticalAlignment, WrapText, and Orientation properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.IncludeBorder">
            <summary>
            True if the style includes the Color, KnownColor, LineStyle, and Weight border properties
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.IncludeFont">
            <summary>
            True if the style includes the Background, Bold, Color, KnownColor, FontStyle, Italic, Name, OutlineFont, Shadow, Size, Strikethrough, Subscript, Superscript, and Underline font properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.IncludeNumberFormat">
            <summary>
            True if the style includes the NumberFormat property.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.IncludePatterns">
            <summary>
            True if the style includes the Color, KnownColor,
            InvertIfNegative, Pattern, PatternColor, and PatternKnownColor
            interior properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.IncludeProtection">
            <summary>
            True if the style includes the FormulaHidden and Locked protection
            properties.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.IndentLevel">
            <summary>
            Returns or sets the indent level for the style.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.Locked">
            <summary>
            True if the object is locked; False if the object can be modified when the sheet is protected.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.Name">
            <summary>
            Returns or sets the name of the object. Read-only String.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.NumberFormat">
            <summary>
            Returns or sets the format code for the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.NumberFormatIndex">
            <summary>
            Gets or Sets format index.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.Rotation">
            <summary>
            <para>The text orientation. Can be an integer value from 1 to 180 degrees.</para>
            <para>0 Not rotated</para>
            <para>1-90 1 to 90 degrees anticlockwise</para>
            <para>91-180 1 to 90 degrees clockwise, specifies -1 to -90 in Excel (Example: 135 is specified as -45 in Excel, 180 is specified as -90 in Excel)</para>
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.ShrinkToFit">
            <summary>
            True if text automatically shrinks to fit in the available column width.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.VerticalAlignment">
            <summary>
            Returns or sets the vertical alignment of the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.WrapText">
            <summary>
            True if Microsoft Excel wraps the text in the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.ReadingOrder">
            <summary>
            Returns or sets the reading order for the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.IsFirstSymbolApostrophe">
            <summary>
            If true then first symbol in cell is apostrophe.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.PatternKnownColor">
            <summary>
            Returns or sets the excel color of the interior.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.PatternColor">
            <summary>
            Returns or sets the color of the interior pattern.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.KnownColor">
            <summary>
            Gets or sets the cell shading excel color.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleObject.Color">
            <summary>
            Gets or sets the cell shading color.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.AddInFunctionsCollection.Item(System.Int32)">
            <summary>
            Get Add-In function.
            </summary>
            <param name="index">Item index.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.Collections.AutoFiltersCollection.Worksheet">
            <summary>
            Returns parent worksheet. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.AutoFiltersCollection.Range">
            <summary>
            Range to be filtered.
            </summary>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.Filter">
            <summary>
            Filter the data.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.AutoFiltersCollection.Item(System.Int32)">
            <summary>
            Get auto filter item..
            </summary>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.AddFilter(System.Int32,System.String)">
            <summary>
            Adds a filter for a filter column.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).
            </param>
            <param name="criteria">The specified criteria (a string; for example, "hello"). 
            It only can be null or be one of the cells' value in this column.
            </param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.AddFilter(Spire.Xls.Core.IAutoFilter,System.String)">
            <summary>
            Adds a filter for a filter column.
            </summary>
            <param name="column">The column field on which you want to base the filter . for exapmle: sheet.AutoFilters[0]
            </param>
            <param name="criteria">The specified criteria (a string; for example, "hello"). 
            It only can be null or be one of the cells' value in this column.
            </param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.AddDateFilter(System.Int32,Spire.Xls.Core.Spreadsheet.AutoFilter.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a date filter for a filter column.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).
            </param>
            <param name="dateTimeGroupingType"><see cref="T:Spire.Xls.Core.Spreadsheet.AutoFilter.DateTimeGroupingType"/></param>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <param name="hour">The hour.</param>
            <param name="minute">The minute.</param>
            <param name="second">The second.</param>
            <remarks>
            If DateTimeGroupingType is Year, only the param year effects.
            If DateTiemGroupingType is Month, only the param year and month effect.
            and so on.
            </remarks>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.AddDateFilter(Spire.Xls.Core.IAutoFilter,Spire.Xls.Core.Spreadsheet.AutoFilter.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a date filter for a filter column.
            </summary>
            <param name="column">The column field on which you want to base the filter . for exapmle: sheet.AutoFilters[0]
            </param>
            <param name="dateTimeGroupingType"><see cref="T:Spire.Xls.Core.Spreadsheet.AutoFilter.DateTimeGroupingType"/></param>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <param name="hour">The hour.</param>
            <param name="minute">The minute.</param>
            <param name="second">The second.</param>
            <remarks>
            If DateTimeGroupingType is Year, only the param year effects.
            If DateTiemGroupingType is Month, only the param year and month effect.
            and so on.
            </remarks>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.RemoveDateFilter(System.Int32,Spire.Xls.Core.Spreadsheet.AutoFilter.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes a date filter.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).
            </param>
            <param name="dateTimeGroupingType"><see cref="T:Spire.Xls.Core.Spreadsheet.AutoFilter.DateTimeGroupingType"/></param>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <param name="hour">The hour.</param>
            <param name="minute">The minute.</param>
            <param name="second">The second.</param>
            <remarks>
            If DateTimeGroupingType is Year, only the param year effects.
            If DateTiemGroupingType is Month, only the param year and month effect.
            </remarks>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.RemoveDateFilter(Spire.Xls.Core.IAutoFilter,Spire.Xls.Core.Spreadsheet.AutoFilter.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes a date filter.
            </summary>
            <param name="column">The column field on which you want to base the filter . for exapmle: sheet.AutoFilters[0]
            </param>
            <param name="dateTimeGroupingType"><see cref="T:Spire.Xls.Core.Spreadsheet.AutoFilter.DateTimeGroupingType"/></param>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <param name="hour">The hour.</param>
            <param name="minute">The minute.</param>
            <param name="second">The second.</param>
            <remarks>
            If DateTimeGroupingType is Year, only the param year effects.
            If DateTiemGroupingType is Month, only the param year and month effect.
            </remarks>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.RemoveFilter(System.Int32,System.String)">
            <summary>
            Removes a filter for a filter column.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).
            </param>
            <param name="criteria">The specified criteria (a string; for example, "hello"). 
            It only can be null or be one of the cells' value in this column.
            </param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.RemoveFilter(Spire.Xls.Core.IAutoFilter,System.String)">
            <summary>
            Removes a filter for a filter column.
            </summary>
            <param name="column">The column field on which you want to base the filter . for exapmle: sheet.AutoFilters[0]
            </param>
            <param name="criteria">The specified criteria (a string; for example, "hello"). 
            It only can be null or be one of the cells' value in this column.
            </param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.QuickFilter(System.Int32,System.String)">
            <summary>
            Filters a list with specified criteria.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).
            </param>
            <param name="criteria">The specified criteria (a string; for example, "hello"). </param>
            <remarks>
            will remove all other filter setting on this field as Ms Excel 97-2003.
            </remarks>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.QuickFilter(Spire.Xls.Core.IAutoFilter,System.String)">
            <summary>
            Filters a list with specified criteria.
            </summary>
            <param name="column">The column field on which you want to base the filter . for exapmle: sheet.AutoFilters[0]
            </param>
            <param name="criteria">The specified criteria (a string; for example, "hello"). </param>
            <remarks>
            will remove all other filter setting on this field as Ms Excel 97-2003.
            </remarks>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.FilterTop10(System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Filter the top 10 item in the list
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0). </param>
            <param name="isTop">Indicates whether filter from top or bottom</param>
            <param name="isPercent">Indicates whether the items is percent or count </param>
            <param name="itemCount">The item count</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.FilterTop10(Spire.Xls.Core.IAutoFilter,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Filter the top 10 item in the list
            </summary>
            <param name="column">The column field on which you want to base the filter. for exapmle: sheet.AutoFilters[0] </param>
            <param name="isTop">Indicates whether filter from top or bottom</param>
            <param name="isPercent">Indicates whether the items is percent or count </param>
            <param name="itemCount">The item count</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.DynamicFilter(System.Int32,Spire.Xls.Core.Spreadsheet.AutoFilter.DynamicFilterType)">
            <summary>
            Adds a dynamic filter.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).</param>
            <param name="dynamicFilterType">Dynamic filter type.</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.DynamicFilter(Spire.Xls.Core.IAutoFilter,Spire.Xls.Core.Spreadsheet.AutoFilter.DynamicFilterType)">
            <summary>
            Adds a dynamic filter.
            </summary>
            <param name="column">The column field on which you want to base the filter. for exapmle: sheet.AutoFilters[0]</param>
            <param name="dynamicFilterType">Dynamic filter type.</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.AddFontColorFilter(System.Int32,System.Drawing.Color)">
            <summary>
            Adds a font color filter.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).</param>
            <param name="color">Font Color.</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.AddFontColorFilter(Spire.Xls.Core.IAutoFilter,System.Drawing.Color)">
            <summary>
            Adds a font color filter.
            </summary>
            <param name="column">The column field on which you want to base the filter. for exapmle: sheet.AutoFilters[0]</param>
            <param name="color">Font Color.</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.AddFillColorFilter(System.Int32,System.Drawing.Color)">
            <summary>
            Adds a fill color filter.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).</param>
            <param name="color">Fill Color.</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.AddFillColorFilter(Spire.Xls.Core.IAutoFilter,System.Drawing.Color)">
            <param name="color">Fill Color.</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.MatchBlanks(System.Int32)">
            <summary>
            Match all blank cell in the list.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.MatchBlanks(Spire.Xls.Core.IAutoFilter)">
            <summary>
            Match all blank cell in the list.
            </summary>
            <param name="column">The column field on which you want to base the filter . for exapmle: sheet.AutoFilters[0]</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.MatchNonBlanks(System.Int32)">
            <summary>
            Match all not blank cell in the list.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.MatchNonBlanks(Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn)">
            <summary>
            Match all not blank cell in the list.
            </summary>
            <param name="column">The column field on which you want to base the filter . for exapmle: sheet.AutoFilters[0]</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.CustomFilter(System.Int32,Spire.Xls.Core.Spreadsheet.AutoFilter.FilterOperatorType,System.Object)">
            <summary>
            Filters a list with a custom criteria.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).</param>
            <param name="operatorType">The filter operator type</param>
            <param name="criteria">The custom criteria</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.CustomFilter(Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn,Spire.Xls.Core.Spreadsheet.AutoFilter.FilterOperatorType,System.Object)">
            <summary>
            Filters a list with a custom criteria.
            </summary>
            <param name="column">The column field on which you want to base the filter . for exapmle: sheet.AutoFilters[0]</param>
            <param name="operatorType">The filter operator type</param>
            <param name="criteria">The custom criteria</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.CustomFilter(System.Int32,Spire.Xls.Core.Spreadsheet.AutoFilter.FilterOperatorType,System.Object,System.Boolean,Spire.Xls.Core.Spreadsheet.AutoFilter.FilterOperatorType,System.Object)">
            <summary>
            Filters a list with custom criterias.
            </summary>
            <param name="filterColumnIndex">The column field index on which you want to base the filter (from the left of the list; the leftmost field is field 0).</param>
            <param name="operatorType1">The first filter operator type</param>
            <param name="criteria1">The first custom criteria</param>
            <param name="isAnd"></param>
            <param name="operatorType2">The second filter operator type</param>
            <param name="criteria2">The second custom criteria</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.CustomFilter(Spire.Xls.Core.Spreadsheet.AutoFilter.FilterColumn,Spire.Xls.Core.Spreadsheet.AutoFilter.FilterOperatorType,System.Object,System.Boolean,Spire.Xls.Core.Spreadsheet.AutoFilter.FilterOperatorType,System.Object)">
            <summary>
            Filters a list with custom criterias.
            </summary>
            <param name="column">The column field on which you want to base the filter. for exapmle: sheet.AutoFilters[0]</param>
            <param name="operatorType1">The first filter operator type</param>
            <param name="criteria1">The first custom criteria</param>
            <param name="isAnd"></param>
            <param name="operatorType2">The second filter operator type</param>
            <param name="criteria2">The second custom criteria</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.ClearFilter(System.String)">
            <summary>
            Delete the column filter by column name
            </summary>
            <param name="columName">column name</param>
        </member>
        <member name="M:Spire.Xls.Collections.AutoFiltersCollection.ClearFilter(System.Int32)">
            <summary>
            Delete the column filter by column index(filters column index not sheet column index)
            </summary>
            <param name="columName">column index</param>
        </member>
        <member name="P:Spire.Xls.Collections.BordersCollection.KnownColor">
            <summary>
            Returns or sets the primary excel color of the object. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.BordersCollection.Color">
            <summary>
            Returns or sets the primary color of the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.BordersCollection.Item(Spire.Xls.BordersLineType)">
            <summary>
            Gets border item.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.BordersCollection.LineStyle">
            <summary>
            Returns or sets the line style for the border.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.BordersCollection.Value">
            <summary>
            Gets or sets line style of borders.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.BordersCollection.Count">
            <summary>
            Gets count of borders.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.ChartsCollection.Item(System.Int32)">
            <summary>
            Gets a chart object by item index.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.ChartsCollection.Item(System.String)">
            <summary>
            Get a chart object by name.
            </summary>
        </member>
        <member name="M:Spire.Xls.Collections.ChartsCollection.Add">
            <summary>
            Adds a new chart.
            </summary>
            <returns>Created chart object.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.ChartsCollection.Add(System.String)">
            <summary>
            Add a new chart with name.
            </summary>
            <param name="name">chart name.</param>
            <returns>Created chart object.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.ChartsCollection.Add(Spire.Xls.ChartSheet)">
            <summary>
            Adds chart to the collection.
            </summary>
            <param name="chart">Chart to add.</param>
            <returns>Added chart object.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.ChartsCollection.Remove(System.String)">
            <summary>
            Removes chart object from the collection.
            </summary>
            <param name="name">Name of the chart to remove.</param>
        </member>
        <member name="M:Spire.Xls.Collections.CommentsCollection.AddComment(Spire.Xls.CellRange)">
            <summary>
            Adds comment to the specified range.
            </summary>
            <param name="range">Range that adds comment.</param>
            <returns>Created comment object..</returns>
        </member>
        <member name="M:Spire.Xls.Collections.CommentsCollection.AddComment(System.Int32,System.Int32)">
            <summary>
            Adds comment to the specified row and column.
            </summary>
            <param name="rowIndex">Row index..</param>
            <param name="columnIndex">Column index.</param>
            <returns>Created comment object.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.CommentsCollection.Remove(Spire.Xls.ExcelComment)">
            <summary>
            Removes comment object from the collection.
            </summary>
            <param name="comment">Comment to remove.</param>
        </member>
        <member name="P:Spire.Xls.Collections.CommentsCollection.Item(System.Int32)">
            <summary>
            Gets a comment object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.CommentsCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets a comment object.
            </summary>
        </member>
        <member name="M:Spire.Xls.Collections.DataValidationCollection.Add(Spire.Xls.Validation)">
            <summary>
            Adds validation to the collection.
            </summary>
            <param name="dv">Data validation object.</param>
        </member>
        <member name="M:Spire.Xls.Collections.DataValidationCollection.Remove(Spire.Xls.Validation)">
            <summary>
            Removes data validation object from the collection.
            </summary>
            <param name="dv">Data validation object.</param>
        </member>
        <member name="M:Spire.Xls.Collections.FontsCollection.AddFonts(Spire.Xls.Collections.FontsCollection)">
            <summary>
            Merges fonts with fonts from another fonts collection.
            </summary>
            <param name="arrFonts">Fonts collection to merge..</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.FontsCollection.Contains(Spire.Xls.XlsFontStyle)">
            <summary>
            Indicates whether font is exists.
            </summary>
            <param name="font">Font object.</param>
            <returns>True present in the collection, false otherwise.</returns>
        </member>
        <member name="P:Spire.Xls.Collections.HPageBreaksCollection.Item(Spire.Xls.CellRange)">
            <summary>
            Gets page break object item.
            </summary>
        </member>
        <member name="M:Spire.Xls.Collections.HPageBreaksCollection.Add(Spire.Xls.CellRange)">
            <summary>
            Adds a horizontal page break. 
            </summary>
            <param name="location">range which new page break inserted.</param>
            <returns>HPageBreak added.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.HPageBreaksCollection.GetPageBreak(System.Int32)">
            <summary>
            Returns page break at the specified row.
            </summary>
            <param name="rowIndex">Row index.</param>
            <returns>Page break object.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.HPageBreaksCollection.GetPageBreak(Spire.Xls.CellRange)">
            <summary>
            Returns page break at the specified range.
            </summary>
            <param name="range">Range object.</param>
            <returns>Page break object.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.HyperLinksCollection.GetRangeHyperlinks(Spire.Xls.CellRange)">
            <summary>
            Gets hyperlinks for the specified range.
            </summary>
            <param name="range">range object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Drawing.Image,System.String)">
            <summary>
            Adds picture to the collection.
            </summary>
            <param name="image">Picture to add.</param>
            <param name="pictureName">Picture name.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Drawing.Image,System.String,Spire.Xls.ImageFormatType)">
            <summary>
            Adds picture to the collection.
            </summary>
            <param name="image">Picture to add.</param>
            <param name="pictureName">Picture name.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.String)">
            <summary>
            Adds picture from the specified file.
            </summary>
            <param name="fileName">File name.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.String,Spire.Xls.ImageFormatType)">
            <summary>
            Adds picture from the specified file.
            </summary>
            <param name="strFileName">File name.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="image">Image.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Drawing.Image,Spire.Xls.ImageFormatType)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="image">Image to add.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="stream">Stream object.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.IO.Stream,Spire.Xls.ImageFormatType)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="stream">Stream with the picture.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.String)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="fileName">File name.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.String,Spire.Xls.ImageFormatType)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="fileName">File name.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="bottomRow">Bottom row.</param>
            <param name="rightColumn">Right column.</param>
            <param name="image">Image object.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Image,Spire.Xls.ImageFormatType)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="bottomRow">Bottom row.</param>
            <param name="rightColumn">Right column.</param>
            <param name="image">Image to add.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="bottomRow">Bottom row.</param>
            <param name="rightColumn">Right column.</param>
            <param name="stream">Stream.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream,Spire.Xls.ImageFormatType)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="bottomRow">Bottom row.</param>
            <param name="rightColumn">Right column.</param>
            <param name="stream">Stream with the picture.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="bottomRow">Bottom row.</param>
            <param name="rightColumn">Right column.</param>
            <param name="fileName">File name.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String,Spire.Xls.ImageFormatType)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="bottomRow">Bottom row.</param>
            <param name="rightColumn">Right column.</param>
            <param name="fileName">File name.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="image">Image.</param>
            <param name="scaleWidth">Width scale in percents.</param>
            <param name="scaleHeight">Height scale in percents.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.Drawing.Image,System.Int32,System.Int32,Spire.Xls.ImageFormatType)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="image">Image.</param>
            <param name="scaleWidth">Width scale in percents.</param>
            <param name="scaleHeight">Height scale in percents.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="stream">Stream with the picture.</param>
            <param name="scaleWidth">Width scale in percents.</param>
            <param name="scaleHeight">Height scale in percents.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.IO.Stream,System.Int32,System.Int32,Spire.Xls.ImageFormatType)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="stream">Stream with the picture.</param>
            <param name="scaleWidth">Width scale in percents.</param>
            <param name="scaleHeight">Height scale in percents.</param>
            <param name="imageFormat">Image format.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="fileName">File name.</param>
            <param name="scaleWidth">Width scale in percents.</param>
            <param name="scaleHeight">Height scale in percents.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.PicturesCollection.Add(System.Int32,System.Int32,System.String,System.Int32,System.Int32,Spire.Xls.ImageFormatType)">
            <summary>
            Adds image to the collection.
            </summary>
            <param name="topRow">Top row of a new picture.</param>
            <param name="leftColumn">Left column.</param>
            <param name="fileName">Name of the shape.</param>
            <param name="scaleWidth">Width scale in percents.</param>
            <param name="scaleHeight">Height scale in percents.</param>
            <param name="imageFormat">Image format to use for picture storing.</param>
            <returns>Added picture.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.Add(Spire.Xls.CellRange)">
            <summary>
            Adds a range to the collection.
            </summary>
            <param name="range">Range to add.</param>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.AddComment">
            <summary>
            Adds a comment to the range.
            </summary>
            <returns>Added comment.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.AddRange(Spire.Xls.CellRange)">
            <summary>
            Adds a range to the collection.
            </summary>
            <param name="range">Range to add.</param>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.Copy(Spire.Xls.CellRange)">
            <summary>
            Copies the range to the specified range.
            </summary>
            <param name="destRange">Destination range</param>
            <returns>Destination range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.Copy(Spire.Xls.CellRange,System.Boolean)">
            <summary>
            Copies the range to the specified range.
            </summary>
            <param name="destination">Destination range.</param>
            <param name="updateReference">Indicates whether to update reference cells.</param>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.Copy(Spire.Xls.CellRange,System.Boolean,System.Boolean)">
            <summary>
            Copies the range to the specified range.
            </summary>
            <param name="destRange">Destination range.</param>
            <param name="updateReference">Indicates whether to update reference cells.</param>
            <param name="copyStyles">Indicates whether to copy styles.</param>
            <returns>Destination range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindAllNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input double.
            </summary>
            <param name="doubleValue">Double value to search for</param>
            <param name="formulaValue">Indicates whether to find formula value</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindAllString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string.
            </summary>
            <param name="stringValue">String value to search for</param>
            <param name="formula">Indicates whether include formula</param>
            <param name="formulaValue">Indicates whether include formula value</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindAllDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input datetime.
            </summary>
            <param name="dateTimeValue">DateTime value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindAllTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with input timespan
            </summary>
            <param name="timeSpanValue">time span value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindAllBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool. 
            </summary>
            <param name="boolValue">Bool value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool. 
            </summary>
            <param name="boolValue">Bool value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input double. 
            </summary>
            <param name="doubleValue">Double value to search for</param>
            <param name="formulaValue">Indicates whether includes formula value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string. 
            </summary>
            <param name="stringValue">String value to search for</param>
            <param name="formula">Indicates whether includes formula to search for</param>
            <param name="formulaValue">Indicates whether includes formula value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input datetime. 
            </summary>
            <param name="dateTimeValue">Datetime value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.FindTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with the input time span. 
            </summary>
            <param name="timeSpanValue">Time span value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.Intersect(Spire.Xls.CellRange)">
            <summary>
            Get intersection range with the specified range.
            </summary>
            <param name="range">Range which to intersect.</param>
            <returns>Range intersection.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.Move(Spire.Xls.CellRange)">
            <summary>
            Moves the cells to the specified Range.
            </summary>
            <param name="destination">Destnation Range.</param>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.Move(Spire.Xls.CellRange,System.Boolean)">
            <summary>
            Moves the cells to the specified Range.
            </summary>
            <param name="destination">Destination Range.</param>
            <param name="updateReference">Indicates whether to update reference range.</param>
        </member>
        <member name="M:Spire.Xls.Collections.RangesCollection.Remove(Spire.Xls.CellRange)">
            <summary>
            Removes range from the collection.
            </summary>
            <param name="range">Range to remove.</param>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.EntireRow">
            <summary>
            Returns a Range object that represents the entire row (or rows) that contains the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.EntireColumn">
            <summary>
            Returns a Range object that represents the entire column (or 
            columns) that contains the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.Cells">
            <summary>
            Returns a Range object that represents the cells in the specified range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.Rows">
            <summary>
            Returns the number of the first row of the first area in the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.Columns">
            <summary>
            Returns a Range object that represents the columns in the specified range
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.Comment">
            <summary>
            Returns a Comment object that represents the comment associated with the cell in the upper-left corner of the range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.EndCell">
            <summary>
            Returns a Range object that represents the cell at the end of the 
            region that contains the source range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.Borders">
            <summary>
            Returns a Borders collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.MergeArea">
            <summary>
            Returns a Range object that represents the merged range containing the specified cell.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.RichText">
            <summary>
            Returns a RichTextString object that represents the rich text style.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.RangesCollection.Style">
            <summary>
            Returns a Style object that represents the style of the specified range
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.StylesCollection.Item(System.Int32)">
            <summary>
            gets a object from a collection. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.StylesCollection.Item(System.String)">
            <summary>
            gets a object from a collection. 
            </summary>
        </member>
        <member name="M:Spire.Xls.Collections.StylesCollection.Add(System.String)">
            <summary>
            Adds a new style.
            </summary>
            <param name="name">Style name</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.StylesCollection.Add(Spire.Xls.CellStyle)">
            <summary>
            Adds a style.
            </summary>
            <param name="style">Style to added.</param>
        </member>
        <member name="M:Spire.Xls.Collections.StylesCollection.Contains(Spire.Xls.CellStyle)">
            <summary>
            Style which is in collection.
            </summary>
            <param name="style">Style object.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.Collections.VPageBreaksCollection.Item(System.Int32)">
            <summary>
            Gets a object from collection
            </summary>
        </member>
        <member name="M:Spire.Xls.Collections.VPageBreaksCollection.Add(Spire.Xls.CellRange)">
            <summary>
            Adds a horizontal page break.
            </summary>
            <param name="range">Range which a page break need inserted.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.VPageBreaksCollection.Remove(Spire.Xls.CellRange)">
            <summary>
            Remove page break with specified range.
            </summary>
            <param name="range">range object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.VPageBreaksCollection.GetPageBreak(System.Int32)">
            <summary>
            Returns page break at the specified row index.
            </summary>
            <param name="rowIndex">Row index.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.VPageBreaksCollection.GetPageBreak(Spire.Xls.CellRange)">
            <summary>
            Returns page break at the specified range.
            </summary>
            <param name="range">range object.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetChartsCollection.Add">
            <summary>
            Add a new chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetChartsCollection.Add(Spire.Xls.ExcelChartType)">
            <summary>
            Add a new chart.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.Collections.WorksheetChartsCollection.Item(System.Int32)">
            <summary>
            Get a object from collection.
            </summary>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.Add(System.String)">
            <summary>
            Adds a new worksheet.
            </summary>
            <param name="sheetName">Worksheet name.</param>
            <returns>Added worksheet.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.AddCopy(System.Int32)">
            <summary>
            Adds copy of worksheet.
            </summary>
            <param name="sheetIndex">Sheet index.</param>
            <returns>Added worksheet.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.AddCopy(Spire.Xls.Worksheet)">
            <summary>
            Adds copy of worksheet.
            </summary>
            <param name="sheet">Worksheet to copy.</param>
            <returns>Added worksheet.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.AddCopy(Spire.Xls.Collections.WorksheetsCollection)">
            <summary>
            Adding worksheets collection to workbook.
            </summary>
            <param name="worksheets">Source worksheets collection.</param>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.Create(System.String)">
            <summary>
            Create a new worksheet.
            </summary>
            <param name="name">Worksheet name</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.Create">
            <summary>
            Creates a new worksheet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindAllNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input double.
            </summary>
            <param name="doubleValue">Double value to search for</param>
            <param name="formulaValue">Indicates whether to find formula value</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindAllString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string.
            </summary>
            <param name="stringValue">String value to search for</param>
            <param name="formula">Indicates whether include formula</param>
            <param name="formulaValue">Indicates whether include formula value</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindAllDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input datetime.
            </summary>
            <param name="dateTimeValue">DateTime value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindAllTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with input timespan
            </summary>
            <param name="timeSpanValue">time span value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindAllBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool. 
            </summary>
            <param name="boolValue">Bool value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool. 
            </summary>
            <param name="boolValue">Bool value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input double. 
            </summary>
            <param name="doubleValue">Double value to search for</param>
            <param name="formulaValue">Indicates whether includes formula value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string. 
            </summary>
            <param name="stringValue">String value to search for</param>
            <param name="formula">Indicates whether includes formula to search for</param>
            <param name="formulaValue">Indicates whether includes formula value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input datetime. 
            </summary>
            <param name="dateTimeValue">Datetime value to search for</param>
            <returns>Found range</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.FindTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with the input time span. 
            </summary>
            <param name="timeSpanValue">Time span value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Collections.WorksheetsCollection.Remove(Spire.Xls.Worksheet)">
            <summary>
            Remove worksheet from collection.
            </summary>
            <param name="sheet">Worksheet object.</param>
        </member>
        <member name="P:Spire.Xls.Collections.WorksheetsCollection.Item(System.Int32)">
            <summary>
            Returns a single object from a collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.WorksheetsCollection.Item(System.String)">
            <summary>
            Returns a single object from a collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Collections.BordersCollectionWrapper.Item(Spire.Xls.BordersLineType)">
            <summary>
            Gets border item.
            </summary>
        </member>
        <member name="T:Spire.Xls.ColorConditionValue">
            <summary>
            Condition value for color scale conditional format.
            </summary>
        </member>
        <member name="P:Spire.Xls.ColorConditionValue.FormatColor">
            <summary>
            Gets or sets color which assigned to the threshold of a color scale conditional format
            </summary>
        </member>
        <member name="P:Spire.Xls.ColorConditionValue.Type">
            <summary>
            Indicates the threshold values for a data bar, color scale, or icon set conditional format
            </summary>
        </member>
        <member name="P:Spire.Xls.ColorConditionValue.Value">
            <summary>
            Gets or sets the shortest bar or longest bar threshold value
            </summary>
        </member>
        <member name="T:Spire.Xls.ColorScale">
            <summary>
            The color scale condition in the conditional format
            </summary>
        </member>
        <member name="P:Spire.Xls.ColorScale.Criteria">
            <summary>
            Indicates the type, value, and the color
            of threshold criteria used in the color scale conditional format.
            </summary>
        </member>
        <member name="M:Spire.Xls.ColorScale.SetConditionCount(System.Int32)">
            <summary>
            Sets number of objects in the collection.
            </summary>
            <param name="count"></param>
        </member>
        <member name="T:Spire.Xls.ConditionalFormats">
            <summary>
            Contains a condition and the formatting for cells.
            </summary>
        </member>
        <member name="T:Spire.Xls.ConditionValue">
            <summary>
            Represents single condition value for iconset, databar, colorscale conditions.
            </summary>
        </member>
        <member name="P:Spire.Xls.ConditionValue.Type">
            <summary>
            specifies how the threshold values for a data bar, color scale,
            or icon set conditional format are determined
            </summary>
        </member>
        <member name="P:Spire.Xls.ConditionValue.Value">
            <summary>
            Returns or sets the shortest bar or longest bar threshold value for a data
            bar conditional format.
            </summary>
        </member>
        <member name="T:Spire.Xls.DataBar">
            <summary>
            Represents a data bar conditional formating rule.
            </summary>
        </member>
        <member name="P:Spire.Xls.DataBar.MinPoint">
            <summary>
            The shortest bar is evaluated for a data bar conditional format.
            </summary>
        </member>
        <member name="P:Spire.Xls.DataBar.MaxPoint">
            <summary>
            The longest bar is evaluated for a data bar conditional format.
            </summary>
        </member>
        <member name="P:Spire.Xls.DataBar.BarColor">
            <summary>
            Gets or sets the color of the bar in a data bar condition format.
            </summary>
        </member>
        <member name="P:Spire.Xls.DataBar.PercentMax">
            <summary>
            Gets or sets a value that specifies the length of the longest data bar as a percentage of cell width.
            </summary>
        </member>
        <member name="P:Spire.Xls.DataBar.PercentMin">
            <summary>
            Gets or sets a value that specifies the length of the shortest data bar as a percentage of cell width.
            </summary>
        </member>
        <member name="P:Spire.Xls.DataBar.ShowValue">
            <summary>
            Gets or sets a Boolean value that specifies if the value in the cell is displayed.
            </summary>
        </member>
        <member name="T:Spire.Xls.Validation">
            <summary>
            Represents data validation for a worksheet range.
            </summary>
        </member>
        <member name="P:Spire.Xls.Validation.DataRange">
            <summary>
            Returns data type validation for a range
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.IsItalic">
            <summary>
            True if the font style is italic. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.KnownColor">
            <summary>
            Returns or sets the primary excel color of the object.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.Color">
            <summary>
            Returns or sets the primary color of the font.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.IsBold">
            <summary>
            True if the font is bold.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.FontName">
            <summary>
            Returns or sets the font name. Read / write string.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.Size">
            <summary>
            Returns or sets the size of the font. Read / write integer.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.IsStrikethrough">
            <summary>
            True if the font is struck through with a horizontal line.
            Read / write Boolean
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.IsSubscript">
            <summary>
            True if the font is formatted as subscript.
            False by default. Read / write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.IsSuperscript">
            <summary>
            True if the font is formatted as superscript. False by default.
            Read/write Boolean
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.IsAutoColor">
            <summary>
            Indicates whether color is automatically selected. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelFont.Underline">
            <summary>
            Returns or sets the type of underline applied to the font. 
            </summary>
        </member>
        <member name="M:Spire.Xls.ExcelFont.GenerateNativeFont">
            <summary>
            Generates system font object.
            </summary>
            <returns>Font object.</returns>
        </member>
        <member name="M:Spire.Xls.ExcelHelper.CellNameToRowColumn(System.String,System.Int32@,System.Int32@)">
            <summary>
            Converts cell name to row and column index.
            </summary>
            <param name="name">Name of the cell.</param>
            <param name="iRow">Row index.</param>
            <param name="iColumn">Column index.</param>
        </member>
        <member name="M:Spire.Xls.ExcelHelper.GetColumnIndex(System.String)">
            <summary>
            Converts column name into index.
            </summary>
            <param name="columnName">Name to convert.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="T:Spire.Xls.ExcelInterior">
            <summary>
            Used to get or set interior settings.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelInterior.Gradient">
            <summary>
            Returns gradient object for this extended format.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelStyle.Workbook">
            <summary>
            Returns workbook.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelStyle.Borders">
            <summary>
            Returns a Borders collection that represents the borders of a style.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelStyle.Font">
            <summary>
            Returns a Font object that represents the font of the specified object.
            </summary>
        </member>
        <member name="T:Spire.Xls.HPageBreak">
            <summary>
            Represents a horizontal page break.
            </summary>
        </member>
        <member name="P:Spire.Xls.HPageBreak.Location">
            <summary>
            Location of the page break.
            </summary>
        </member>
        <member name="T:Spire.Xls.HyperLink">
            <summary>
            Represents a hyperlink.
            </summary>
        </member>
        <member name="P:Spire.Xls.HyperLink.Range">
            <summary>
            Returns a Range object that represents the range the specified hyperlink is attached to.
            </summary>
        </member>
        <member name="T:Spire.Xls.IconSet">
            <summary>
            Conditional formatting icon set condition.
            </summary>
        </member>
        <member name="P:Spire.Xls.IconSet.IconCriteria">
            <summary>
            Gets an IconCriteria collection
            </summary>
        </member>
        <member name="P:Spire.Xls.IconSet.IconSetType">
            <summary>
            Get or sets icon set type
            </summary>
        </member>
        <member name="P:Spire.Xls.IconSet.PercentileValues">
            <summary>
            Gets or sets a Boolean value indicates whether thresholds for an icon
            set conditional format are determined using percentiles. 
            </summary>
        </member>
        <member name="P:Spire.Xls.IconSet.IsReverseOrder">
            <summary>
            Gets or sets a Boolean value indicates whether the order of icons is
            reversed for an icon set.
            </summary>
        </member>
        <member name="P:Spire.Xls.IconSet.ShowIconOnly">
            <summary>
            Gets or sets a Boolean value indcates whether only the icon is displayed
            for an icon set conditional format.
            </summary>
        </member>
        <member name="T:Spire.Xls.License.XLSProtect">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Xls.MarkerDesigner">
            <summary>
            WorkbookDesignerused for template markers to the workbook and worksheet.
            </summary>
        </member>
        <member name="M:Spire.Xls.MarkerDesigner.AddDataTable(System.String,System.Data.DataTable)">
            <summary>
            Add datatable to template markers(Match column name automatically).
            </summary>
            <param name="paraName">Parameter Name</param>
            <param name="dataTable">Datatable object</param>
        </member>
        <member name="M:Spire.Xls.MarkerDesigner.AddDataView(System.String,System.Data.DataView)">
            <summary>
            Add dataview to template markers(Match column name automatically).
            </summary>
            <param name="paraName">Parameter Name</param>
            <param name="dataTable">Datatable object</param>
        </member>
        <member name="M:Spire.Xls.MarkerDesigner.AddParameter(System.String,System.Object)">
            <summary>
            Adds parameter to template markers.
            </summary>
            <param name="paraName">Parameter Name</param>
            <param name="paramValue">Parameter Value</param>
        </member>
        <member name="M:Spire.Xls.MarkerDesigner.RemoveParameter(System.String)">
            <summary>
            Removes parameter from template marker.
            </summary>
            <param name="paraName"></param>
        </member>
        <member name="M:Spire.Xls.MarkerDesigner.Contains(System.String)">
            <summary>
            Checks parameter is exist.
            </summary>
            <param name="paramName"></param>
        </member>
        <member name="M:Spire.Xls.MarkerDesigner.Apply">
            <summary>
            Apply templates markers
            </summary>
        </member>
        <member name="P:Spire.Xls.MarkerDesigner.Prefix">
            <summary>
            Prefix of Marker
            </summary>
        </member>
        <member name="P:Spire.Xls.MarkerDesigner.IsDetectDataTypes">
            <summary>
            Whether detect the dataTypes when apply marker
            </summary>
        </member>
        <member name="T:Spire.Xls.PageSetup">
            <summary>
            Represents the page setup description. The PageSetup object contains all page setup attributes (left margin, bottom margin, paper size, and so on) as properties.
            </summary>
        </member>
        <member name="T:Spire.Xls.RichText">
            <summary>
            RichText 的摘要说明。
            </summary>
        </member>
        <member name="M:Spire.Xls.RichText.GetFont(System.Int32)">
            <summary>
            Returns font for character at specified position.
            </summary>
            <param name="Position">Position</param>
        </member>
        <member name="M:Spire.Xls.RichText.SetFont(System.Int32,System.Int32,Spire.Xls.ExcelFont)">
            <summary>
            Sets font for specified range of characters.
            </summary>
            <param name="startPos">Position of first character.</param>
            <param name="endPos">Position of last character.</param>
            <param name="font">Font to set.</param>
        </member>
        <member name="M:Spire.Xls.RichTextObject.ClearFormatting">
            <summary>
            Clears formatting.
            </summary>
        </member>
        <member name="M:Spire.Xls.RichTextObject.Clear">
            <summary>
            Clears all.
            </summary>
        </member>
        <member name="P:Spire.Xls.RichTextObject.RtfText">
            <summary>
            Gets Rtf Text. Read-Only.
            </summary>
        </member>
        <member name="P:Spire.Xls.RichTextObject.IsFormatted">
            <summary>
            Indicates whether rich text string contains formatting Read-only.
            </summary>
        </member>
        <member name="T:Spire.Xls.Chart">
            <summary>
            Represents a chart in a workbook. The chart can be either an embedded chart (contained in a ChartObject) or a separate chart sheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.Series">
            <summary>
            Returns an object that represents either a single series (a Series object) or a collection of all the series (a SeriesCollection collection) in the chart or chart group. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.ChartTitleArea">
            <summary>
            Gets title text area. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.ChartArea">
            <summary>
            Returns a ChartArea object that represents the complete chart area for the chart
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.DataRange">
            <summary>
            DataRange for the chart series.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.DataTable">
            <summary>
            Returns a DataTable object that represents the chart data table.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.Floor">
            <summary>
            Returns a Floor object that represents the floor of the 3-D chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.Legend">
            <summary>
            Represents chart legend.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.PageSetup">
            <summary>
            Page setup for the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.PlotArea">
            <summary>
            Returns a PlotArea object that represents the plot area of a chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.PrimaryCategoryAxis">
            <summary>
            Returns primary category axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.PrimaryValueAxis">
            <summary>
            Returns primary value axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.PrimarySerieAxis">
            <summary>
            Returns primary series axis. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.SecondaryCategoryAxis">
            <summary>
            Returns secondary category axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.SecondaryValueAxis">
            <summary>
            Returns secondary value axis. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.Workbook">
            <summary>
            Workbook contains the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.Walls">
            <summary>
            Represents chart walls.
            </summary>
        </member>
        <member name="P:Spire.Xls.Chart.Worksheet">
            <summary>
            Worksheet which contains the chart.
            </summary>
        </member>
        <member name="T:Spire.Xls.ChartSheet">
            <summary>
            Represents a chart in a workbook. The chart can a separate chart sheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.Series">
            <summary>
            Returns an object that represents either a single series (a Series object) or a collection of all the series (a SeriesCollection collection) in the chart or chart group. 
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.ChartTitleArea">
            <summary>
            Gets title text area. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.ChartArea">
            <summary>
            Returns an object that represents the complete chart area for the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.DataRange">
            <summary>
            DataRange for the chart series.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.DataTable">
            <summary>
            Returns a DataTable object that represents the chart data table.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.Floor">
            <summary>
            Returns a Floor object that represents the floor of the 3-D chart
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.Legend">
            <summary>
            Represents chart legend.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.PageSetup">
            <summary>
            Page setup for the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.PlotArea">
            <summary>
            Returns a PlotArea object that represents the plot area of a chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.PrimaryCategoryAxis">
            <summary>
            Returns primary category axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.PrimaryValueAxis">
            <summary>
            Returns primary value axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.PrimarySerieAxis">
            <summary>
            Returns primary series axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.SecondaryCategoryAxis">
            <summary>
            Returns secondary category axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.SecondaryValueAxis">
            <summary>
            Returns secondary value axis.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.Workbook">
            <summary>
            Workbook which contains the chart.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.Walls">
            <summary>
            Represents chart walls.
            </summary>
        </member>
        <member name="P:Spire.Xls.ChartSheet.Comments">
            <summary>
            Represents comments collection for the worksheet. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Xls.ChartSheet.ToSVGStream(System.IO.Stream)">
            <summary>
            Convert chart to Svg stream
            </summary>
            <param name="stream">stream.</param>
        </member>
        <member name="T:Spire.Xls.ExcelComment">
            <summary>
            Represents excel comment for range.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelComment.RichText">
            <summary>
            Comment rich text.
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelCommentObject">
            <summary>
            Represents excel comment for range.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Author">
            <summary>
            Gets or sets the author of the comment. 
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.IsVisible">
            <summary>
            Indicates whether the comment is visible. 
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Row">
            <summary>
            Row of the commented range.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Column">
            <summary>
            Column of the commented range.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Text">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.AutoSize">
            <summary>
            Indicates whether the size of the specified object is changed automatically
            to fit text within its boundaries. Read/write Boolean.
            </summary>
        </member>
        <member name="M:Spire.Xls.ExcelCommentObject.Remove">
            <summary>
            Removes comment.
            </summary>
        </member>
        <member name="M:Spire.Xls.ExcelCommentObject.Scale(System.Int32,System.Int32)">
            <summary>
            Scales all comments.
            </summary>
            <param name="scaleWidth">Width scale in percents.</param>
            <param name="scaleHeight">Height scale in percents.</param>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.ResizeBehave">
            <summary>
            Specifies all possible settings for how drawing object shall be resized when the rows and columns between its start and ending anchor are resized or inserted.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Height">
            <summary>
            Height of comment.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Left">
            <summary>
            Position of left
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Name">
            <summary>
            Name of object.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Top">
            <summary>
            Top of object.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Width">
            <summary>
            Width of object.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.ShapeType">
            <summary>
            Shape type of object.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.AlternativeText">
            <summary>
            Alternative text.
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentObject.Rotation">
            <summary>
            Returns or sets the rotation of the shape, in degrees.
            </summary>   
        </member>
        <member name="T:Spire.Xls.VPageBreak">
            <summary>
            Represents a vertical page break.
            </summary>
        </member>
        <member name="P:Spire.Xls.VPageBreak.Location">
            <summary>
            Returns or sets the cell (a Range object) that defines the page-break location.
            </summary>
        </member>
        <!-- 对于成员“T:Spire.Xls.Workbook”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Xls.Workbook.#ctor">
            <summary>
            Create a new instance of workbook.
            </summary>
        </member>
        <member name="M:Spire.Xls.Workbook.InitCalcEngine">
            <summary>
            Initilize Calc engine
            </summary>
        </member>
        <member name="M:Spire.Xls.Workbook.CalculateAllValue">
            <summary>
            Caculate all formula for the workbook
            </summary>
        </member>
        <member name="M:Spire.Xls.Workbook.SetOleSize(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            set the size of the visible range of cells when this workbook is displyed as an embedded obect in another document;
            </summary>
            <param name="firstRow">the visible range's first row index</param>
            <param name="firstColumn">the visible range's first column index</param>
            <param name="lastRow">the visible range's last row index</param>
            <param name="lastColumn">the visible range's last column index</param>
        </member>
        <member name="M:Spire.Xls.Workbook.GetOleSize">
            <summary>
            get the size of the visible range of cells when this workbook is displyed as an embedded obect in another document;
            </summary>
            <returns>if there does not set the size ,return null</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.CaculateFormulaValue(System.String)">
            <summary>
            Computes the string formula
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Workbook.CreateFont">
            <summary>
            Creates a font object and add it to the workbook.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Workbook.CreateFont(System.Drawing.Font)">
            <summary>
            Creates a font object and add it to the workbook.
            </summary>
            <param name="font">Font to add</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Workbook.CreateEmptySheet">
            <summary>
            Create a new worksheet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Workbook.CreateEmptySheet(System.String)">
            <summary>
             Create a new worksheet.
            </summary>
            <param name="name">Sheet name.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Workbook.CreateEmptySheets(System.Int32)">
            <summary>
            Create workbook with specified number of worksheets.
            </summary>
            <param name="sheetCount"></param>
        </member>
        <member name="M:Spire.Xls.Workbook.CreateEmptySheets(System.String[])">
            <summary>
            Create workbook with specified names of worksheets.
            </summary>
            <param name="sheetNames"></param>
        </member>
        <member name="M:Spire.Xls.Workbook.ChangePaletteColor(System.Drawing.Color,System.Int32)">
            <summary>
            Changes the palette for the spreadsheet in the specified index. 
            </summary>
            <param name="color">Color structure</param>
            <param name="index">Palette index,Value should be from 0 to 55</param>
        </member>
        <member name="M:Spire.Xls.Workbook.CopyToClipboard">
            <summary>
            Copies whole workbook to the clipboard.
            </summary>
        </member>
        <member name="M:Spire.Xls.Workbook.CopyToClipboard(Spire.Xls.Worksheet)">
            <summary>
            Copies the selected worksheet to clipboard.
            </summary>
            <param name="worksheet"></param>
        </member>
        <member name="M:Spire.Xls.Workbook.PasteFromClipboard">
            <summary>
            Copies workbook and all its worksheets from the clipboard.
            </summary>
        </member>
        <member name="M:Spire.Xls.Workbook.IsPasswordProtected(System.String)">
            <summary>
            check file is password protect
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromFile(System.String)">
            <summary>
            Loads a file and imports its data. 
            </summary>
            <param name="FileName">File name.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromFile(System.String,Spire.Xls.ExcelVersion)">
            <summary>
            Loads a file and imports its data. 
            </summary>
            <param name="fileName">File name</param>
            <param name="version">Excel version</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromFile(System.String,System.Boolean)">
            <summary>
            Loads a file and imports its data. 
            </summary>
            <param name="fileName">File name</param>
            <param name="preserveMode">Preserve mode</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromFile(System.String,System.String)">
            <summary>
            Loads text files stream with user defined separator. 
            </summary>
            <param name="fileName">File name</param>
            <param name="separator">Delimiter of text file. </param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromFile(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Loads text files with user defined separator.
            </summary>
            <param name="fileName">File name.</param>
            <param name="separator">Delimiter of text file.</param>
            <param name="row">Start row.</param>
            <param name="column">Start column.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromXml(System.String)">
            <summary>
            Loads a xml file and imports its data. 
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromXml(System.IO.Stream)">
            <summary>
            Loads a xml file and imports its data. 
            </summary>
            <param name="stream">Stream contains data.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromStream(System.IO.Stream)">
            <summary>
            Load workbook from the stream.
            </summary>
            <param name="stream">Stream contains data.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromStream(System.IO.Stream,Spire.Xls.ExcelVersion)">
            <summary>
            Load workbook from the stream.
            </summary>
            <param name="stream">Stream contains data</param>
            <param name="version">Excel version</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromStream(System.IO.Stream,System.Boolean)">
            <summary>
            Load workbook from the stream.
            </summary>
            <param name="stream">Stream contains data.</param>
            <param name="loadStyles">Indicates whether loads styles.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromStream(System.IO.Stream,System.String,System.Int32,System.Int32)">
            <summary>
            Loads text files stream with user defined separator.max row 60000.
            </summary>
            <param name="stream">File stream.</param>
            <param name="separator">Delimiter of text file.</param>
            <param name="row">Start row.</param>
            <param name="column">Start column.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadFromStream(System.IO.Stream,System.String,System.Int32,System.Int32,Spire.Xls.ExcelVersion)">
            <summary>
            Loads text files stream with user defined separator. Version2007 support 60000+ row 
            </summary>
            <param name="stream">File stream.</param>
            <param name="separator">Delimiter of text file.</param>
            <param name="row">Start row.</param>
            <param name="column">Start column.</param>
            <param name="version">Excel version.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadTemplateFromFile(System.String)">
            <summary>
            Load workbook from the excel template.
            </summary>
            <param name="fileName">File name</param>
        </member>
        <member name="M:Spire.Xls.Workbook.LoadTemplateFromFile(System.String,System.Boolean)">
            <summary>
            Load workbook from the excel template.
            </summary>
            <param name="fileName">File name</param>
            <param name="loadStyles">Indicates whehter load styles.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToFile(System.String)">
            <summary>
            Saves changes to the workbook in a different file
            </summary>
            <param name="FileName">File name.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveAsImage(System.Int32,System.Single,System.Single)">
            <summary>
            Save workbook to image.
            </summary>
            <param name="sheetIndex">sheet Index</param>
            <param name="dpiX">Dpi X</param>
            <param name="dpiY">Dpi Y</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Workbook.GetPageData">
            <summary>
            Save workbook to images.
            </summary>
            <param name="dpiX">Dpi X</param>
            <param name="dpiY">Dpi Y</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToFile(System.String,Spire.Xls.FileFormat)">
            <summary>
            Saves changes to the workbook in a different file
            </summary>
            <param name="fileName">File name</param>
            <param name="fileFormat">File format</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToFile(System.String,Spire.Xls.ExcelVersion)">
            <summary>
            Saves changes to the workbook in a different file
            </summary>
            <param name="fileName">File name</param>
            <param name="version">Excel version</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToFile(System.String,System.String)">
            <summary>
            Saves changes to the workbook in a different file
            </summary>
            <param name="fileName">File name.</param>
            <param name="separator"></param>
        </member>
        <member name="M:Spire.Xls.Workbook.Save">
            <summary>
            Saves changes to the specified workbook
            </summary>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveAsTemplate(System.String)">
            <summary>
            Save workbook as template to file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveAsTemplate(System.String,System.Web.HttpResponse)">
            <summary>
            Save workbook as template to response.
            </summary>
            <param name="fileName">File name.</param>
            <param name="response">Http response.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveAsXml(System.String)">
            <summary>
            Save workbook to an XML data file. 
            </summary>
            <param name="fileName">XML file name.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveAsXml(System.IO.Stream)">
            <summary>
            Save workbook as XML format to stream. 
            </summary>
            <param name="stream">Stream object.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToStream(System.IO.Stream)">
            <summary>
            Save workbook the stream
            </summary>
            <param name="Stream">Stream object</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveChartAsImage(Spire.Xls.Worksheet,System.Int32)">
            <summary>
            Save chart to image.
            </summary>
            <param name="worksheet">work sheet</param>
            <param name="chartIndex">chart index</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveChartAsImage(Spire.Xls.Worksheet)">
            <summary>
            Save chart to images.
            </summary>
            <param name="worksheet">worksheet instance</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveChartAsImage(Spire.Xls.ChartSheet)">
            <summary>
            Save chart to image.
            </summary>
            <param name="worksheet">chart sheet</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveChartAsEmfImage(Spire.Xls.Worksheet)">
            <summary>
            Save chart to vector images.
            </summary>
            <param name="worksheet">worksheet instance</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveChartAsEmfImage(Spire.Xls.Worksheet,System.Int32)">
            <summary>
            Save chart to vector image.
            </summary>
            <param name="worksheet">work sheet</param>
            <param name="chartIndex">chart index</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveChartAsEmfImage(Spire.Xls.Worksheet,System.Int32,System.IO.Stream)">
            <summary>
            Save chart to vector image.
            </summary>
            <param name="worksheet">work sheet</param>
            <param name="chartIndex">chart index</param>
            <param name="emfStream">output stream</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToStream(System.IO.Stream,Spire.Xls.FileFormat)">
            <summary>
            Save workbook to stream.
            </summary>
            <param name="Stream"></param>
            <param name="fileFormat"></param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToStream(System.IO.Stream,System.String)">
            <summary>
            Save workbook the stream.
            </summary>
            <param name="stream">Stream object.</param>
            <param name="separator">Separator</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToHttpResponse(System.String,System.Web.HttpResponse)">
            <summary>
            Save workbook to the http response.
            </summary>
            <param name="FileName">File Name</param>
            <param name="response">Http response</param>
            <param name="saveType">Save type : attachment or inline mode</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToHttpResponse(System.String,System.Web.HttpResponse,System.Boolean)">
            <summary>
            Save workbook to the http response.
            </summary>
            <param name="FileName">File name</param>
            <param name="response">Http response.</param>
            <param name="isInlineMode">True - inline mode, False - Attachment mode.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToHttpResponse(System.String,System.Web.HttpResponse,Spire.Xls.HttpContentType)">
            <summary>
            Save workbook to the http response.
            </summary>
            <param name="FileName">File Name</param>
            <param name="response">Http response</param>
            <param name="httpContextType">Http context type</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SaveToHttpResponse(System.String,System.Web.HttpResponse,Spire.Xls.HttpContentType,Spire.Xls.FileFormat)">
            <summary>
            Save workbook to the http response.
            </summary>
            <param name="FileName">File Name</param>
            <param name="response">Http response</param>
            <param name="httpContextType">Http context type</param>
        </member>
        <member name="M:Spire.Xls.Workbook.SetWriteProtectionPassword(System.String)">
            <summary>
            Sets write protection password.
            </summary>
            <param name="password">Password to set</param>
        </member>
        <member name="P:Spire.Xls.Workbook.Worksheets">
            <summary>
            Returns a Sheets collection that represents all the worksheets in the specified workbook. Read-only Sheets object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.Colors">
            <summary>
            Returns colors in the palette for the workbook. The palette has 56 entries, each represented by an RGB value. Read/write Object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.Styles">
            <summary>
            Returns a Styles collection that represents all the styles in the specified workbook. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.ActiveSheetIndex">
            <summary>
            Gets or sets index of the active worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.Charts">
            <summary>
            Returns a Sheets collection that represents all the chart sheets in the specified workbook. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.DocumentProperties">
            <summary>
            Returns a BuiltInDocumentProperties collection that represents all the built-in document properties for the specified workbook. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.ActiveSheet">
            <summary>
            Returns an object that represents the active sheet (the sheet 
            on top) in the active workbook or in the specified window or 
            workbook. Returns Nothing if no sheet is active. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.UseStorageMode">
            <summary>
            User Compound storage mode
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.OptimizeImport">
            <summary>
            Indicates whether to optimize Import data. This option will
            take effect only on Import methods that are available with the worksheet
            WARNING: Setting this property to True can decrease memory significantly,
            but will increase the performance of data import .
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.CalculationMode">
            <summary>
            Get or set calculation mode.
            </summary>
        </member>
        <!-- 对于成员“P:Spire.Xls.Workbook.NameRanges”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Xls.Workbook.AddInFunctions">
            <summary>
            Returns collection of add-in functions. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.DataSorter">
            <summary>
            Gets Data sorter to sort the data..
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.CodeName">
            <summary>
            Name which used by macros to access to workbook items.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.Date1904">
            <summary>
            True if the workbook uses the 1904 date system. Read/write Boolean.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.DisableMacrosStart">
            <summary>
            Allows users to disable load of macros from document.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.SelectedTab">
            <summary>
            Gets or sets tab index of selected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.ShowTabs">
            <summary>
            Get or sets a value whether the Workbook tabs are displayed.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.FileName">
            <summary>
            Gets file name.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.HasDuplicatedNames">
            <summary>
            Indicates whether original file contains duplicated external names.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.HasMacros">
            <summary>
            Indicates whether contains VBA macros.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.IsWindowProtection">
            <summary>
            Indicates window is protected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.IsRightToLeft">
            <summary>
            Indicates whether worksheet is displayed right to left.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.IsCellProtection">
            <summary>
            Indicates whether cells are protected.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.ReadOnly">
            <summary>
            Indicates whether the workbook has been opened as Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.IsSaved">
            <summary>
            Indicates whether workbook changes have been saved. 
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.DefaultFontName">
            <summary>
            Returns or sets the name of the default font.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.OpenPassword">
            <summary>
            Returns or sets password to encrypt document.
            </summary>
        </member>
        <member name="P:Spire.Xls.Workbook.DefaultFontSize">
            <summary>
            Returns or sets the default font size.
            </summary>
        </member>
        <member name="M:Spire.Xls.Workbook.ColumnWidthToPixels(System.Double)">
            <summary>
            onverts column width in characters into column width in pixels.
            </summary>
            <param name="columnWidth">Column width in characters.</param>
            <returns>Column width in pixels.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.PixelsToColumnWidth(System.Double)">
            <summary>
            Converts column width in pixels into column width in characters.
            </summary>
            <param name="pixels">Column width in pixels.</param>
            <returns>Column width in characters.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.Protect(System.String)">
            <summary>
            protect file also protect workbook window and structure.
            </summary>
            <param name="passwordToOpen">password to open file.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.Protect(System.String,System.Boolean,System.Boolean)">
            <summary>
            protect file,also Indicates whether protect workbook window and structure or not
            </summary>
            <param name="passwordToOpen">password to open file.</param>
            <param name="bIsProtectWindow">Indicates if protect workbook window.</param>
            <param name="bIsProtectContent">Indicates if protect workbook content.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.ProtectWorkbook(System.Boolean,System.Boolean,System.String)">
            <summary>
            Sets protection for workbook.
            </summary>
            <param name="bIsProtectWindow">Indicates if protect workbook window.</param>
            <param name="bIsProtectContent">Indicates if protect workbook content.</param>
            <param name="password">password</param>
        </member>
        <member name="M:Spire.Xls.Workbook.UnProtectWorkbook(System.String)">
            <summary>
            unprotect workbook window and structure
            </summary>
            <param name="password">password</param>
        </member>
        <member name="M:Spire.Xls.Workbook.UnProtect">
            <summary>
            unprotect file
            also upprotect workbook window and structure
            </summary>
        </member>
        <member name="M:Spire.Xls.Workbook.UnProtect(System.String)">
            <summary>
            unprotect file
            also upprotect workbook window and structure
            </summary>
            <param name="bookWindowAndStructurePassword">password for protect workbook window and structure</param>
        </member>
        <member name="M:Spire.Xls.Workbook.GetPaletteColor(Spire.Xls.ExcelColors)">
            <summary>
            Gets excel color from workbook palette.
            </summary>
            <param name="color">Index from palette array.</param>
            <returns>RGB Color.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.Replace(System.String,System.String)">
            <summary>
            Replaces cell's value by specified value.
            </summary>
            <param name="oldValue">Value to replace.</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:Spire.Xls.Workbook.Replace(System.String,System.DateTime)">
            <summary>
            Replaces cell's value by specified value.
            </summary>
            <param name="oldValue">Value to replace.</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:Spire.Xls.Workbook.Replace(System.String,System.Double)">
            <summary>
            Replaces cell's value by specified value..
            </summary>
            <param name="oldValue">Value to replace.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.Replace(System.String,System.String[],System.Boolean)">
            <summary>
            Replaces cell's value from array.
            </summary>
            <param name="oldValue">Value to replace.</param>
            <param name="newValues">New values.</param>
            <param name="isVertical">
            Indicates whether new values should be inserted vertically.
            </param>
        </member>
        <member name="M:Spire.Xls.Workbook.Replace(System.String,System.Int32[],System.Boolean)">
            <summary>
            Replaces cell's value from array.
            </summary>
            <param name="oldValue">Value to replace.</param>
            <param name="newValues">New values.</param>
            <param name="isVertical">
            Indicates whether new values should be inserted vertically.
            </param>
        </member>
        <member name="M:Spire.Xls.Workbook.Replace(System.String,System.Double[],System.Boolean)">
            <summary>
            Replaces cell's value from array.
            </summary>
            <param name="oldValue">Value to replace.</param>
            <param name="newValues">New values.</param>
            <param name="isVertical">
            Indicates whether new values should be inserted vertically.
            </param>
        </member>
        <member name="M:Spire.Xls.Workbook.Replace(System.String,System.Data.DataTable,System.Boolean)">
            <summary>
            Replaces cell's value from data table values.
            </summary>
            <param name="oldValue">Value to replace.</param>
            <param name="newValues">New data.</param>
            <param name="includeColumnName">Indicates whether includes column name.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.Replace(System.String,System.Data.DataColumn,System.Boolean)">
            <summary>
            Replaces cell's value from data column values.
            </summary>
            <param name="oldValue">Value to replace.</param>
            <param name="newValues">New data.</param>
            <param name="includeColumnName">Indicates whether includes column name.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.UpdateFormula(Spire.Xls.CellRange,Spire.Xls.CellRange)">
            <summary>
            Updates formulas.
            </summary>
            <param name="sourceRange">Source range.</param>
            <param name="destRange">Destination range.</param>
        </member>
        <member name="M:Spire.Xls.Workbook.ContainsFont(Spire.Xls.ExcelFont)">
            <summary>
            Indicates whether the workbook contains specified font.
            </summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Xls.Workbook.ResetPalette">
            <summary>
            Resets the color palette to the default colors. 
            </summary>
        </member>
        <member name="M:Spire.Xls.Workbook.GetMatchingColor(System.Drawing.Color)">
            <summary>
            Find best matching Color in workbook palette. 
            </summary>
            <param name="color">Color to search for.</param>
            <returns>Workbook palette color.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.GetMatchingColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Find best matching Color in workbook palette.
            </summary>
            <param name="r">Red color.</param>
            <param name="g">Green color.</param>
            <param name="b">Blue color.</param>
            <returns>Workbook palette color.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindAllBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool.
            </summary>
            <param name="boolValue">Bool value to search for</param>
            <returns>Found ranges</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindAllDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input datetime.
            </summary>
            <param name="dateTimeValue">Datetime value to search for.</param>
            <returns>Found ranges.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindAllNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input double.
            </summary>
            <param name="doubleValue">Double value to search for.</param>
            <param name="formulaValue">Indicates whether includes formula value to search for.</param>
            <returns>Found ranges.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindAllString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string.
            </summary>
            <param name="stringValue">String value to search for</param>
            <param name="formula">Indicates whether includes formula to search for.</param>
            <param name="formulaValue">Indicates whether includes formula value to search for.</param>
            <returns>Found ranges.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindAllTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with the input time span.
            </summary>
            <param name="timeSpanValue"></param>
            <returns>Found ranges.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool.
            </summary>
            <param name="boolValue">Bool value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input datetime.
            </summary>
            <param name="dateTimeValue">Datetime value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input number.
            </summary>
            <param name="doubleValue">Double value to search for.</param>
            <param name="formulaValue">Indicates whether includes formula value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string.
            </summary>
            <param name="stringValue">String value to search for.</param>
            <param name="formula">Indicates whether includes formula to search for.</param>
            <param name="formulaValue">Indicates whether includes formula value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Workbook.FindTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with the input time span.
            </summary>
            <param name="timeSpanValue">Time span value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="P:Spire.Xls.Workbook.PrintDocument">
            <summary>
            Gets the PrintDocument
            </summary>
        </member>
        <member name="T:Spire.Xls.Workbook.SpireXlsFreeInfo">
            <summary>
            Represents the method that will handle an event that with event data.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The args that contains event data.</param>
        </member>
        <member name="E:Spire.Xls.Workbook.FreeInformation">
            <summary>
            Get Spire.Doc free version limit information.
            </summary>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindAll(System.String,Spire.Xls.FindType,Spire.Xls.ExcelFindOptions)">
            <summary>
            Finds the all cells with specified string value.
            </summary>
            <param name="findValue">Value to search.</param>
            <param name="flags">Type of value to search.</param>
            <param name="findOptions">Way to search.</param>
            <returns>All found cells, or Null if value was not found.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindAllNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input number.
            </summary>
            <param name="doubleValue">Double value to search for.</param>
            <param name="formulaValue">Indicates if includes formula value.</param>
            <returns>Found ranges.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindAllString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string.
            </summary>
            <param name="stringValue">String value to search for.</param>
            <param name="formula">Indicates if includes formula.</param>
            <param name="formulaValue">Indicates if includes formula value.</param>
            <returns>Found ranges.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindAllDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input date time.
            </summary>
            <param name="dateTimeValue">Datetime value to search for.</param>
            <returns>Found ranges.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindAllTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with the input time span.
            </summary>
            <param name="timeSpanValue">Time span value to search for.</param>
            <returns>Found ranges.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindAllBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool.
            </summary>
            <param name="boolValue">Bool value to search for.</param>
            <returns>Found ranges.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindBool(System.Boolean)">
            <summary>
            Finds the cell with the input bool.
            </summary>
            <param name="boolValue">Bool value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindNumber(System.Double,System.Boolean)">
            <summary>
            Finds the cell with the input double.
            </summary>
            <param name="doubleValue">Double value to search for.</param>
            <param name="formulaValue">Indicates if includes formula value.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the cell with the input string.
            </summary>
            <param name="stringValue">String value to search for.</param>
            <param name="formula">Indicates whether includes formula.</param>
            <param name="formulaValue">Indicates whether includes formula value.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindDateTime(System.DateTime)">
            <summary>
            Finds the cell with the input date time.
            </summary>
            <param name="dateTimeValue">DateTime value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.FindTimeSpan(System.TimeSpan)">
            <summary>
            Finds the cell with the input time span.
            </summary>
            <param name="timeSpanValue">Time span value to search for.</param>
            <returns>Found range.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.CopyFrom(Spire.Xls.Worksheet)">
            <summary>
            Copy data from specified worksheet.
            </summary>
            <param name="worksheet">worksheet object</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.Copy(Spire.Xls.CellRange,Spire.Xls.CellRange)">
            <summary>
            Copys data from a source range to a destination range. 
            </summary>
            <param name="sourceRange">Source range.</param>
            <param name="destRange">Destination range.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.Copy(Spire.Xls.CellRange,Spire.Xls.CellRange,System.Boolean)">
            <summary>
            Copys data from a source range to a destination range. 
            </summary>
            <param name="sourceRange">Source range.</param>
            <param name="destRange">Destination range.</param>
            <param name="copyStyle">Indicates whether copys styles.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.Copy(Spire.Xls.CellRange,Spire.Xls.CellRange,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Copys data from a source range to a destination range. 
            </summary>
            <param name="sourceRange">Source range.</param>
            <param name="destRange">Destination range</param>
            <param name="copyStyle">Indicates whether copy styles.</param>
            <param name="updateReference">Indicates whether update reference ranges.</param>
            <param name="ignoreSize">Indicates whether check range sizes.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.Copy(Spire.Xls.CellRange,Spire.Xls.CellRange,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Copys data from a source range to a destination range. 
            </summary>
            <param name="sourceRange">Source range.</param>
            <param name="destRange">Destination range</param>
            <param name="copyStyle">Indicates whether copy styles.</param>
            <param name="updateReference">Indicates whether update reference ranges.</param>
            <param name="ignoreSize">Indicates whether check range sizes.</param>
            <param name="copyShape">Indicates whether copy shape.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.Copy(Spire.Xls.CellRange,Spire.Xls.Worksheet,System.Int32,System.Int32)">
            <summary>
            Copy data from source range to destination worksheet.
            </summary>
            <param name="sourceRange">Source range.</param>
            <param name="worksheet">Destination worksheet</param>
            <param name="destRow">Row index of destination worksheet.</param>
            <param name="destColumn">Column index of destination worksheet.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.Copy(Spire.Xls.CellRange,Spire.Xls.Worksheet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copy data from source range to destination worksheet.
            </summary>
            <param name="sourceRange">Source range</param>
            <param name="worksheet">Destination worksheet.</param>
            <param name="destRow">Row index of destination worksheet.</param>
            <param name="destColumn">Column index of destination worksheet.</param>
            <param name="copyStyle">Indicates whehter copy styles.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.Copy(Spire.Xls.CellRange,Spire.Xls.Worksheet,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Copy data from source range to destination worksheet.
            </summary>
            <param name="sourceRange">Source range</param>
            <param name="worksheet">Destination worksheet.</param>
            <param name="destRow">Row index of destination worksheet.</param>
            <param name="destColumn">Column index of destination worksheet.</param>
            <param name="copyStyle">Indicates whehter copy styles.</param>
            <param name="updateRerence">Indicates whether update reference range.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.Move(Spire.Xls.CellRange,Spire.Xls.CellRange)">
            <summary>
            Move data from source range to destination range.
            </summary>
            <param name="sourceRange">Source range.</param>
            <param name="destRange">Destination range.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.ExportDataTable(Spire.Xls.CellRange,System.Boolean)">
            <summary>
            Exports worksheet data into a DataTable.
            </summary>
            <param name="range">Range to export.</param>
            <param name="exportColumnNames">Indicates if export column name.</param>
            <returns>exported datatable</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.ExportDataTable(Spire.Xls.CellRange,System.Boolean,System.Boolean)">
            <summary>
            Exports worksheet data into a DataTable.
            </summary>
            <param name="range">Range to export.</param>
            <param name="exportColumnNames">Indicates if export column name.</param>
            <param name="computedFormulaValue">Indicates wheter compute formula value.</param>
            <returns>exported datatable</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.ExportDataTable(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Exports worksheet data into a DataTable
            </summary>
            <param name="firstRow">Row of first cell.</param>
            <param name="firstColumn">Column of first cell.</param>
            <param name="maxRows">Maximun rows to export.</param>
            <param name="maxColumns">Maximun columns to export.</param>
            <param name="exportColumnNames">Indicates if export column name.</param>
            <returns>Exported datatable.</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.GetIntersectRanges(Spire.Xls.CellRange,Spire.Xls.CellRange)">
            <summary>
            Intersects two ranges.
            </summary>
            <param name="range1">First range.</param>
            <param name="range2">Second range.</param>
            <returns>Intersection of two ranges</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.Merge(Spire.Xls.CellRange,Spire.Xls.CellRange)">
            <summary>
            Combines a range of cells into a single cell. 
            </summary>
            <param name="range1">First range.</param>
            <param name="range2">Second range.</param>
            <returns>Merged ranges</returns>
        </member>
        <member name="M:Spire.Xls.Worksheet.SetDefaultColumnStyle(System.Int32,Spire.Xls.CellStyle)">
            <summary>
            Sets default style for column.
            </summary>
            <param name="columnIndex">Column index.</param>
            <param name="defaultStyle">Default style.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.SetDefaultColumnStyle(System.Int32,System.Int32,Spire.Xls.CellStyle)">
            <summary>
            Sets default style for column.
            </summary>
            <param name="firstColumnIndex">First column index.</param>
            <param name="lastColumnIndex">Last column index.</param>
            <param name="defaultStyle">Default style.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.SetDefaultRowStyle(System.Int32,Spire.Xls.CellStyle)">
            <summary>
            Sets default style for row.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="defaultStyle">Default style.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.SetDefaultRowStyle(System.Int32,System.Int32,Spire.Xls.CellStyle)">
            <summary>
            Sets default style for row.
            </summary>
            <param name="firstRowIndex">First row index.</param>
            <param name="lastRowIndex">Last row index.</param>
            <param name="defaultStyle">Default style.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.RemoveRange(Spire.Xls.CellRange)">
            <summary>
            Removes range from list.
            </summary>
            <param name="range">Specified range.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes range from list.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="columnIndex">Column index.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.FreezePanes(System.Int32,System.Int32)">
            <summary>
            Freezes panes at the specified cell in the worksheet. 
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="columnIndex">Column index.</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.SetActiveCell(Spire.Xls.CellRange)">
            <summary>
            Sets active cell
            </summary>
            <param name="range">Cell to activate.</param>
        </member>
        <member name="P:Spire.Xls.Worksheet.Cells">
            <summary>
            Returns all used cells in the worksheet. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.Columns">
            <summary>
            Rrepresents all used columns on the specified worksheet. Read-only Range object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.Charts">
            <summary>
            Returns charts collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.Comments">
            <summary>
            Returns comments collection for this worksheet. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.HPageBreaks">
            <summary>
            Returns an HPageBreaks collection that represents the horizontal
            page breaks on the sheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.HyperLinks">
            <summary>
            Collection of all worksheet's hyperlinks.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.PageSetup">
            <summary>
            Returns a PageSetup object that contains all the page setup settings
            for the specified object. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.Pictures">
            <summary>
            Pictures collection. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.Range">
            <summary>
            Returns a Range object that represents the used range on the
            specified worksheet. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.Rows">
            <summary>
            Represents all the rows on the specified worksheet. Read-only Range object.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.VPageBreaks">
            <summary>
            Returns a VPageBreaks collection that represents the vertical page
            breaks on the sheet. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.Item(System.Int32,System.Int32)">
            <summary>
            Get cell range.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.Worksheet.Item(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get cell range.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <param name="lastRow"></param>
            <param name="lastColumn"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.Worksheet.Item(System.String)">
            <summary>
            Get cell range.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Xls.Worksheet.AllocatedRange">
            <summary>
            Returns a Range object that represents the used range on the
            specified worksheet. Read-only.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.PrintRange">
            <summary>
            Print area of worksheet.
            </summary>
        </member>
        <member name="P:Spire.Xls.Worksheet.MergedCells">
            <summary>
            Returns all merged ranges. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Xls.Worksheet.RemovePicture(System.Int32)">
            <summary>
            Remove picture from this worksheet.
            </summary>
            <param name="index">Picture ID</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.RemovePicture(System.String)">
            <summary>
            Remove picture from this worksheet.
            </summary>
            <param name="picturename">Picture name</param>
        </member>
        <member name="M:Spire.Xls.Worksheet.RemovePicture(Spire.Xls.Core.IPictureShape)">
            <summary>
            Remove picture from this worksheet.
            </summary>
            <param name="picture">A pictureshape</param>
        </member>
        <member name="T:Spire.Xls.CellBorderWrapper">
            <summary>
            Represents the border of an object.
            </summary>
        </member>
        <member name="M:Spire.Xls.CellBorderWrapper.CopyFrom(Spire.Xls.CellBorder)">
            <summary>
            Copies styles from source border.
            </summary>
            <param name="baseBorder">source border.</param>
        </member>
        <member name="T:Spire.Xls.CellStyleWrapper">
            <summary>
            Represents a style description for a range.
            </summary>
        </member>
        <member name="F:Spire.Xls.CellStyleWrapper.m_range">
            <summary>
            Parent range.
            </summary>
        </member>
        <member name="M:Spire.Xls.CellStyleWrapper.#ctor(Spire.Xls.CellRange)">
            <summary>
            Creates new instance of cell style.
            </summary>
            <param name="range">Parent range.</param>
        </member>
        <member name="M:Spire.Xls.CellStyleWrapper.#ctor(Spire.Xls.Core.Spreadsheet.XlsRange,System.Int32)">
            <summary>
            Creates new instance of cell style.
            </summary>
            <param name="range">Parent range.</param>
            <param name="iXFIndex">Index of extended format to wrap.</param>
        </member>
        <member name="P:Spire.Xls.CellStyleWrapper.Borders">
            <summary>
            Returns a Borders collection that represents the borders of a style.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleWrapper.Font">
            <summary>
            Returns a Font object that represents the font of the specified object.
            </summary>
        </member>
        <member name="P:Spire.Xls.CellStyleWrapper.Workbook">
            <summary>
            Returns  workbook contains the style.. 
            </summary>
        </member>
        <member name="P:Spire.Xls.ExcelCommentWrapper.RichText">
            <summary>
            Gets rich text object.
            </summary>
        </member>
        <member name="T:Spire.Xls.ExcelFontWrapper">
            <summary>
            Encapsulates the font object used in a spreadsheet
            </summary>
        </member>
        <member name="T:Spire.Xls.XlsFontStyle">
            <summary>
            Encapsulates the font object used in a spreadsheet
            </summary>
        </member>
        <member name="T:Spire.Xls.ConditionalFormat">
            <summary>
            Contains a condition and the formatting for cells.
            </summary>
        </member>
        <member name="M:Spire.CompoundFile.XLS.CompoundStream.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Spire.CompoundFile.XLS.Net.FAT.m_lstFatChains">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.CompoundFile.XLS.Net.FAT.SectorShift">
            <summary>
            Sector size.
            </summary>
        </member>
    </members>
</doc>
